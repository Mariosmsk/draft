clc
clear
path(path,strcat(pwd,'\toolkit\epanet'));
path(path,strcat(pwd,'\toolkit\epanet-msx')); 
delete  s*
delete *.$$$



%STEP=1.21; %CCWI2015 run 100 scenarios with 20% uniform uncertainty in demands, roughness and based demands
%STEP=1.3; %CCWI2015 create 10 levels
%STEP=2.1; %CCWI2015 create scenarios without contamination events
%STEP=2.2; %CCWI2015 create scenarios with contamination events
%STEP=5.10; %CCWI2015 calculate TP/FP/FN/TN for the upper/lower bounds method (Absolute ROC)
%STEP=5.11; %CCWI2015 calculate TP/FP/FN/TN for the upper/lower bounds method (% curve)
%STEP=5.12; %Results with test set 357 simulations
%STEP=5.21;
%STEP=5.2; %CCWI2015 calculate TP/FP/FN/TN for the multi-level-bounds method
%STEP=5.3; %CCWI2015 calculate TP/FP/FN/TN for the multi-level-bound method (NEW)
%STEP=5.4; %CCWI2015 FD with multiple levels
%STEP=2.3; %run random scenarios for testing
%STEP=6; %PLOTS


STEP=9.21; % RUN 100 MC simulations and compute error bounds
STEP=9.3;  % compute BB bounds
STEP=9.4;  % compute BB bounds
STEP=9.5; % find a suitable scenario
STEP=9.6; %prepare CSV file

if STEP==9.6
    load canyars_january_2014
    tq=(sensors_data{1}.reading{1}.t);

   load XallS500FaultSeed2
    SensorNodesID={'RM00136704','RM00141346','XX00077521A','RM00374490','XX00077493E'};
    filename='canyars_quality_contamination.xlsx';
    k=1;
    n=9;
    C=[Xall{n}{1}(:,1);Xall{n}{2}(:,1);Xall{n}{3}(:,1);Xall{n}{4}(:,1);Xall{n}{5}(:,1)]
    for i=1:length(SensorNodesID)
        for j=1:size(Xall{1}{1},1)
            A{k}={SensorNodesID{i}, Xall{n}{i}(j,1)};
            k=k+1;
        end
    end
end

if STEP==9.5
   load XallS500FaultSeed2
    for i=[4,8,9,12,14,17,20,21,22]
       figure(1)
       plot(Xall{i}{1});hold all;plot(Xall{i}{2});plot(Xall{i}{3});plot(Xall{i}{4});plot(Xall{i}{5})
       title(i)
       pause
       clf
   end
end

if STEP==9.21
    load canyars_january_2014
    q=sensors_data{1}.reading{1}.data; % in m3/min (not m3/sec)
    tq=datetime(sensors_data{1}.reading{1}.t);
    qw=q(1:(1+6*24*6))'/mean(q(1:(1+6*24*6)));

    u_c=sensors_data{2}.reading{1}.data; 
    u_cw=mean(u_c(1:(1+6*24)));
    TD=7; % SIMULATION DAYS
    TD0=4;
    tduration=TD*24*60*60;
    %Create Chlorine Control Signal
    Ucl1=u_cw*ones(1,TD*24*6); % for 2-hour intervals

    %set Random Parameters
    rand('seed',1);
    p_pattern=      0.20;
    p_basedemands=  0.20;
    p_roughness=	0.20;
    Xall={};
    MCSIMS=100;
    SensorNodesID={'RM00136704','RM00141346','XX00077521A','RM00374490','XX00077493E'};

%     d.setPatternMatrix(qw)
%     d.setQualityType('chem','mg/L')
% 
%     n_days=7;
%     d.setTimeSimulationDuration(n_days*24*60*60)
%     d.setTimeQualityStep(1*60)
%     d.setTimePatternStep(10*60)
%     d.setTimeHydraulicStep(10*60)
%     d.setTimeReportingStep(10*60);

    for epoch=1:MCSIMS
        %Constants
        epoch
        ENopen('canyars2.inp');
        patcount = ENgetcount('pattern'); %get number of patterns
        for i=1:patcount
            for j=1:ENgetpatternlen(i)
                pat1=ENgetpatternvalue(i,j);
                pat2(i,j)=p_pattern*(2*rand-1)*pat1+pat1;
                ENsetpatternvalue(i,j,pat2(i,j));
            end
        end    
        NNodes=ENgetcount('nodes');
        bd1=ENgetnodevalue(1:NNodes,'BASEDEMAND');
        bd2=p_basedemands*(2*rand(1,length(bd1))-1).*bd1+bd1;
        bd1=ENgetlinkvalue(1:NNodes,'ROUGHNESS');
        bd3=round(p_roughness*(2*rand(1,length(bd1))-1).*bd1+bd1);
        ENsetnodevalue(1:NNodes,'BASEDEMAND',bd2);
        ENsetlinkvalue(1:NNodes,'ROUGHNESS',bd3);
        SensorNodesIndex=ENgetnodeindex(SensorNodesID);

        %InjectionConcentration=rand(size(Scenarios),1);
        %InjectionConcentration=[0.0219673412022960;0.205103586989038;0.175986524753266;0.805521528146007;0.400323549937608;0.237903801369436;0.449189616110730;0.529877973035852;0.659092813571493;0.372917696075941;0.627717948345336;0.0555578400639621;0.760617955010672;0.705969864365631;0.235510393155511;0.223177764668678;0.948690786468187;0.646048170815244;0.131606891812574;0.917030693924535;0.534872789650631;0.606975658148050;0.439886494278855;0.172309344714652;0.00315661914793617;0.0532980193632180;0.779811437604861;0.290831824900038;0.0104810949463775;0.155762763766461;0.904770622916879;0.479859363976801;0.996330358086308;0.324328356573511;0.986688931000740;0.280863329433307;0.469977785586369;0.916642350105868;0.00797822932152927;0.0901002069423442;0.314178079978646;0.390990201100237;0.372309891680400;0.412349472480058;0.357583972326286;0.913822887890890;0.621276782183571;0.798878159280344;0.745223024741385;0.963376828452282;0.474355797504241;0.497888653770969;0.0146039286696370;0.448229150589662;0.387333960452738;0.921873329170921;0.925043375662083;0.204014752620838;0.875947298424294;0.0462446171074382;0.233279724714011;0.732333268379948;0.325241661782023;0.336609570466266;0.397050826529530;0.233241481815112;0.0895848665803600;0.652852616111214;0.493918981167450;0.296316481333373;0.191101770005702;0.847448485832405;0.0667013852236333;0.0501814536052670;0.399690743721878;0.602329733596337;0.355832553634342;0.477728932387069;0.190166629473756;0.130541565423152;0.0120900669191452;0.197754710073469;0.663412204786861;0.968925852779730;0.736807668924708;0.526491617563410;0.744616388224352;0.767636886689643;0.673154592827500;0.709241651794520;0.224441710498390;0.191828346434901;0.0590185313760389;0.924456837086220;0.346060908095008;0.245682352802568;0.183303552765075;0.782811322613997;0.709899173448747;0.275408153084762;0.784828895602761;0.619248395608388;0.707784990178321;0.742329927041349;0.339083783952093;0.981156882821190;0.303729575734460;0.782979369062455;0.534255832682483;0.237779894488761;0.366686672608688;0.902906534216789;0.150120581570138;0.0766144493020207;0.659049419061770;0.643586171159328;0.752778674826389;0.951187807112554;0.613474140695051;0.659882661728134;0.647895664744031;0.182437352921086;0.224590544693447;0.693284662763255;0.0353270620272155;0.741931491411259;0.642576149032720;0.777336792916682;0.699478550674151;0.136001180455089;0.771839908683598;0.313345245231569;0.393536606986791;0.169753626999331;0.0492089777482715;0.0552890151996580;0.242478460652045;0.335488178923488;0.549823167058557;0.877968753165551;0.0208344534136515;0.164658523241365;0.415800117615517;0.352576763998986;0.757672530951757;0.202227706183785;0.841057830881820;0.658963630748430;0.201741988864607;0.677606847452748;0.538285138336143;0.958320015556328;0.484501455204795;0.0159576269872289;0.199836774356587;0.656666611161393;0.595733789538841;0.497800779295061;0.537697612092689;0.0837664418312565;0.862587857927470;0.514128186979391;0.952438562620635;0.634921965019275;0.133466078961951;0.164389113506483;0.887830703467052;0.770633170740043;0.0317006278930701;0.792452998828354;0.757551308142744;0.164835955093073;0.397897249272977;0.459068530918597;0.564799148852378;0.579294761912569;0.207063464544277;0.115648595670075;0.705947426942153;0.858404616759347;0.206393874346462;0.861846140987168;0.0480915713347921;0.275039423850849;0.587596661219186;0.737085110851138;0.189458075067707;0.221867662957808;0.929811331876466;0.339054847759686;0.494826297040482;0.545574359384167;0.468258169697718;0.0150581095437790;0.0816471022933941;0.242848245074436;0.550454966048922;0.496614384230512;0.597955762221457;0.842495656033277;0.824490951292445;0.219418372129751;0.764580384718525;0.302525964240789;0.553880994931739;0.0778818177421958;0.959710793085262;0.859299383992003;0.244746753594255;0.458687658635288;0.163478683290760;0.586230067809220;0.768749669552199;0.375696163799472;0.325424977729761;0.417600704085827;0.615033570497778;0.869219356155591;0.969718907014336;0.0656701899439423;0.718882387838737;0.256292405657606;0.506461887390568;0.104941373274169;0.749660618952318;0.546022731599409;0.00404999125937465;0.0682030963097713;0.289439678326920;0.612673640536458;0.205876496250684;0.166272485240489;0.541659436906529;0.670156088038420;0.313371661730749;0.837518708704747;0.176937200677086;0.783531779788216;0.818622900554269;0.595089615599760;0.671169385160864;0.343856398641996;0.194491976031331;0.826641158585735;0.357952350451589;0.105154039852859;0.323947806993475;0.590792139335904;0.443485818544163;0.666152271752317;0.0212313411856216;0.835151306742407;0.388012419635436;0.324736812768847;0.851612206013693;0.0463464721321810;0.945157125566694;0.255809399418444;0.388576025789872;0.797265450375744;0.640424465127487;0.613985397673205;0.252578693559663;0.0901026572520391;0.355360435021743;0.542831410441004;0.367515281945241;0.829343653670207;0.778787235160725;0.0770613463023032;0.170047302809566;0.985018320374665;0.202910536994650;0.317395269087234;0.462287549144722;0.666838475347887;0.554255171937056;0.366674746091792;0.702457564744380;0.204290658796341;0.513102390111006;0.711870595678627;0.409101570681250;0.770098439776385;0.0444773216938960;0.530345709310074;0.520336374417104;0.293444828266951;0.927228682640581;0.932469140241141;0.00884003285730259;0.574432232684657;0.482534731031645;0.961224448849086;0.299311806587182;0.533533310766115;0.0943540460869456;0.808452583294573;0.662567431881357;0.770827629962390;0.299976777890686;0.709706008764778;0.0288893096283494;0.542626923668490;0.930706096315154;0.377360768791922;0.302441085829605;0.127329538169936;0.0275480221153926;0.999607693403777;0.406503037273187;0.0965474504495726;0.672999705967028;0.106058187832152;0.519962894972396;0.0163758010679743;0.228088549444493;0.484250513596577;0.798382017667583;0.406570939070811;0.237772963120496;0.250191166182138;0.962930023187273;0.964899708500551;0.0694007687593814;0.418720538922921;0.436097677534492;0.493666322200404;0.0498772221849660;0.286473262722824;0.756126582508966;0.219472228185959;0.669739121417393;0.305413662132534;0.0874194614996293;0.258889424269502;0.154553697516468;0.583994159281251;0.189835039987152;0.557517064063585;0.189295716671876;0.493110104227956;0.701521759248116;0.476207683084629;0.622529603365124;0.855043757639380;0.720434645060652;0.345079534382131;0.751734360471244;0.399396440200227;0.655970445208238;0.895272614851255;0.846837805047090;0.802989426442883;0.843290225529713;0.178820477881851;0.435771760268031;0.0159748247898998;0.488880243845694;0.610258314577052;0.611493096505987;0.364472976124134;0.697309718326344;0.684435910864005;0.314353891329073;0.345851567734895;0.727298920381488;0.712954851665047;0.632191934451550;0.249842327204460;0.0999933253508030;0.587819170946171;0.476806092298034;0.679993253052232;0.646604048854953;0.474249105190043;0.704710929051373;0.0765845664202164;0.156807824576650;0.469107659752065;0.292437452959100;0.996271883601449;0.341547689559659;0.392018429186204;0.653739332525870;0.396961762289033;0.736338791780332;0.646073452032205;0.556508305276049;0.235086774562992;0.103420080199568;0.181287914133299;0.905972838358010;0.685494283067758;0.102415519814200;0.297641517267396;0.460980713116462;0.702845348372518;0.721770096906354;0.790018705087723;0.844376409353864;0.434312010386173;0.481958560404348;0.277524715884367;0.357899868561840;0.223090918838555;0.489072919585310;0.848559470311068;0.739017518115704;0.667426970632480;0.445095420090992;0.718725469298067;0.618962492616364;0.902613403230260;0.223468090977272;0.828205055011532;0.642359578815456;0.137441151373759;0.973431138775047;0.457149392206757;0.309834818965679;0.393802356158291;0.636199952399451;0.612599977577385;0.967823143102146;0.203566117772630;0.335741404600321;0.805787117595685;0.864085430681745;0.683833468092528;0.189098231116821;0.173970380413332;0.920183606874283;0.525880736078080;0.477531264292789;0.867958968909438;0.786390460928153;0.864476819459571;0.261904657009013;0.831570350486585;0.202880628035814;0.814715397923587;0.921692901720150;0.892599210558738;0.914931860712791;0.259782999874923;0.172878897829391;0.575635818566957;0.711202654853092;0.183020115915230;0.0190881872638539;0.815163343593089;0.450315769040173;0.457130258184453;0.988249306095880;0.506087553457398;0.813510958484146;0.678679243046175;0.562037877068873;0.170599896540213;0.272461151365406;0.254570998369982;0.574769604287469;0.152739259485500;0.0887341727915845;0.355242108160277;0.554111849774659;0.957859162687259;0.738947284752013;0.487014827079612;0.258198727042507;0.546005403411577;0.712815138377629;0.284030712807565;0.704190156750470;0.323964505141584;0.871437914609647;0.257030844342444;0.917400863448810;0.756311984153610;0.335517669718488;0.0454749586272403;0.297629648026838;0.261494387062962;0.936163367208170;0.0977126677044261;0.256806108288842;0.140262010572600;0.383611693691281;0.361735869367484;0.694756459302621;0.771811499154107;0.835866283083272;0.404619780557519;0.444651830217173;0.263310460030711;0.458901736167679;0.761479770187978;0.190497549339429;0.692311747787666;0.683545067293358;0.341945999461201;0.0864129444055320;0.342356623775492;0.987775794690371;0.547781361056390;0.561335274745401;0.361962645948847;0.506190462273634;0.543099432970909;0.872169942069878;0.560216368436914;0.556504319215428;0.168093053702308;0.139953574696534;0.199729924648874;0.860843573632112;0.197942034899230;0.811780551360818;0.595726721266157;0.379004320306240;0.925611386972299;0.750580843421901;0.0122353918907397;0.640231507662792;0.370949288537237;0.544692445334370;0.645928734748591;0.124244919570277;0.184363217644563;0.592598952163290;0.810589008410736;0.569464359231975;0.987485611805453;0.670677614244948;0.0786626148403914;0.0825676224578953;0.714030649845503;0.713131953362903;0.608740170304077;0.0960423006192047;0.182946506972865;0.781942692949410;0.110840400732514;0.894615111357819;0.796176590861835;0.339962614858506;0.751667926903660;0.282847469804272;0.817425000396289;0.461981660435899;0.525766946154538;0.565064019321028;0.0309727285201534;0.558648238218691;0.200939741544863;0.194236144513933;0.526880845672861;0.286373223777103;0.0747720217680428;0.693369855495808;0.467161318039131;0.580272283675276;0.636271730361633;0.818972187963767;0.465563107033057;0.719139904584335;0.584376348920342;0.613296304183684;0.670984415184234;0.235066001412955;0.754285747536591;0.280558847487233;0.352549717925745;0.303109177995058;0.355954562945270;0.528339421156952;0.800651384890383;0.547825852664106;0.309105725637221;0.139930784767461;0.816699586723326;0.269954058933050;0.117868487778059;0.0156740858292552;0.434360532292333;0.297466237236497;0.515049233806808;0.432472591024112;0.566837342254276;0.835211267618095;0.395774857325375;0.788027067570028;0.370924649467191;0.130583595079642;0.718482503536382;0.535436935972160;0.0885828840958806;0.812532999465490;0.242122016494219;0.344731218342079;0.897586675313109;0.739251987421537;0.608152593769204;0.220643479014115;0.354951790233586;0.674738455877983;0.329227941264039;0.334008824701425;0.686316756851187;0.925732397905426;0.784411596499575;0.605702368358943;0.0397050087525067;0.322082103380040;0.233911508337553;0.350720629259348;0.561615961865343;0.0794710708220820;0.670287306732632;0.518764255344292;0.870839571520146;0.200678539090175;0.804206488562844;0.298453275718937;0.104205008179045;0.373572465206297;0.632422722239244;0.128692674976165;0.937788324401615;0.408368217948996;0.444639068769589;0.0488288104761526;0.665817672696811;0.397625015302387;0.883632187211715;0.206170467290175;0.107043745977359;0.0842386414689192;];
        %InjectionConcentration=0;

        %ENopen('Network_1.inp')

        ENsettimeparam('DURATION',tduration)

        %NodeId=Scenarios(epoch,1);
        MSXopen('Arsenite.msx')
        MSXsolveH()
        CLid= MSXgetindex('MSX_SPECIES', 'Chlorine');
        %AS3id= MSXgetindex('MSX_SPECIES', 'AsIII');
        %Create Chlorine Control Signal
        calllib('epanetmsx','MSXsetpattern',1,Ucl1,length(Ucl1));
        %calllib('epanetmsx','MSXsetpattern',2,Ucl2,length(Ucl1));

        %Create Contamination Signal
        %PAS3=zeros(1,TD*48); % for 2-hour intervals
        %PAS3((4*48+1+Scenarios(epoch,2)):end)=1;
        %calllib('epanetmsx','MSXsetpattern',4,PAS3,length(PAS3));
        %calllib('epanetmsx','MSXsetsource',NodeId,...
        %    MSXgetindex('MSX_SPECIES', 'AsIII'),...
        %    ConstantsMSX('MSX_SETPOINT'),...
        %    InjectionConcentration(1),4);        
        %calllib('epanetmsx','MSXsetsource',1, 2,2,0,4);        

        MSXinit(0)
        [errorcode,tleft,t]=MSXstep();
        %KMAX=double(tleft/300);
        KMAX=1152;
        C=zeros(tleft/t,3*length(SensorNodesIndex)+1);
        k=1;
        perc=0.0;
        h = waitbar(0,'Initializing waitbar...');
        %T00=tleft*TD0/TD;
        while tleft>0
            XT2(k)=t;
            for i=1:length(SensorNodesIndex)
                X{i}(k,1)=MSXgetqual('MSX_NODE', SensorNodesIndex(i), 1);
                %X{i}(k,2)=MSXgetqual('MSX_NODE', SensorNodesIndex(i), 2);
                %X{i}(k,3)=MSXgetqual('MSX_NODE', SensorNodesIndex(i), 3);
            end
            [errorcode,tleft,t]=MSXstep();
            k=k+1;
            perc=k/KMAX;
            waitbar(perc,h,sprintf('Simulation:%d',epoch));%,sprintf('%d%% along... (%d/%d/%d)',floor(perc*100),j,length(InjectionNodes),l))  
        end
        close(h)
        MSXclose()
        delete  s*
        Xall{epoch}=X;
        ENclose() 
        save Xallbounds2.mat Xall
    end
    
    %POST PROCESSING
    Xall2={};
    for i=1:5
        for j=1:size(Xall,2)
            Xall2{i}(:,j)=Xall{j}{i}(:,1);
        end
        Xmean{i}=mean(Xall2{i}');
        Xstd{i}=std(Xall2{i}');
        Xstd3s{i}=3*Xstd{i};
        Xupper3s{i}=Xmean{i}+Xstd3s{i};
        Xlower3s{i}=Xmean{i}-Xstd3s{i};
        Xlower3s{i}(find(Xlower3s{i}<0))=0;
        Xmins{i}=min(Xall2{i}');
        Xmaxs{i}=max(Xall2{i}');
    end  
    save XBOUNDS2.mat XT2 Xmean Xupper3s Xlower3s Xmins Xmaxs
end    





%% 
if STEP==9.3 %CCWI2015
    load Xallbounds2.mat
    Xall2={};
    bins=8;
    Ns=size(Xall,2);
    b=round(linspace(1,Ns,bins+2));
    for i=1:5
        for j=1:Ns
            Xall2{i}(:,j)=Xall{j}{i}(:,1);
        end
        t=sort(Xall2{i},2);
        Xbb{i}=t(:,b);
    end     
    save Xbb2.mat Xbb
end
    



%% STEP 2: Run Simulations CCWI15 with contaminations
if STEP==9.4 %Seed 2
    load canyars_january_2014
    q=sensors_data{1}.reading{1}.data; % in m3/min (not m3/sec)
    tq=datetime(sensors_data{1}.reading{1}.t);
    qw=q(1:(1+6*24*6))'/mean(q(1:(1+6*24*6)));
    SensorNodesID={'RM00136704','RM00141346','XX00077521A','RM00374490','XX00077493E'};

    u_c=sensors_data{2}.reading{1}.data; 
    u_cw=mean(u_c(1:(1+6*24)));
    TD=7; % SIMULATION DAYS
    TD0=4;
    tduration=TD*24*60*60;
    %Create Chlorine Control Signal
    Ucl1=u_cw*ones(1,TD*24*6); % for 2-hour intervals

    %set Random Parameters
    rand('seed',2);

    %Scenarios=[53,1;31,1;23,38;128,47;130,42;26,7;22,47;52,47;53,3;30,28;22,2;26,27;26,22;28,37;24,45;28,10;56,0;27,3;29,1;44,41;54,2;27,17;44,44;27,31;29,37;24,19;29,6;23,15;44,22;23,46;43,0;44,25;24,36;43,26;28,41;29,0;30,46;43,17;26,21;22,41;43,20;24,18;28,14;23,40;44,45;43,30;30,19;23,39;29,20;29,33;109,0;1,45;23,23;26,10;30,39;43,14;44,32;43,18;25,26;43,42;22,14;27,20;130,33;43,2;26,24;29,12;1,3;25,32;130,15;22,37;27,36;25,33;26,19;28,40;27,30;22,39;30,21;27,34;25,2;130,32;30,36;27,23;34,2;30,32;43,5;27,44;26,11;130,19;24,12;26,29;54,1;28,43;128,0;130,21;27,33;30,16;26,37;30,0;25,42;24,29;25,28;130,11;30,43;24,38;23,28;27,25;27,10;110,2;24,44;30,3;128,45;24,10;22,21;130,26;28,18;44,29;22,34;24,42;128,5;130,5;1,46;24,34;22,0;129,2;43,12;43,22;109,47;28,45;22,25;30,18;44,11;44,38;130,9;27,47;29,25;22,16;28,42;25,27;25,18;22,6;128,1;29,2;43,47;29,4;22,9;23,36;130,44;130,31;23,34;27,15;27,7;26,34;30,35;130,29;25,46;29,34;30,4;109,3;43,32;27,26;24,9;25,0;130,23;26,28;23,3;43,6;44,31;24,4;27,14;26,40;23,47;44,9;43,8;28,15;34,46;110,3;28,39;53,0;44,20;44,15;26,0;49,44;29,27;30,17;25,23;44,7;110,47;43,13;30,26;29,19;28,24;23,37;25,22;26,43;29,29;44,24;44,26;43,35;43,21;27,0;26,9;22,10;28,2;129,47;44,14;130,25;29,36;23,32;27,46;49,42;23,42;23,16;1,2;25,4;26,4;25,21;34,47;26,41;26,2;28,1;44,6;28,36;28,11;43,10;28,19;23,18;30,41;27,12;110,4;43,25;29,15;23,43;22,8;26,38;44,12;25,38;30,29;22,29;44,36;130,46;1,4;129,1;44,42;128,46;29,23;22,13;24,46;49,45;29,17;27,6;23,20;44,27;44,46;22,12;26,23;27,39;110,1;28,26;27,21;26,20;23,17;29,22;29,43;30,40;25,35;27,35;44,3;28,33;30,47;53,45;30,15;22,23;109,46;22,24;130,20;129,0;25,8;130,45;130,14;44,47;49,46;43,43;25,15;28,17;24,47;22,7;28,22;43,40;25,19;27,40;129,4;44,13;44,43;34,45;34,3;44,34;27,29;27,37;28,30;28,25;22,19;23,21;34,1;26,15;43,4;43,16;43,41;130,28;28,38;26,26;44,0;24,32;44,40;53,46;130,13;1,1;44,21;22,5;27,11;28,23;26,3;28,4;22,11;26,5;23,29;30,42;34,4;43,27;26,35;27,19;24,21;22,31;30,23;27,43;43,39;29,28;25,34;29,13;23,2;23,19;28,27;22,32;26,42;28,8;23,24;25,3;23,33;22,35;23,25;22,3;27,41;27,8;25,39;22,27;25,36;22,28;128,3;43,7;130,2;29,30;43,9;25,12;130,8;56,44;44,30;25,29;24,14;30,38;28,44;30,45;26,18;22,26;25,1;25,24;109,1;130,34;22,45;24,17;25,37;26,31;24,20;30,22;43,34;26,8;24,3;27,1;27,13;109,2;130,27;43,38;43,1;29,39;28,0;22,43;24,23;25,47;24,6;43,11;22,20;56,1;44,8;30,25;23,0;23,44;24,11;26,39;28,31;128,2;22,17;23,26;28,20;28,47;27,27;24,35;25,20;130,37;27,9;28,13;27,18;25,6;44,23;44,37;30,27;24,41;44,35;48,45;28,28;23,22;26,30;29,46;26,47;28,46;43,29;25,5;22,38;26,33;29,11;130,24;130,4;30,31;129,3;48,47;23,41;24,8;29,10;28,7;24,5;28,21;44,16;49,41;130,17;28,5;27,24;130,18;26,32;43,37;30,20;44,18;24,13;130,39;44,33;27,42;24,26;44,39;31,0;130,12;43,24;56,45;22,42;29,24;24,33;28,16;22,33;130,40;24,28;26,14;26,45;29,40;24,30;44,4;53,47;43,28;30,1;25,31;24,43;47,47;130,22;22,36;29,26;44,1;28,6;28,9;110,46;43,36;129,46;23,4;22,4;44,2;29,41;21,47;44,17;27,2;22,18;28,12;22,22;25,41;29,45;29,38;29,8;26,16;27,38;44,10;29,5;128,4;43,3;130,3;30,37;23,27;30,30;29,42;56,47;23,1;25,43;43,31;27,5;130,47;25,44;27,16;29,14;53,2;25,16;26,36;54,0;24,7;130,30;54,46;28,34;25,40;25,7;25,10;22,1;29,16;26,25;130,16;28,29;26,13;25,9;29,7;27,28;130,36;30,2;22,15;24,31;24,16;130,10;110,45;29,31;25,17;43,45;43,44;25,25;110,0;26,12;130,43;30,24;129,45;49,47;44,19;130,38;24,40;22,30;25,45;54,47;24,39;25,30;1,0;25,13;48,46;26,44;34,0;29,47;44,28;130,41;24,25;29,3;28,3;24,22;43,15;27,22;26,6;23,5;23,31;29,9;56,2;25,14;43,23;23,45;26,1;24,15;24,1;109,45;24,2;43,46;25,11;29,21;22,40;30,44;24,0;24,24;22,44;24,37;28,32;24,27;26,46;29,32;27,32;56,46;31,2;43,19;29,44;109,4;130,35;44,5;22,46;28,35;23,35;49,43;1,47;29,18;29,35;26,17;30,34;27,45;30,33;130,7;23,30;27,4;43,33;130,6;];
    Scenarios=[randi(695,500,1) randi(144,500,1)];
    Xall={};

    for epoch=1:size(Scenarios,1)
    %ENopen('Network_1.inp')
    p_pattern=      0.15;
    p_basedemands=  0.15;
    p_roughness=	0.15;
    ENopen('canyars2.inp');
    patcount = ENgetcount('pattern'); %get number of patterns
    for i=1:patcount
        for j=1:ENgetpatternlen(i)
            pat1=ENgetpatternvalue(i,j);
            pat2(i,j)=p_pattern*(2*rand-1)*pat1+pat1;
        end
    end
    NNodes=ENgetcount('nodes');
    bd1=ENgetnodevalue(1:NNodes,'BASEDEMAND');
    bd2=p_basedemands*(2*rand(1,length(bd1))-1).*bd1+bd1;
    bd1=ENgetlinkvalue(1:NNodes,'ROUGHNESS');
    bd3=round(p_roughness*(2*rand(1,length(bd1))-1).*bd1+bd1);
    SensorNodesIndex=ENgetnodeindex(SensorNodesID);


    InjectionConcentration=rand(size(Scenarios,1),1);
    
    %InjectionConcentration=[0.0219673412022960;0.205103586989038;0.175986524753266;0.805521528146007;0.400323549937608;0.237903801369436;0.449189616110730;0.529877973035852;0.659092813571493;0.372917696075941;0.627717948345336;0.0555578400639621;0.760617955010672;0.705969864365631;0.235510393155511;0.223177764668678;0.948690786468187;0.646048170815244;0.131606891812574;0.917030693924535;0.534872789650631;0.606975658148050;0.439886494278855;0.172309344714652;0.00315661914793617;0.0532980193632180;0.779811437604861;0.290831824900038;0.0104810949463775;0.155762763766461;0.904770622916879;0.479859363976801;0.996330358086308;0.324328356573511;0.986688931000740;0.280863329433307;0.469977785586369;0.916642350105868;0.00797822932152927;0.0901002069423442;0.314178079978646;0.390990201100237;0.372309891680400;0.412349472480058;0.357583972326286;0.913822887890890;0.621276782183571;0.798878159280344;0.745223024741385;0.963376828452282;0.474355797504241;0.497888653770969;0.0146039286696370;0.448229150589662;0.387333960452738;0.921873329170921;0.925043375662083;0.204014752620838;0.875947298424294;0.0462446171074382;0.233279724714011;0.732333268379948;0.325241661782023;0.336609570466266;0.397050826529530;0.233241481815112;0.0895848665803600;0.652852616111214;0.493918981167450;0.296316481333373;0.191101770005702;0.847448485832405;0.0667013852236333;0.0501814536052670;0.399690743721878;0.602329733596337;0.355832553634342;0.477728932387069;0.190166629473756;0.130541565423152;0.0120900669191452;0.197754710073469;0.663412204786861;0.968925852779730;0.736807668924708;0.526491617563410;0.744616388224352;0.767636886689643;0.673154592827500;0.709241651794520;0.224441710498390;0.191828346434901;0.0590185313760389;0.924456837086220;0.346060908095008;0.245682352802568;0.183303552765075;0.782811322613997;0.709899173448747;0.275408153084762;0.784828895602761;0.619248395608388;0.707784990178321;0.742329927041349;0.339083783952093;0.981156882821190;0.303729575734460;0.782979369062455;0.534255832682483;0.237779894488761;0.366686672608688;0.902906534216789;0.150120581570138;0.0766144493020207;0.659049419061770;0.643586171159328;0.752778674826389;0.951187807112554;0.613474140695051;0.659882661728134;0.647895664744031;0.182437352921086;0.224590544693447;0.693284662763255;0.0353270620272155;0.741931491411259;0.642576149032720;0.777336792916682;0.699478550674151;0.136001180455089;0.771839908683598;0.313345245231569;0.393536606986791;0.169753626999331;0.0492089777482715;0.0552890151996580;0.242478460652045;0.335488178923488;0.549823167058557;0.877968753165551;0.0208344534136515;0.164658523241365;0.415800117615517;0.352576763998986;0.757672530951757;0.202227706183785;0.841057830881820;0.658963630748430;0.201741988864607;0.677606847452748;0.538285138336143;0.958320015556328;0.484501455204795;0.0159576269872289;0.199836774356587;0.656666611161393;0.595733789538841;0.497800779295061;0.537697612092689;0.0837664418312565;0.862587857927470;0.514128186979391;0.952438562620635;0.634921965019275;0.133466078961951;0.164389113506483;0.887830703467052;0.770633170740043;0.0317006278930701;0.792452998828354;0.757551308142744;0.164835955093073;0.397897249272977;0.459068530918597;0.564799148852378;0.579294761912569;0.207063464544277;0.115648595670075;0.705947426942153;0.858404616759347;0.206393874346462;0.861846140987168;0.0480915713347921;0.275039423850849;0.587596661219186;0.737085110851138;0.189458075067707;0.221867662957808;0.929811331876466;0.339054847759686;0.494826297040482;0.545574359384167;0.468258169697718;0.0150581095437790;0.0816471022933941;0.242848245074436;0.550454966048922;0.496614384230512;0.597955762221457;0.842495656033277;0.824490951292445;0.219418372129751;0.764580384718525;0.302525964240789;0.553880994931739;0.0778818177421958;0.959710793085262;0.859299383992003;0.244746753594255;0.458687658635288;0.163478683290760;0.586230067809220;0.768749669552199;0.375696163799472;0.325424977729761;0.417600704085827;0.615033570497778;0.869219356155591;0.969718907014336;0.0656701899439423;0.718882387838737;0.256292405657606;0.506461887390568;0.104941373274169;0.749660618952318;0.546022731599409;0.00404999125937465;0.0682030963097713;0.289439678326920;0.612673640536458;0.205876496250684;0.166272485240489;0.541659436906529;0.670156088038420;0.313371661730749;0.837518708704747;0.176937200677086;0.783531779788216;0.818622900554269;0.595089615599760;0.671169385160864;0.343856398641996;0.194491976031331;0.826641158585735;0.357952350451589;0.105154039852859;0.323947806993475;0.590792139335904;0.443485818544163;0.666152271752317;0.0212313411856216;0.835151306742407;0.388012419635436;0.324736812768847;0.851612206013693;0.0463464721321810;0.945157125566694;0.255809399418444;0.388576025789872;0.797265450375744;0.640424465127487;0.613985397673205;0.252578693559663;0.0901026572520391;0.355360435021743;0.542831410441004;0.367515281945241;0.829343653670207;0.778787235160725;0.0770613463023032;0.170047302809566;0.985018320374665;0.202910536994650;0.317395269087234;0.462287549144722;0.666838475347887;0.554255171937056;0.366674746091792;0.702457564744380;0.204290658796341;0.513102390111006;0.711870595678627;0.409101570681250;0.770098439776385;0.0444773216938960;0.530345709310074;0.520336374417104;0.293444828266951;0.927228682640581;0.932469140241141;0.00884003285730259;0.574432232684657;0.482534731031645;0.961224448849086;0.299311806587182;0.533533310766115;0.0943540460869456;0.808452583294573;0.662567431881357;0.770827629962390;0.299976777890686;0.709706008764778;0.0288893096283494;0.542626923668490;0.930706096315154;0.377360768791922;0.302441085829605;0.127329538169936;0.0275480221153926;0.999607693403777;0.406503037273187;0.0965474504495726;0.672999705967028;0.106058187832152;0.519962894972396;0.0163758010679743;0.228088549444493;0.484250513596577;0.798382017667583;0.406570939070811;0.237772963120496;0.250191166182138;0.962930023187273;0.964899708500551;0.0694007687593814;0.418720538922921;0.436097677534492;0.493666322200404;0.0498772221849660;0.286473262722824;0.756126582508966;0.219472228185959;0.669739121417393;0.305413662132534;0.0874194614996293;0.258889424269502;0.154553697516468;0.583994159281251;0.189835039987152;0.557517064063585;0.189295716671876;0.493110104227956;0.701521759248116;0.476207683084629;0.622529603365124;0.855043757639380;0.720434645060652;0.345079534382131;0.751734360471244;0.399396440200227;0.655970445208238;0.895272614851255;0.846837805047090;0.802989426442883;0.843290225529713;0.178820477881851;0.435771760268031;0.0159748247898998;0.488880243845694;0.610258314577052;0.611493096505987;0.364472976124134;0.697309718326344;0.684435910864005;0.314353891329073;0.345851567734895;0.727298920381488;0.712954851665047;0.632191934451550;0.249842327204460;0.0999933253508030;0.587819170946171;0.476806092298034;0.679993253052232;0.646604048854953;0.474249105190043;0.704710929051373;0.0765845664202164;0.156807824576650;0.469107659752065;0.292437452959100;0.996271883601449;0.341547689559659;0.392018429186204;0.653739332525870;0.396961762289033;0.736338791780332;0.646073452032205;0.556508305276049;0.235086774562992;0.103420080199568;0.181287914133299;0.905972838358010;0.685494283067758;0.102415519814200;0.297641517267396;0.460980713116462;0.702845348372518;0.721770096906354;0.790018705087723;0.844376409353864;0.434312010386173;0.481958560404348;0.277524715884367;0.357899868561840;0.223090918838555;0.489072919585310;0.848559470311068;0.739017518115704;0.667426970632480;0.445095420090992;0.718725469298067;0.618962492616364;0.902613403230260;0.223468090977272;0.828205055011532;0.642359578815456;0.137441151373759;0.973431138775047;0.457149392206757;0.309834818965679;0.393802356158291;0.636199952399451;0.612599977577385;0.967823143102146;0.203566117772630;0.335741404600321;0.805787117595685;0.864085430681745;0.683833468092528;0.189098231116821;0.173970380413332;0.920183606874283;0.525880736078080;0.477531264292789;0.867958968909438;0.786390460928153;0.864476819459571;0.261904657009013;0.831570350486585;0.202880628035814;0.814715397923587;0.921692901720150;0.892599210558738;0.914931860712791;0.259782999874923;0.172878897829391;0.575635818566957;0.711202654853092;0.183020115915230;0.0190881872638539;0.815163343593089;0.450315769040173;0.457130258184453;0.988249306095880;0.506087553457398;0.813510958484146;0.678679243046175;0.562037877068873;0.170599896540213;0.272461151365406;0.254570998369982;0.574769604287469;0.152739259485500;0.0887341727915845;0.355242108160277;0.554111849774659;0.957859162687259;0.738947284752013;0.487014827079612;0.258198727042507;0.546005403411577;0.712815138377629;0.284030712807565;0.704190156750470;0.323964505141584;0.871437914609647;0.257030844342444;0.917400863448810;0.756311984153610;0.335517669718488;0.0454749586272403;0.297629648026838;0.261494387062962;0.936163367208170;0.0977126677044261;0.256806108288842;0.140262010572600;0.383611693691281;0.361735869367484;0.694756459302621;0.771811499154107;0.835866283083272;0.404619780557519;0.444651830217173;0.263310460030711;0.458901736167679;0.761479770187978;0.190497549339429;0.692311747787666;0.683545067293358;0.341945999461201;0.0864129444055320;0.342356623775492;0.987775794690371;0.547781361056390;0.561335274745401;0.361962645948847;0.506190462273634;0.543099432970909;0.872169942069878;0.560216368436914;0.556504319215428;0.168093053702308;0.139953574696534;0.199729924648874;0.860843573632112;0.197942034899230;0.811780551360818;0.595726721266157;0.379004320306240;0.925611386972299;0.750580843421901;0.0122353918907397;0.640231507662792;0.370949288537237;0.544692445334370;0.645928734748591;0.124244919570277;0.184363217644563;0.592598952163290;0.810589008410736;0.569464359231975;0.987485611805453;0.670677614244948;0.0786626148403914;0.0825676224578953;0.714030649845503;0.713131953362903;0.608740170304077;0.0960423006192047;0.182946506972865;0.781942692949410;0.110840400732514;0.894615111357819;0.796176590861835;0.339962614858506;0.751667926903660;0.282847469804272;0.817425000396289;0.461981660435899;0.525766946154538;0.565064019321028;0.0309727285201534;0.558648238218691;0.200939741544863;0.194236144513933;0.526880845672861;0.286373223777103;0.0747720217680428;0.693369855495808;0.467161318039131;0.580272283675276;0.636271730361633;0.818972187963767;0.465563107033057;0.719139904584335;0.584376348920342;0.613296304183684;0.670984415184234;0.235066001412955;0.754285747536591;0.280558847487233;0.352549717925745;0.303109177995058;0.355954562945270;0.528339421156952;0.800651384890383;0.547825852664106;0.309105725637221;0.139930784767461;0.816699586723326;0.269954058933050;0.117868487778059;0.0156740858292552;0.434360532292333;0.297466237236497;0.515049233806808;0.432472591024112;0.566837342254276;0.835211267618095;0.395774857325375;0.788027067570028;0.370924649467191;0.130583595079642;0.718482503536382;0.535436935972160;0.0885828840958806;0.812532999465490;0.242122016494219;0.344731218342079;0.897586675313109;0.739251987421537;0.608152593769204;0.220643479014115;0.354951790233586;0.674738455877983;0.329227941264039;0.334008824701425;0.686316756851187;0.925732397905426;0.784411596499575;0.605702368358943;0.0397050087525067;0.322082103380040;0.233911508337553;0.350720629259348;0.561615961865343;0.0794710708220820;0.670287306732632;0.518764255344292;0.870839571520146;0.200678539090175;0.804206488562844;0.298453275718937;0.104205008179045;0.373572465206297;0.632422722239244;0.128692674976165;0.937788324401615;0.408368217948996;0.444639068769589;0.0488288104761526;0.665817672696811;0.397625015302387;0.883632187211715;0.206170467290175;0.107043745977359;0.0842386414689192;];
    
    %create scenarios with no injections as baseline
    %InjectionConcentration=InjectionConcentration*0;
    
    %SIMULATIONS=1;

        
        ENsettimeparam('DURATION',tduration)
        
        patcount = ENgetcount('pattern'); %get number of patterns
        for i=1:patcount
            for j=1:ENgetpatternlen(i)
                ENsetpatternvalue(i,j,pat2(i,j));
            end
        end
        ENsetnodevalue(1:NNodes,'BASEDEMAND',bd2);
        ENsetlinkvalue(1:NNodes,'ROUGHNESS',bd3);
      
        
        NodeId=Scenarios(epoch,1);
        MSXopen('Arsenite.msx')
        MSXsolveH()
        CLid= MSXgetindex('MSX_SPECIES', 'Chlorine');
        AS3id= MSXgetindex('MSX_SPECIES', 'AsIII');
        %Create Chlorine Control Signal
        %[errcode]=calllib(MSXDLLNAME,'MSXsetsource',node,species,type,level,pat);
        
        p=zeros(1,1007);
        p((3*144+Scenarios(epoch,2)):end)=1;
        ERR= calllib('epanetmsx','MSXsetpattern',2,p,length(p));
        
        %Works ok!
        ERR= calllib('epanetmsx','MSXsetsource',ENgetnodeindex({'XX00077363F'}),1,2,0.72,1);        
        %ERR= calllib('epanetmsx','MSXsetsource',ENgetnodeindex({'RM00136704'}),2,2,0.72,2);
        ERR= calllib('epanetmsx','MSXsetsource',NodeId,2,2,InjectionConcentration(epoch),2);

        
        %PAS3=ones(1,TD*24*6); % for 2-hour intervals
        %PAS3((3*144+1+Scenarios(epoch,2)):end)=1;
        %ERR= calllib('epanetmsx','MSXsetpattern',2,PAS3,length(PAS3));
        %ERR= calllib('epanetmsx','MSXsetsource',NodeId,2,2,InjectionConcentration(epoch),2);        
        
        %calllib('epanetmsx','MSXsetpattern',2,Ucl2,length(Ucl1));

        %Create Contamination Signal
        %ERR= calllib('epanetmsx','MSXsetpattern',2,PAS3,length(PAS3));
        %calllib('epanetmsx','MSXsetsource',NodeId,...
        %    MSXgetindex('MSX_SPECIES', 'AsIII'),...
        %    ConstantsMSX('MSX_SETPOINT'),...
        %    InjectionConcentration(1),4);        
        %ERR= calllib('epanetmsx','MSXsetsource',NodeId, 2,2,InjectionConcentration(epoch),2);        
        
        MSXinit(0)
        [errorcode,tleft,t]=MSXstep();
        KMAX=1152;
        C=zeros(tleft/t,3*length(SensorNodesIndex)+1);
        k=1;
        perc=0.0;
        h = waitbar(0,'Initializing waitbar...');
        %T00=tleft*TD0/TD;
        while tleft>0
            XT2(k)=t;
            for i=1:length(SensorNodesIndex)
                X{i}(k,1)=MSXgetqual('MSX_NODE', SensorNodesIndex(i), 1);
                X{i}(k,2)=MSXgetqual('MSX_NODE', SensorNodesIndex(i), 2);
                X{i}(k,3)=MSXgetqual('MSX_NODE', SensorNodesIndex(i), 3);
            end
            [errorcode,tleft,t]=MSXstep();
            k=k+1;
            perc=k/KMAX;
            waitbar(perc,h,sprintf('Simulation:%d',epoch));%,sprintf('%d%% along... (%d/%d/%d)',floor(perc*100),j,length(InjectionNodes),l))  
        end
        close(h)
        MSXclose()
        delete  s*
        Xall{epoch}=X;
        ENclose() 
        save XallS500FaultSeed2.mat Xall
    end    
end   

%% Step 5.10 Count TP/FP/FN/TN using the upper/lower-bounds approach
if STEP==5.10
    load XBOUNDS2.mat
    %load XBb2.mat
    Xnf={};
    Ns=5; %sensors
    load XallS500NoFault.mat
    Xnf=Xall;
    load XallS500Fault.mat
    %load XallS500FaultSeed2.mat
    %Xwf=Xall;
    Xwf=Xall;
    XX=[Xnf, Xwf];
    %ee=0.000:0.001:0.1; %0.001 FOR ZERO FN IN SENSORS 2 AND 3
    %ee=0.000:0.001:0.5;
    %ee=0.02;
    %ee=0.9:0.001:1
    %w=20;
    %w=3;
    [ee1,ee2] = meshgrid(0.000:0.001:0.00,1:1:20);
    ee1=0.004;
    ee2=12;
    for l=1:(size(ee1,1)*size(ee1,2))%length(ee)
        %load XallS500NoFault.mat
        disp(l)
        TN=zeros(Ns,size(XX,2));
        FP=zeros(Ns,size(XX,2));
        FN=zeros(Ns,size(XX,2));
        TP=zeros(Ns,size(XX,2));
        GTN=zeros(1,size(XX,2));
        GFP=zeros(1,size(XX,2));
        GFN=zeros(1,size(XX,2));
        GTP=zeros(1,size(XX,2));
        epsilon=ee1(l)*ones(5,1);
        %epsilon=[0.015, 0.08] %% FIND THE BEST THRESHOLDS
        for i=1:size(XX,2)
            X=XX{i};
            t1={};
            td={};
            for j=1:Ns
                eL=X{j}(:,1)-Xmins{j}';
                eL(find(eL>=-epsilon(j)))=0;
                eL(find(eL<-epsilon(j)))=1;
                
                t=find(eL);
                N = ee2(l); % Required number of consecutive numbers following a first one
                x = diff(t)==1;
                f = find([false,x']~=[x',false]);
                g = find(f(2:2:end)-f(1:2:end-1)>=N,1,'first');
                td{j} = t(f(2*g-1)); % First t followed by >=N consecutive numbers 
                %if i>500 % to activate after the faults
                %    t1{j}=find(X{j}(:,2), 1,'first');
                %else
                %    t1{j}=[];
                %end
                if size(X{j},2)>=2
                    t1{j}=find(X{j}(:,2), 1,'first');
                else
                    t1{j}=[];
                end

                
                if ~isempty(t1{j})
                    if td{j}>=t1{j}
                        TP(j,i)=1;
                    elseif td{j}<t1{j}
                        FP(j,i)=1;
                    elseif isempty(td{j})
                        FN(j,i)=1;
                    end
                else
                    if isempty(td{j})
                        TN(j,i)=1;
                    else
                        FP(j,i)=1;
                    end
                end
            end
            if max(FP(:,i))
             	GFP(i)=1;
            elseif max(TP(:,i))
                GTP(i)=1;
            elseif max(FN(:,i))
                GFN(i)=1;
            else
                GTN(i)=1;
            end                
        end
        P0=500;
        N0=500;
        TP0(:,l)=sum(TP,2);
        FP0(:,l)=sum(FP,2);
        FN0(:,l)=sum(FN,2);
        TN0(:,l)=sum(TN,2);
       
        ACCURACY(:,l)=(TP0(:,l)+TN0(:,l))./(P0+N0);
        F1(:,l)=2*TP0(:,l)./(2*TP0(:,l)+FP0(:,l)+FN0(:,l));
        MC(:,l)=((TP0(:,l).*TN0(:,l))-(FP0(:,l).*FN0(:,l)))./sqrt((TP0(:,l)+FP0(:,l)).*(TP0(:,l)+FN0(:,l)).*(TN0(:,l)+FP0(:,l)).*(TN0(:,l)+FN0(:,l)));
        TPR(:,l)=TP0(:,l)./(TP0(:,l)+FN0(:,l));
        FPR(:,l)=1-TN0(:,l)./(FP0(:,l)+TN0(:,l));

        GTP0(:,l)=sum(GTP,2);
        GFP0(:,l)=sum(GFP,2);
        GFN0(:,l)=sum(GFN,2);
        GTN0(:,l)=sum(GTN,2);
        GACCURACY(:,l)=(GTP0(:,l)+GTN0(:,l))./(P0+N0);
        GF1(:,l)=2*GTP0(:,l)./(2*GTP0(:,l)+GFP0(:,l)+GFN0(:,l));
        GMC(:,l)=((GTP0(:,l).*GTN0(:,l))-(GFP0(:,l).*GFN0(:,l)))./sqrt((GTP0(:,l)+GFP0(:,l)).*(GTP0(:,l)+GFN0(:,l)).*(GTN0(:,l)+GFP0(:,l)).*(GTN0(:,l)+GFN0(:,l)));
        GTPR(:,l)=GTP0(:,l)./(GTP0(:,l)+GFN0(:,l));
        GFPR(:,l)=1-GTN0(:,l)./(GFP0(:,l)+GTN0(:,l));        
    end
    figure
    for i=1:Ns
        plot(FPR(i,:)',TPR(i,:)','.')
        hold all
    end
    xlabel('FPR');
    ylabel('TPR');
    grid on
    legend('JUNCTION-17', 'JUNCTION-31', 'JUNCTION-45', 'JUNCTION-83', 'JUNCTION-122')
 
    figure
    subplot(1,3,1)
    for i=1:Ns
        plot(ee,F1(i,:)','-')
        hold all
    end
    xlabel('Bias (Absolute)');
    ylabel('F1-score');    
    grid on    
    legend('JUNCTION-17', 'JUNCTION-31', 'JUNCTION-45', 'JUNCTION-83', 'JUNCTION-122')
    subplot(1,3,2)
    for i=1:Ns
        plot(ee,ACCURACY(i,:)','-')
        hold all
    end
    xlabel('Bias (Absolute)');
    ylabel('Accuracy');    
    grid on    
    legend('JUNCTION-17', 'JUNCTION-31', 'JUNCTION-45', 'JUNCTION-83', 'JUNCTION-122')
    subplot(1,3,3)
    for i=1:Ns
        plot(ee,MC(i,:)','-')
        hold all
    end
    xlabel('Bias (Absolute)');
    ylabel('Matthews Correlation Coefficient');    
    grid on    
    legend('JUNCTION-17', 'JUNCTION-31', 'JUNCTION-45', 'JUNCTION-83', 'JUNCTION-122')
       
    [aACC bACC]=max(ACCURACY,[],2);
    [aF1 bF1]=max(F1,[],2);
    [aMC bMC]=max(MC,[],2);
    save XResultsULBoundsAbs.mat P0 N0 TP0 FN0 TN0 FP0 ACCURACY F1 MC TPR FPR ee
end


%% Step 5.12 Count TP/FP/FN/TN using the upper/lower-bounds approach
if STEP==5.12
    load XBOUNDS2.mat
    %load XBb2.mat
    Xnf={};
    Ns=5; %sensors
    %load XallS500NoFault.mat
    %Xnf=Xall;
    %load XallS500Fault.mat
    load XallS500FaultSeed2.mat
    %Xwf=Xall;
    Xwf=Xall;
    XX=[Xnf, Xwf];
    %ee=0.000:0.001:0.1; %0.001 FOR ZERO FN IN SENSORS 2 AND 3
    %ee=0.000:0.001:0.5;
    %ee=0.02;
    %ee=0.9:0.001:1
    %w=20;
    %w=3;
    [ee1,ee2] = meshgrid(0.000:0.001:0.02,1:1:20);
    ee1=0.004;
    ee2=12;
    for l=1:(size(ee1,1)*size(ee1,2))%length(ee)
        %load XallS500NoFault.mat
        disp(l)
        TN=zeros(Ns,size(XX,2));
        FP=zeros(Ns,size(XX,2));
        FN=zeros(Ns,size(XX,2));
        TP=zeros(Ns,size(XX,2));
        GTN=zeros(1,size(XX,2));
        GFP=zeros(1,size(XX,2));
        GFN=zeros(1,size(XX,2));
        GTP=zeros(1,size(XX,2));
        epsilon=ee1(l)*ones(5,1);
        %epsilon=[0.015, 0.08] %% FIND THE BEST THRESHOLDS
        for i=1:size(XX,2)
            X=XX{i};
            t1={};
            td={};
            for j=1:Ns
                eL=X{j}(:,1)-Xmins{j}';
                eL(find(eL>=-epsilon(j)))=0;
                eL(find(eL<-epsilon(j)))=1;
                
                t=find(eL);
                N = ee2(l); % Required number of consecutive numbers following a first one
                x = diff(t)==1;
                f = find([false,x']~=[x',false]);
                g = find(f(2:2:end)-f(1:2:end-1)>=N,1,'first');
                td{j} = t(f(2*g-1)); % First t followed by >=N consecutive numbers 
                %if i>500 % to activate after the faults
                %    t1{j}=find(X{j}(:,2), 1,'first');
                %else
                %    t1{j}=[];
                %end
                if size(X{j},2)>=2
                    t1{j}=find(X{j}(:,2), 1,'first');
                else
                    t1{j}=[];
                end
                if ~isempty(t1{j})
                    if td{j}>=t1{j}
                        TP(j,i)=1;
                    elseif td{j}<t1{j}
                        FP(j,i)=1;
                    elseif isempty(td{j})
                        FN(j,i)=1;
                    end
                else
                    if isempty(td{j})
                        TN(j,i)=1;
                    else
                        FP(j,i)=1;
                    end
                end
            end
            if max(FP(:,i))
             	GFP(i)=1;
            elseif max(TP(:,i))
                GTP(i)=1;
            elseif max(FN(:,i))
                GFN(i)=1;
            else
                GTN(i)=1;
            end                
        end
        P0=357;
        N0=0;
        TP0(:,l)=sum(TP,2);
        FP0(:,l)=sum(FP,2);
        FN0(:,l)=sum(FN,2);
        TN0(:,l)=sum(TN,2);
       
        ACCURACY(:,l)=(TP0(:,l)+TN0(:,l))./(P0+N0);
        F1(:,l)=2*TP0(:,l)./(2*TP0(:,l)+FP0(:,l)+FN0(:,l));
        MC(:,l)=((TP0(:,l).*TN0(:,l))-(FP0(:,l).*FN0(:,l)))./sqrt((TP0(:,l)+FP0(:,l)).*(TP0(:,l)+FN0(:,l)).*(TN0(:,l)+FP0(:,l)).*(TN0(:,l)+FN0(:,l)));
        TPR(:,l)=TP0(:,l)./(TP0(:,l)+FN0(:,l));
        FPR(:,l)=1-TN0(:,l)./(FP0(:,l)+TN0(:,l));

        GTP0(:,l)=sum(GTP,2);
        GFP0(:,l)=sum(GFP,2);
        GFN0(:,l)=sum(GFN,2);
        GTN0(:,l)=sum(GTN,2);
        GACCURACY(:,l)=(GTP0(:,l)+GTN0(:,l))./(P0+N0);
        GF1(:,l)=2*GTP0(:,l)./(2*GTP0(:,l)+GFP0(:,l)+GFN0(:,l));
        GMC(:,l)=((GTP0(:,l).*GTN0(:,l))-(GFP0(:,l).*GFN0(:,l)))./sqrt((GTP0(:,l)+GFP0(:,l)).*(GTP0(:,l)+GFN0(:,l)).*(GTN0(:,l)+GFP0(:,l)).*(GTN0(:,l)+GFN0(:,l)));
        GTPR(:,l)=GTP0(:,l)./(GTP0(:,l)+GFN0(:,l));
        GFPR(:,l)=1-GTN0(:,l)./(GFP0(:,l)+GTN0(:,l));        
    end
    [aACC bACC]=max(ACCURACY,[],2);
    [aF1 bF1]=max(F1,[],2);
    [aMC bMC]=max(MC,[],2);
    save XResultsULBoundsAbs.mat P0 N0 TP0 FN0 TN0 FP0 ACCURACY F1 MC TPR FPR ee
end



%% Step 5.3 Count TP/FP/FN/TN using the upper/lower-bounds approach
%% (15/6/2015)
if STEP==5.3
    load XBOUNDS2.mat
    load Xbb2.mat
    Xnf={};
    Ns=5; %sensors
    load XallS500NoFault.mat
    Xnf=Xall;
    load XallS500Fault.mat
    %load XallS500FaultSeed2.mat
    Xwf=Xall;
    XX=[Xnf, Xwf];
    %ee=0.000:0.001:0.1; %0.001 FOR ZERO FN IN SENSORS 2 AND 3
    %ee=0.000:0.001:0.5;
    %ee=0.02;
    %ee=0.9:0.001:1
    %w=20;
    %w=3;
    Nb=20;
    prc=0.60:0.02:1;
    [ee1,ee2] = meshgrid(prc,1:3:90);
    %prc=[0.1:0.05:0.95];
    %ee1=0.004;
    %ee2=12;
    %ee1=10;
    %ee2=1;
    for l=1:(size(ee1,1)*size(ee1,2))%length(ee)
        %load XallS500NoFault.mat
        disp(l)
        TN=zeros(Ns,size(XX,2));
        FP=zeros(Ns,size(XX,2));
        FN=zeros(Ns,size(XX,2));
        TP=zeros(Ns,size(XX,2));
        GTN=zeros(1,size(XX,2));
        GFP=zeros(1,size(XX,2));
        GFN=zeros(1,size(XX,2));
        GTP=zeros(1,size(XX,2));
        epsilon=ee1(l)*ones(5,1);
        %epsilon=[0.015, 0.08] %% FIND THE BEST THRESHOLDS
        
        N0=zeros(5,1);
        P0=zeros(5,1);
        for i=1:size(XX,2)
            X=XX{i};
            t1={};
            td={};
            
            for j=1:Ns
                %B=[Xbb{i}(:,j)*(0.75:0.05:0.95), Xbb{j}(:,1:5)];
                B=Xmins{j}'*ee1(l);
%                 if ee1(l)<=18 
%                     B=Xmins{j}'*ee1(l);
%                 else
%                     B= Xbb{j}(:,ee1(l)-18);
%                 end
                
                eL=X{j}(:,1)-B;
                %eL=X{j}(:,1)-Xmins{j}';
                eL(find(eL>=0))=0;
                eL(find(eL<0))=1;
                
                %seL=eL(:,1);
                t=find(eL);
                N = ee2(l); % Required number of consecutive numbers following a first one
                x = diff(t)==1;
                f = find([false,x']~=[x',false]);
                g = find(f(2:2:end)-f(1:2:end-1)>=N,1,'first');
                td{j} = t(f(2*g-1)); % First t followed by >=N consecutive numbers 
                %if i>500 % to activate after the faults
                %    t1{j}=find(X{j}(:,2), 1,'first');
                %else
                %    t1{j}=[];
                %end
                if size(X{j},2)>=2
                    t1{j}=find(X{j}(:,2), 1,'first');
                else
                    t1{j}=[];
                end
                if ~isempty(t1{j})
                    P0(j)=P0(j)+1;
                    if td{j}>=t1{j}
                        TP(j,i)=1;
                        detectionDelay(j,i)=td{j}-t1{j}+N;
                    elseif td{j}<t1{j}
                        FP(j,i)=1;
                    elseif isempty(td{j})
                        FN(j,i)=1;
                    end
                else
                    N0(j)=N0(j)+1;
                    if isempty(td{j})
                        TN(j,i)=1;
                    else
                        FP(j,i)=1;
                    end
                end
            end
            if max(FP(:,i))
             	GFP(i)=1;
            elseif max(TP(:,i))
                GTP(i)=1;
            elseif max(FN(:,i))
                GFN(i)=1;
            else
                GTN(i)=1;
            end                
        end
        PP0=500;
        NN0=500;
        TP0(:,l)=sum(TP,2);
        FP0(:,l)=sum(FP,2);
        FN0(:,l)=sum(FN,2);
        TN0(:,l)=sum(TN,2);
       
        ACCURACY(:,l)=(TP0(:,l)+TN0(:,l))./(PP0+NN0);
        F1(:,l)=2*TP0(:,l)./(2*TP0(:,l)+FP0(:,l)+FN0(:,l));
        MC(:,l)=((TP0(:,l).*TN0(:,l))-(FP0(:,l).*FN0(:,l)))./sqrt((TP0(:,l)+FP0(:,l)).*(TP0(:,l)+FN0(:,l)).*(TN0(:,l)+FP0(:,l)).*(TN0(:,l)+FN0(:,l)));
        TPR(:,l)=TP0(:,l)./(TP0(:,l)+FN0(:,l));
        FPR(:,l)=1-TN0(:,l)./(FP0(:,l)+TN0(:,l));

        GTP0(:,l)=sum(GTP,2);
        GFP0(:,l)=sum(GFP,2);
        GFN0(:,l)=sum(GFN,2);
        GTN0(:,l)=sum(GTN,2);
        GACCURACY(:,l)=(GTP0(:,l)+GTN0(:,l))./(PP0+NN0);
        GF1(:,l)=2*GTP0(:,l)./(2*GTP0(:,l)+GFP0(:,l)+GFN0(:,l));
        GMC(:,l)=((GTP0(:,l).*GTN0(:,l))-(GFP0(:,l).*GFN0(:,l)))./sqrt((GTP0(:,l)+GFP0(:,l)).*(GTP0(:,l)+GFN0(:,l)).*(GTN0(:,l)+GFP0(:,l)).*(GTN0(:,l)+GFN0(:,l)));
        GTPR(:,l)=GTP0(:,l)./(GTP0(:,l)+GFN0(:,l));
        GFPR(:,l)=1-GTN0(:,l)./(GFP0(:,l)+GTN0(:,l));        
    end
    
    %%
    % find solutions with no false positives (globally)
    c=find(GFP0==0);
    ee=[ee1(c); ee2(c); GACCURACY(c); GF1(c)];
    for i=1:size(ee1,2)
        tmp=ee(:,find(ee(1,:)==prc(i)));
        if ~isempty(tmp)
            hnfp(1,i)=min(tmp(2,:));
            hm(:,i)=tmp(3:4,find(tmp(2,:)==hnfp(1,i)))
            %hnfp(1,i)=tmp(1,1);
        else
            hnfp(1,i)=inf;
            hm(:,i)=[inf;inf];
        end
    end    
    
    
    [a b]=sort(ACCURACY,2);
    ee=[ee1(b); ee2(b)];
    for j=1:5
        ee=[ee;ACCURACY(j,b(j,:))];
    end
    hacc=0;
    for i=1:size(ee1,2)
        for j=1:5
            tmp=ee([j j+5 j+10],find(ee(j,:)==prc(i)));
            hacc(j,i)=min(tmp(2,find(tmp(3,:)==max(tmp(3,:)))));
        end
    end
    
    hgacc=0;
    [a b]=sort(GACCURACY);
    ee=[ee1(b); ee2(b); GACCURACY(b)];
    hgacc=0;
    for i=1:size(ee1,2)
        tmp=ee(:,find(ee(1,:)==prc(i)));
        %hgacc(1,i)=tmp(1,end);
        hgacc(1,i)=min(tmp(2,find(tmp(3,:)==max(tmp(3,:)))));
        %hgacc(3,i)=tmp(3,end);
    end
%     [a b]=sort(GF1);
%     ee=[ee1(b); ee2(b); GF1(b)];
%     hf1=0;
%     for i=1:size(ee1,2)
%         tmp=ee(:,find(ee(1,:)==prc(i)));
%         hf1(1,i)=tmp(1,end);
%         hf1(2,i)=min(tmp(2,find(tmp(3,:)==max(tmp(3,:)))));
%         hf1(3,i)=tmp(3,end);
%     end    
    
    save h.mat hacc hgacc prc hnfp hm
end


%% Step 5.4 Count TP/FP/FN/TN using the upper/lower-bounds approach
%% (12/6/2015) in test data
if STEP==5.4
    load XBOUNDS2.mat
    load Xbb2.mat
    load h.mat
    Xnf={};
    Ns=5; %sensors
    %load XallS500NoFault.mat
    %Xnf=Xall;
    %load XallS500Fault.mat
    load XallS500FaultSeed2.mat %357 faults, not 500!
    %Xwf=Xall;
    Xwf=Xall;
    XX=[Xnf, Xwf];
    %ee=0.000:0.001:0.1; %0.001 FOR ZERO FN IN SENSORS 2 AND 3
    %ee=0.000:0.001:0.5;
    %ee=0.02;
    %ee=0.9:0.001:1
    %w=20;
    %w=3;
    Nb=20;
    %[ee1,ee2] = meshgrid(1:Nb,1:30);
    %prc=0.1:0.05:0.95;
    %ee1=0.004;
    %ee2=12;
    %ee1=10;
    %ee2=1;
    %for l=1:(size(ee1,1)*size(ee1,2))%length(ee)
    %load XallS500NoFault.mat
    TN=zeros(Ns,size(XX,2));
    FP=zeros(Ns,size(XX,2));
    FN=zeros(Ns,size(XX,2));
    TP=zeros(Ns,size(XX,2));
    GTN=zeros(1,size(XX,2));
    GFP=zeros(1,size(XX,2));
    GFN=zeros(1,size(XX,2));
    GTP=zeros(1,size(XX,2));        
    N0=zeros(5,1);
    P0=zeros(5,1);
    detectionDelay=inf*ones(Ns,size(XX,2));
    for i=1:size(XX,2)
        X=XX{i};
        t1={};
        td={};
        tdmin={};
        for j=1:Ns
            tdmin=inf;
            td=[];
            for l=21%1:(length(prc)-1)
                B=Xmins{j}'*prc(l);
                eL=X{j}(:,1)-B;
                eL(find(eL>=0))=0;
                eL(find(eL<0))=1;

                t=find(eL);
                %N = hacc(j,l); % Required number of consecutive numbers following a first one
                %N = hgacc(l); 
                %N=hnfp(l);
                N=110;
                x = diff(t)==1;
                f = find([false,x']~=[x',false]);
                g = find(f(2:2:end)-f(1:2:end-1)>=N,1,'first');
                td = t(f(2*g-1))+N; % First t followed by >=N consecutive numbers 
                if ~isempty(td)
                    if td<tdmin
                        tdmin=td;
                    end
                end
            end
            if isinf(tdmin)
                tdmin=[];
            end

            if size(X{j},2)>=2
                t1{j}=find(X{j}(:,2), 1,'first');
            else
                t1{j}=[];
            end
            if ~isempty(t1{j})
                P0(j)=P0(j)+1;
                if tdmin>=t1{j}
                    TP(j,i)=1;
                    detectionDelay(j,i)=tdmin-t1{j};
                elseif tdmin<t1{j}
                    FP(j,i)=1;
                elseif isempty(tdmin)
                    FN(j,i)=1;
                end
            else
                N0(j)=N0(j)+1;
                if isempty(tdmin)
                    TN(j,i)=1;
                else
                    FP(j,i)=1;
                end
            end

        end
        if max(FP(:,i))
            GFP(i)=1;
        elseif max(TP(:,i))
            GTP(i)=1;
        elseif max(FN(:,i))
            GFN(i)=1;
        else
            GTN(i)=1;
        end                
    end
    %PP0=500;
    %NN0=500;
    PP0=357;
    NN0=0;
    TP0=sum(TP,2);
    FP0=sum(FP,2);
    FN0=sum(FN,2);
    TN0=sum(TN,2);

    ACCURACY=(TP0+TN0)./(PP0+NN0);
    F1=2*TP0./(2*TP0+FP0+FN0);
    MC=((TP0.*TN0)-(FP0.*FN0))./sqrt((TP0+FP0).*(TP0+FN0).*(TN0+FP0).*(TN0+FN0));
    TPR=TP0./(TP0+FN0);
    FPR=1-TN0./(FP0+TN0);

    GTP0=sum(GTP,2);
    GFP0=sum(GFP,2);
    GFN0=sum(GFN,2);
    GTN0=sum(GTN,2);
    GACCURACY=(GTP0+GTN0)./(PP0+NN0);
    GF1=2*GTP0./(2*GTP0+GFP0+GFN0);
    GMC=((GTP0.*GTN0)-(GFP0.*GFN0))./sqrt((GTP0+GFP0).*(GTP0+GFN0).*(GTN0+GFP0).*(GTN0+GFN0));
    GTPR=GTP0./(GTP0+GFN0);
    GFPR=1-GTN0./(GFP0+GTN0); 
    %end
    detectionDelay2=min(detectionDelay);
    dt1=detectionDelay2(find(detectionDelay2<inf));
    dtmax=max(dt1);
    dtmin=min(dt1);
    dtmean=mean(dt1);
    dtmedian=median(dt1);
    %hist(dt1)
    InjectionConcentration=[0.367090134586715;0.683891998922402;0.172825888811064;0.684713247550984;0.975551589380741;0.0955627221127798;0.122670549490801;0.723925291897694;0.0123809245472685;0.0861988659418183;0.744339884139756;0.120432736873828;0.113008638430856;0.336186107404617;0.279907149393068;0.399459849297749;0.721687147264223;0.395884069798460;0.623561102721636;0.191453442532315;0.758008640612480;0.851222773944597;0.501161686843802;0.0244707837814795;0.280463015325583;0.741898577074473;0.0893848906687390;0.291857469497182;0.248489839140554;0.368726435289125;0.185197904326579;0.621178016821471;0.138928718463950;0.974971223610906;0.341355228489896;0.157325229680783;0.165135244915791;0.428061299691005;0.426263906725805;0.217480340608154;0.192084601238409;0.365893013945731;0.563885385898820;0.221680801465027;0.789230222715638;0.592353181723670;0.679925229717011;0.503335853807319;0.565694939608544;0.634850000792579;0.923963320871798;0.0515338923090761;0.130128038642056;0.0619454570403069;0.117296476437383;0.401879483089726;0.388472289027866;0.0537616913457223;0.572746447554206;0.149544043536086;0.386739710991615;0.934322636078262;0.160544567350552;0.272543460723266;0.637944375927534;0.931126214066113;0.438279809168670;0.168752697840683;0.226592608367369;0.341968830368467;0.470132002825910;0.508571495073182;0.561117694974466;0.705099435851490;0.606218355990117;0.711909125890541;0.0566788423139038;0.601302769780766;0.0956517053282129;0.618211451274441;0.279861569534923;0.633399173446651;0.539908117866101;0.235736975556117;0.0313481716585104;0.868721064584666;0.594932474472994;0.0300984676136162;0.864945182048225;0.133674684508552;0.670422535236190;0.791549714650749;0.576054135140057;0.741849298934382;0.261167190159283;0.436965007072764;0.0708738719443203;0.177165768191761;0.625065998930981;0.484244032988438;0.689462436684157;0.795173350626218;0.478503974843074;0.216305187538408;0.441286958028230;0.709903580467172;0.349476911755966;0.658455882528078;0.668017649402850;0.372633513702375;0.851464795810853;0.568823192999150;0.211404736717886;0.0794100175050134;0.644164206760081;0.467823016675107;0.701441258518696;0.123231923730686;0.158942141644164;0.340574613465264;0.0375285106885845;0.741679143040292;0.401357078180349;0.608412977125688;0.596906551437875;0.208410016358090;0.747144930412595;0.264845444478488;0.257385349952330;0.875576648803231;0.816736435897991;0.889278137539177;0.0976576209523052;0.331635345393622;0.795250030604773;0.767264374423430;0.412340934580351;0.214087491954718;0.168477282937838;0.597694336249351;0.448709342837664;0.457925072618725;0.346695502915744;0.911317504901121;0.513304873142999;0.115002914385406;0.853982075515195;0.876743183879528;0.422691463223981;0.175422405440091;0.324368231615223;0.656868757054614;0.993199816901796;0.709322668476646;0.586089086991776;0.399285070784057;0.784184667646971;0.791709142640098;0.255560352120344;0.202838086617569;0.0997217814902411;0.0239815064817581;0.0571794389082023;0.0148297301562641;0.243274736331438;0.718493522479429;0.720632311757948;0.667263715838671;0.701272100536745;0.280193721074701;0.215870102502345;0.128812756915024;0.956005470806735;0.583947848800546;0.411494790768016;0.992948438037629;0.484398098422400;0.278840185272899;0.466993881606960;0.766168168171387;0.988402456505412;0.0800864864513681;0.0135777881432221;0.201885323134198;0.0866259164580265;0.921777910050833;0.321334224343921;0.664308548282976;0.0337709919706783;0.589062051190558;0.365894359706852;0.586503593058560;0.365888535215467;0.488611366361664;0.0912344404921096;0.377241350886059;0.295384341988426;0.524635799473448;0.553881750234348;0.0905761886809842;0.314003161300907;0.451131984335897;0.175260733428998;0.607146741173764;0.315278907453306;0.892597567705716;0.887320429965537;0.194466430784420;0.397302193752165;0.457970392637872;0.108389064720082;0.695010750412480;0.0456821825568016;0.780442232163829;0.892595977472419;0.860593378944599;0.992919921871703;0.00512689771369421;0.167769874058557;0.708273302162193;0.949389439983940;0.388317810086681;0.457434126854611;0.0953700454418408;0.884353741018266;0.333325294001645;0.198216285648856;0.421112900330272;0.644515850881355;0.377905762930357;0.462157570506519;0.482287503072195;0.806064134373359;0.519906413052188;0.0670841681152043;0.483613512238308;0.0923001892363188;0.289280494809747;0.937276267417370;0.802226483729774;0.0205120463019759;0.745962197308411;0.386650162463379;0.429280522013679;0.917733483909505;0.346664067053545;0.382974968935817;0.660302904276318;0.710912172082305;0.300876187300718;0.826079963159785;0.925940826500738;0.287470997910700;0.525061885139468;0.715103539039895;0.745180643510623;0.251075483044179;0.825643523515036;0.590699717211863;0.890147179779665;0.703650556832389;0.254908681965856;0.250217800145139;0.410567039349380;0.400230345036942;0.671409035879844;0.371666032528349;0.591008703965232;0.0832875436559727;0.813746225933426;0.632819263093555;0.793354813378935;0.914348459762683;0.454563231419103;0.844230460861805;0.981355704358479;0.645323152954375;0.946231704180237;0.316252157239361;0.250006721937101;0.862975596852124;0.0308562936404982;0.601727215853393;0.229316847971322;0.128263854015741;0.730594442566202;0.100796210160850;0.0819041734011398;0.563442352955901;0.775626129831945;0.948364085493779;0.155184893941127;0.192512468524516;0.557058491537840;0.482067276482502;0.104715841405427;0.959146501011749;0.375242504465972;0.700772559596585;0.884409139810321;0.264412792056991;0.985796101850363;0.275083799043244;0.333410519796149;0.630606213878191;0.598636650759092;0.286189308057627;0.983700524542341;0.0547159831294399;0.611528456495855;0.958768325838618;0.0192523696549481;0.574576790712111;0.912121498450694;0.0260244608046601;0.393112743922096;0.0458870986690219;0.224467330251107;0.622419530349979;0.00504659209635416;0.818073363424313;0.359019072427889;0.0335502955287463;0.879816951639865;0.0835062112116749;0.488891834620802;0.805064471813415;0.718577768056923;0.136547732696192;0.957743424902551;0.793742337168074;0.427460783825936;0.333393762509056;0.348966489708501;0.0797925307786989;0.0730647975919139;5.31272962936793e-05;0.892910468807868;0.146249253836576;0.0112092313408895;0.393551146329172;0.414116354386376;0.0535681718278528;0.320263910722110;0.675547506509138;0.926941899083062;0.112497889023506;0.752020818065862;0.213889232936264;0.836337959783309;0.332090078076390;0.437942229880924;0.495057608697125;0.433229372572726;0.286064829810553;0.891594625958984;0.0308784926453971;0.974825891188730;0.898753208992422;0.345183535639748;0.499683497240620;0.180538123091933;0.304234806124230;0.274386529938498;0.614408676332985;0.366623128469392;0.834920185075570;0.503550565104722;0.174347715067839;0.262047145172044;0.226368906547487;0.582212343617441;0.242859178335806;0.734210289890976;0.872342197630714;0.455315579406598;0.488943086699091;0.666458151613576;0.162154169363042;0.325124484638276;0.367213315501443;0.754193632748999;0.732385612433956;0.204988177495537;0.236299167497223;0.480108125824532;0.177270732902582;0.389207893698107;0.417069384091100;0.685138419123897;0.121410215330036;0.541489051907085;0.806495402383849;0.768227865345882;0.605732868241953;0.552316542506365;0.784129904482574;0.871304638623868;0.0170613513407583;0.750131984124953;0.468257188083724;0.998560123144910;0.799989696498956;0.426829057944393;0.715976871417825;0.423277919377795;0.0319909826070028;0.672444675896524;0.777667792876096;0.262594868551285;0.431955741453895;0.880146615617045;0.624168675683517;0.402932212875659;0.0817018011965332;0.162172710132866;0.636739203071566;0.675786023808544;0.935702150191973;0.346038276490773;0.865312980425224;0.315262006742536;0.608547321804123;0.854837561889942;0.254902684248473;0.149414164083737;0.203855755368180;0.203680473008976;0.257709861853025;0.329648163788788;0.396688798161544;0.148630701074670;0.0361929619853352;0.295112087528739;0.948855095519151;0.407590390372831;0.371690996164312;0.0105725335937797;0.692572110655053;0.0594637794697023;0.407741547286390;0.912185242358681;0.0973683223581725;0.469393873805829;0.102837054572458;0.382376199300576;0.596781644782416;0.109103858056061;0.708542348215609;0.471246459740795;0.239248863532789;0.0556493955923474;0.299391720583379;0.876647844853181;0.820328447418440;0.260215761726823;0.446307342707323;0.0875088819710114;0.761779286787742;0.224473041586798;0.718409949316834;0.316018168030315;0.317350085506844;0.702887113533396;0.423717155784237;0.414237265667989;0.0857240818840098;0.764644224552738;0.375482057861743;0.726946482307718;0.789528145822477;0.599546838365284;0.583712405331299;0.454396403140573;0.0403475836107263;0.121837745477370;0.726988238155371;0.491318677315171;0.593009636082225;0.712953633960781;0.611725978838152;0.278526332824736;0.192075785338914;0.217724191126285;0.290480259475522;0.101721005095970;0.624932647973733;0.243014494535986;0.344609666310535;0.854661681155982;0.298875188594160;0.195294702050879;0.318057369123240;0.590202854289768;0.539372048126241;0.226012857736094;0.598099970537284;0.266204820138498;0.104412067730172;0.853622340994711];
    IC=InjectionConcentration(1:357);
    A=IC(find(detectionDelay2==inf));
    B=IC(find(detectionDelay2<inf));
    p=ranksum(A,B);
end










% %% Step 5.21 Count TP/FP/FN/TN using multi-levels (29/5/2015)
% if STEP==5.21
%     load Xbb2.mat
%     Ns=5; %sensors
%     load XallS500NoFault.mat
%     Xnf=Xall;
%     load XallS500Fault.mat
%     Xwf=Xall;
%     Xwf=Xall;
%     XX=[Xnf, Xwf];
%     ee=0;
%     Nb=size(Xbb{1},2);
%     HistPlot=0;
%     for l=1:length(ee)
%         disp(l)
%         TN=zeros(Ns,2*size(Xall,2));
%         FP=zeros(Ns,2*size(Xall,2));
%         FN=zeros(Ns,2*size(Xall,2));
%         TP=zeros(Ns,2*size(Xall,2));
%         epsilon=ee(l);
%         %figure
%         for i=1:size(XX,2)
%             i
%             X=XX{i};
%             s=[4 4 4 4 4];
%             h=[50 50 50 100 150];
%             for j=1:Ns
%                 S{i}(j,200)=0;
%                 eL=repmat(X{j}(:,1),1,Nb)-Xbb{j};
%                 eL(find(eL>=0))=1;
%                 eL(find(eL<0))=0;
%                 seL{i}(:,j)=sum(eL,2);
%                 for k=200:1151
%                     S{i}(j,k+1)=max([0, S{i}(j,k)-seL{i}(k,j)+5-s(j)]);
%                 end
%                 if i>500 % to activate after the faults
%                     t0=min(find(X{j}(:,2)));
%                 else
%                     t0=[];
%                 end
%                 td=min(find(S{i}(j,:)>h(j)));  
%                 if isempty(t0)
%                     if isempty(td)
%                         TN(j,i)=1;
%                     else
%                         FP(j,i)=1;
%                     end                    
%                 else
%                     if isempty(td)
%                         FN(j,i)=1;
%                     else
%                         if td>=t0
%                            TP(j,i)=1;
%                         else
%                            FP(j,i)=1; 
%                         end
%                     end
%                 end                
%             end
%         end
%         P0=500;
%         N0=500;
%         TP0(:,l)=sum(TP,2);
%         FP0(:,l)=sum(FP,2);
%         FN0(:,l)=sum(FN,2);
%         TN0(:,l)=sum(TN,2);
%         ACCURACY(:,l)=(TP0(:,l)+TN0(:,l))./(P0+N0);
%         F1(:,l)=2*TP0(:,l)./(2*TP0(:,l)+FP0(:,l)+FN0(:,l));
%         MC(:,l)=((TP0(:,l).*TN0(:,l))-(FP0(:,l).*FN0(:,l)))./sqrt((TP0(:,l)+FP0(:,l)).*(TP0(:,l)+FN0(:,l)).*(TN0(:,l)+FP0(:,l)).*(TN0(:,l)+FN0(:,l)));
%         TPR(:,l)=TP0(:,l)./(TP0(:,l)+FN0(:,l));
%         FPR(:,l)=1-TN0(:,l)./(FP0(:,l)+TN0(:,l));
%     end
%     figure
%     for i=1:Ns
%         plot(FPR(i,:)',TPR(i,:)','-')
%         hold all
%     end
%     xlabel('FPR');
%     ylabel('TPR');
%     grid on
%     legend('JUNCTION-17', 'JUNCTION-31', 'JUNCTION-45', 'JUNCTION-83', 'JUNCTION-122')
%  
%     figure
%     subplot(1,3,1)
%     for i=1:Ns
%         plot(ee,F1(i,:)','-')
%         hold all
%     end
%     xlabel('Bias ()');
%     ylabel('F1-score');    
%     grid on    
%     legend('JUNCTION-17', 'JUNCTION-31', 'JUNCTION-45', 'JUNCTION-83', 'JUNCTION-122')
%     subplot(1,3,2)
%     for i=1:Ns
%         plot(ee,ACCURACY(i,:)','-')
%         hold all
%     end
%     xlabel('Bias ()');
%     ylabel('Accuracy');    
%     grid on    
%     legend('JUNCTION-17', 'JUNCTION-31', 'JUNCTION-45', 'JUNCTION-83', 'JUNCTION-122')
%     subplot(1,3,3)
%     for i=1:Ns
%         plot(ee,MC(i,:)','-')
%         hold all
%     end
%     xlabel('Bias ()');
%     ylabel('Matthews Correlation Coefficient');    
%     grid on    
%     legend('JUNCTION-17', 'JUNCTION-31', 'JUNCTION-45', 'JUNCTION-83', 'JUNCTION-122')
%        
%     [aACC bACC]=max(ACCURACY,[],2);
%     [aF1 bF1]=max(F1,[],2);
%     [aMC bMC]=max(MC,[],2);
%     save XResultsMLBounds.mat P0 N0 TP0 FN0 TN0 FP0 ACCURACY F1 MC TPR FPR ee
% end





% %% Step 5.2 Count TP/FP/FN/TN using the multi-level approach (old)
% if STEP==5.2
%     load Xbb2.mat
% 
%     Ns=5; %sensors
%     load XallS500NoFault.mat
%     Xnf=Xall;
%     load XallS500Fault.mat
%     Xwf=Xall;
%     Nb=size(Xbb{1},2);
%     ee=1; 
%     for l=1:length(ee)
%         disp(l)
%         TN=zeros(Ns,2*size(Xall,2));
%         FP=zeros(Ns,2*size(Xall,2));
%         FN=zeros(Ns,2*size(Xall,2));
%         TP=zeros(Ns,2*size(Xall,2));
%         epsilon=ee(l);
%         
%         h=[2.1986 2.5213 3.0137 0.6029 5.4551]';
%         
%         disp('calculate non-contamination events')
%         for i=1:size(Xall,2)
%             X=Xnf{i};
%             for j=1:1
%                 %eL=X{j}(:,1)-Xmins{j}';
%                 %eL(find(eL>=-epsilon))=0;
%                 %eL(find(eL<-epsilon))=1;
% 
%                 eL=repmat(X{j}(:,1),1,Nb)-Xbb{j};
%                 eL(find(eL>=0))=1;
%                 eL(find(eL<0))=0;
%                 seL(:,i)=sum(eL,2);
%                 aseL=(abs(seL(:,i)-mean(seL(:,i))));
%                 w=100;
%                 ma=0;
%                 for ll=(w+1):length(aseL)
%                   ma(ll)=mean(aseL((ll-w):ll));
%                 end
%                 plot(ma)
%                 %h(j,i)=max(max(ma),[],2)';
%                 
%                 if sum(X{j}(:,2))>0 % check if there was in fact contamination reaching the sensor
%                     if ma(ll)>h(j)
%                         TP(j,i)=1;
%                     else
%                         FN(j,i)=1;
%                     end
%                 else %no contamination even, therefore, True Negative. 
%                     if ma(l)>h(j)
%                         FP(j,i)=1;
%                     else
%                         TN(j,i)=1;
%                     end
%                 end
%             end
%         end
% 
%         disp('calculate contamination events')
%         for i=1:size(Xall,2)
%             X=Xwf{i};
%             for j=1:1
%                 eL=repmat(X{j}(:,1),1,Nb)-Xbb{j};
%                 eL(find(eL>=0))=1;
%                 eL(find(eL<0))=0;
%                 seL(:,i)=sum(eL,2);
%                 aseL=(abs(seL(:,i)-mean(seL(:,i))));
%                 w=100;
%                 ma=0;
%                 for ll=(w+1+60):length(aseL)
%                   ma(ll)=mean(aseL((ll-w):ll));
%                 end                   
%                 if sum(X{j}(:,2))>0 % check if there was in fact contamination reaching the sensor
%                     if ma(l)>h(j)
%                         TP(j,i+500)=1;
%                     else
%                         FN(j,i+500)=1;
%                     end
%                 else %no contamination even, therefore, True Negative. 
%                     if ma(l)>h(j)
%                         FP(j,i+500)=1;
%                     else
%                         TN(j,i+500)=1;
%                     end
%                 end
%             end
%         end
%         P0=500;
%         N0=500;
%         TP0(:,l)=sum(TP,2);
%         FP0(:,l)=sum(FP,2);
%         FN0(:,l)=sum(FN,2);
%         TN0(:,l)=sum(TN,2);
%         ACCURACY(:,l)=(TP0(:,l)+TN0(:,l))./(P0+N0);
%         F1(:,l)=2*TP0(:,l)./(2*TP0(:,l)+FP0(:,l)+FN0(:,l));
%         MC(:,l)=((TP0(:,l).*TN0(:,l))-(FP0(:,l).*FN0(:,l)))./sqrt((TP0(:,l)+FP0(:,l)).*(TP0(:,l)+FN0(:,l)).*(TN0(:,l)+FP0(:,l)).*(TN0(:,l)+FN0(:,l)));
%         TPR(:,l)=TP0(:,l)./(TP0(:,l)+FN0(:,l));
%         FPR(:,l)=1-TN0(:,l)./(FP0(:,l)+TN0(:,l));
%         save XResultsMultiBounds.mat P0 N0 TP0 FN0 TN0 FP0 ACCURACY F1 MC TPR FPR
%     end
% end



% %% STEP 5.5 CCWI2015
% if STEP==5.5
%     %load 2014-04-28-30RANDOM-WDSA2014v5_CALCULATE_BOUNDS.mat
%     load XBOUNDS.mat
%     load Xbb.mat
%     load Xall639Scenarios.mat
%     Nsim=length(Xall);
%     Ns=5;
%     Scenarios=[53,1;31,1;23,38;128,47;130,42;26,7;22,47;52,47;53,3;30,28;22,2;26,27;26,22;28,37;24,45;28,10;56,0;27,3;29,1;44,41;54,2;27,17;44,44;27,31;29,37;24,19;29,6;23,15;44,22;23,46;43,0;44,25;24,36;43,26;28,41;29,0;30,46;43,17;26,21;22,41;43,20;24,18;28,14;23,40;44,45;43,30;30,19;23,39;29,20;29,33;109,0;1,45;23,23;26,10;30,39;43,14;44,32;43,18;25,26;43,42;22,14;27,20;130,33;43,2;26,24;29,12;1,3;25,32;130,15;22,37;27,36;25,33;26,19;28,40;27,30;22,39;30,21;27,34;25,2;130,32;30,36;27,23;34,2;30,32;43,5;27,44;26,11;130,19;24,12;26,29;54,1;28,43;128,0;130,21;27,33;30,16;26,37;30,0;25,42;24,29;25,28;130,11;30,43;24,38;23,28;27,25;27,10;110,2;24,44;30,3;128,45;24,10;22,21;130,26;28,18;44,29;22,34;24,42;128,5;130,5;1,46;24,34;22,0;129,2;43,12;43,22;109,47;28,45;22,25;30,18;44,11;44,38;130,9;27,47;29,25;22,16;28,42;25,27;25,18;22,6;128,1;29,2;43,47;29,4;22,9;23,36;130,44;130,31;23,34;27,15;27,7;26,34;30,35;130,29;25,46;29,34;30,4;109,3;43,32;27,26;24,9;25,0;130,23;26,28;23,3;43,6;44,31;24,4;27,14;26,40;23,47;44,9;43,8;28,15;34,46;110,3;28,39;53,0;44,20;44,15;26,0;49,44;29,27;30,17;25,23;44,7;110,47;43,13;30,26;29,19;28,24;23,37;25,22;26,43;29,29;44,24;44,26;43,35;43,21;27,0;26,9;22,10;28,2;129,47;44,14;130,25;29,36;23,32;27,46;49,42;23,42;23,16;1,2;25,4;26,4;25,21;34,47;26,41;26,2;28,1;44,6;28,36;28,11;43,10;28,19;23,18;30,41;27,12;110,4;43,25;29,15;23,43;22,8;26,38;44,12;25,38;30,29;22,29;44,36;130,46;1,4;129,1;44,42;128,46;29,23;22,13;24,46;49,45;29,17;27,6;23,20;44,27;44,46;22,12;26,23;27,39;110,1;28,26;27,21;26,20;23,17;29,22;29,43;30,40;25,35;27,35;44,3;28,33;30,47;53,45;30,15;22,23;109,46;22,24;130,20;129,0;25,8;130,45;130,14;44,47;49,46;43,43;25,15;28,17;24,47;22,7;28,22;43,40;25,19;27,40;129,4;44,13;44,43;34,45;34,3;44,34;27,29;27,37;28,30;28,25;22,19;23,21;34,1;26,15;43,4;43,16;43,41;130,28;28,38;26,26;44,0;24,32;44,40;53,46;130,13;1,1;44,21;22,5;27,11;28,23;26,3;28,4;22,11;26,5;23,29;30,42;34,4;43,27;26,35;27,19;24,21;22,31;30,23;27,43;43,39;29,28;25,34;29,13;23,2;23,19;28,27;22,32;26,42;28,8;23,24;25,3;23,33;22,35;23,25;22,3;27,41;27,8;25,39;22,27;25,36;22,28;128,3;43,7;130,2;29,30;43,9;25,12;130,8;56,44;44,30;25,29;24,14;30,38;28,44;30,45;26,18;22,26;25,1;25,24;109,1;130,34;22,45;24,17;25,37;26,31;24,20;30,22;43,34;26,8;24,3;27,1;27,13;109,2;130,27;43,38;43,1;29,39;28,0;22,43;24,23;25,47;24,6;43,11;22,20;56,1;44,8;30,25;23,0;23,44;24,11;26,39;28,31;128,2;22,17;23,26;28,20;28,47;27,27;24,35;25,20;130,37;27,9;28,13;27,18;25,6;44,23;44,37;30,27;24,41;44,35;48,45;28,28;23,22;26,30;29,46;26,47;28,46;43,29;25,5;22,38;26,33;29,11;130,24;130,4;30,31;129,3;48,47;23,41;24,8;29,10;28,7;24,5;28,21;44,16;49,41;130,17;28,5;27,24;130,18;26,32;43,37;30,20;44,18;24,13;130,39;44,33;27,42;24,26;44,39;31,0;130,12;43,24;56,45;22,42;29,24;24,33;28,16;22,33;130,40;24,28;26,14;26,45;29,40;24,30;44,4;53,47;43,28;30,1;25,31;24,43;47,47;130,22;22,36;29,26;44,1;28,6;28,9;110,46;43,36;129,46;23,4;22,4;44,2;29,41;21,47;44,17;27,2;22,18;28,12;22,22;25,41;29,45;29,38;29,8;26,16;27,38;44,10;29,5;128,4;43,3;130,3;30,37;23,27;30,30;29,42;56,47;23,1;25,43;43,31;27,5;130,47;25,44;27,16;29,14;53,2;25,16;26,36;54,0;24,7;130,30;54,46;28,34;25,40;25,7;25,10;22,1;29,16;26,25;130,16;28,29;26,13;25,9;29,7;27,28;130,36;30,2;22,15;24,31;24,16;130,10;110,45;29,31;25,17;43,45;43,44;25,25;110,0;26,12;130,43;30,24;129,45;49,47;44,19;130,38;24,40;22,30;25,45;54,47;24,39;25,30;1,0;25,13;48,46;26,44;34,0;29,47;44,28;130,41;24,25;29,3;28,3;24,22;43,15;27,22;26,6;23,5;23,31;29,9;56,2;25,14;43,23;23,45;26,1;24,15;24,1;109,45;24,2;43,46;25,11;29,21;22,40;30,44;24,0;24,24;22,44;24,37;28,32;24,27;26,46;29,32;27,32;56,46;31,2;43,19;29,44;109,4;130,35;44,5;22,46;28,35;23,35;49,43;1,47;29,18;29,35;26,17;30,34;27,45;30,33;130,7;23,30;27,4;43,33;130,6;];
%     Scenarios(:,3)=Scenarios(:,2)*3+4*144; %correction of occurance time
%     InjectionConcentration=[0.0219673412022960;0.205103586989038;0.175986524753266;0.805521528146007;0.400323549937608;0.237903801369436;0.449189616110730;0.529877973035852;0.659092813571493;0.372917696075941;0.627717948345336;0.0555578400639621;0.760617955010672;0.705969864365631;0.235510393155511;0.223177764668678;0.948690786468187;0.646048170815244;0.131606891812574;0.917030693924535;0.534872789650631;0.606975658148050;0.439886494278855;0.172309344714652;0.00315661914793617;0.0532980193632180;0.779811437604861;0.290831824900038;0.0104810949463775;0.155762763766461;0.904770622916879;0.479859363976801;0.996330358086308;0.324328356573511;0.986688931000740;0.280863329433307;0.469977785586369;0.916642350105868;0.00797822932152927;0.0901002069423442;0.314178079978646;0.390990201100237;0.372309891680400;0.412349472480058;0.357583972326286;0.913822887890890;0.621276782183571;0.798878159280344;0.745223024741385;0.963376828452282;0.474355797504241;0.497888653770969;0.0146039286696370;0.448229150589662;0.387333960452738;0.921873329170921;0.925043375662083;0.204014752620838;0.875947298424294;0.0462446171074382;0.233279724714011;0.732333268379948;0.325241661782023;0.336609570466266;0.397050826529530;0.233241481815112;0.0895848665803600;0.652852616111214;0.493918981167450;0.296316481333373;0.191101770005702;0.847448485832405;0.0667013852236333;0.0501814536052670;0.399690743721878;0.602329733596337;0.355832553634342;0.477728932387069;0.190166629473756;0.130541565423152;0.0120900669191452;0.197754710073469;0.663412204786861;0.968925852779730;0.736807668924708;0.526491617563410;0.744616388224352;0.767636886689643;0.673154592827500;0.709241651794520;0.224441710498390;0.191828346434901;0.0590185313760389;0.924456837086220;0.346060908095008;0.245682352802568;0.183303552765075;0.782811322613997;0.709899173448747;0.275408153084762;0.784828895602761;0.619248395608388;0.707784990178321;0.742329927041349;0.339083783952093;0.981156882821190;0.303729575734460;0.782979369062455;0.534255832682483;0.237779894488761;0.366686672608688;0.902906534216789;0.150120581570138;0.0766144493020207;0.659049419061770;0.643586171159328;0.752778674826389;0.951187807112554;0.613474140695051;0.659882661728134;0.647895664744031;0.182437352921086;0.224590544693447;0.693284662763255;0.0353270620272155;0.741931491411259;0.642576149032720;0.777336792916682;0.699478550674151;0.136001180455089;0.771839908683598;0.313345245231569;0.393536606986791;0.169753626999331;0.0492089777482715;0.0552890151996580;0.242478460652045;0.335488178923488;0.549823167058557;0.877968753165551;0.0208344534136515;0.164658523241365;0.415800117615517;0.352576763998986;0.757672530951757;0.202227706183785;0.841057830881820;0.658963630748430;0.201741988864607;0.677606847452748;0.538285138336143;0.958320015556328;0.484501455204795;0.0159576269872289;0.199836774356587;0.656666611161393;0.595733789538841;0.497800779295061;0.537697612092689;0.0837664418312565;0.862587857927470;0.514128186979391;0.952438562620635;0.634921965019275;0.133466078961951;0.164389113506483;0.887830703467052;0.770633170740043;0.0317006278930701;0.792452998828354;0.757551308142744;0.164835955093073;0.397897249272977;0.459068530918597;0.564799148852378;0.579294761912569;0.207063464544277;0.115648595670075;0.705947426942153;0.858404616759347;0.206393874346462;0.861846140987168;0.0480915713347921;0.275039423850849;0.587596661219186;0.737085110851138;0.189458075067707;0.221867662957808;0.929811331876466;0.339054847759686;0.494826297040482;0.545574359384167;0.468258169697718;0.0150581095437790;0.0816471022933941;0.242848245074436;0.550454966048922;0.496614384230512;0.597955762221457;0.842495656033277;0.824490951292445;0.219418372129751;0.764580384718525;0.302525964240789;0.553880994931739;0.0778818177421958;0.959710793085262;0.859299383992003;0.244746753594255;0.458687658635288;0.163478683290760;0.586230067809220;0.768749669552199;0.375696163799472;0.325424977729761;0.417600704085827;0.615033570497778;0.869219356155591;0.969718907014336;0.0656701899439423;0.718882387838737;0.256292405657606;0.506461887390568;0.104941373274169;0.749660618952318;0.546022731599409;0.00404999125937465;0.0682030963097713;0.289439678326920;0.612673640536458;0.205876496250684;0.166272485240489;0.541659436906529;0.670156088038420;0.313371661730749;0.837518708704747;0.176937200677086;0.783531779788216;0.818622900554269;0.595089615599760;0.671169385160864;0.343856398641996;0.194491976031331;0.826641158585735;0.357952350451589;0.105154039852859;0.323947806993475;0.590792139335904;0.443485818544163;0.666152271752317;0.0212313411856216;0.835151306742407;0.388012419635436;0.324736812768847;0.851612206013693;0.0463464721321810;0.945157125566694;0.255809399418444;0.388576025789872;0.797265450375744;0.640424465127487;0.613985397673205;0.252578693559663;0.0901026572520391;0.355360435021743;0.542831410441004;0.367515281945241;0.829343653670207;0.778787235160725;0.0770613463023032;0.170047302809566;0.985018320374665;0.202910536994650;0.317395269087234;0.462287549144722;0.666838475347887;0.554255171937056;0.366674746091792;0.702457564744380;0.204290658796341;0.513102390111006;0.711870595678627;0.409101570681250;0.770098439776385;0.0444773216938960;0.530345709310074;0.520336374417104;0.293444828266951;0.927228682640581;0.932469140241141;0.00884003285730259;0.574432232684657;0.482534731031645;0.961224448849086;0.299311806587182;0.533533310766115;0.0943540460869456;0.808452583294573;0.662567431881357;0.770827629962390;0.299976777890686;0.709706008764778;0.0288893096283494;0.542626923668490;0.930706096315154;0.377360768791922;0.302441085829605;0.127329538169936;0.0275480221153926;0.999607693403777;0.406503037273187;0.0965474504495726;0.672999705967028;0.106058187832152;0.519962894972396;0.0163758010679743;0.228088549444493;0.484250513596577;0.798382017667583;0.406570939070811;0.237772963120496;0.250191166182138;0.962930023187273;0.964899708500551;0.0694007687593814;0.418720538922921;0.436097677534492;0.493666322200404;0.0498772221849660;0.286473262722824;0.756126582508966;0.219472228185959;0.669739121417393;0.305413662132534;0.0874194614996293;0.258889424269502;0.154553697516468;0.583994159281251;0.189835039987152;0.557517064063585;0.189295716671876;0.493110104227956;0.701521759248116;0.476207683084629;0.622529603365124;0.855043757639380;0.720434645060652;0.345079534382131;0.751734360471244;0.399396440200227;0.655970445208238;0.895272614851255;0.846837805047090;0.802989426442883;0.843290225529713;0.178820477881851;0.435771760268031;0.0159748247898998;0.488880243845694;0.610258314577052;0.611493096505987;0.364472976124134;0.697309718326344;0.684435910864005;0.314353891329073;0.345851567734895;0.727298920381488;0.712954851665047;0.632191934451550;0.249842327204460;0.0999933253508030;0.587819170946171;0.476806092298034;0.679993253052232;0.646604048854953;0.474249105190043;0.704710929051373;0.0765845664202164;0.156807824576650;0.469107659752065;0.292437452959100;0.996271883601449;0.341547689559659;0.392018429186204;0.653739332525870;0.396961762289033;0.736338791780332;0.646073452032205;0.556508305276049;0.235086774562992;0.103420080199568;0.181287914133299;0.905972838358010;0.685494283067758;0.102415519814200;0.297641517267396;0.460980713116462;0.702845348372518;0.721770096906354;0.790018705087723;0.844376409353864;0.434312010386173;0.481958560404348;0.277524715884367;0.357899868561840;0.223090918838555;0.489072919585310;0.848559470311068;0.739017518115704;0.667426970632480;0.445095420090992;0.718725469298067;0.618962492616364;0.902613403230260;0.223468090977272;0.828205055011532;0.642359578815456;0.137441151373759;0.973431138775047;0.457149392206757;0.309834818965679;0.393802356158291;0.636199952399451;0.612599977577385;0.967823143102146;0.203566117772630;0.335741404600321;0.805787117595685;0.864085430681745;0.683833468092528;0.189098231116821;0.173970380413332;0.920183606874283;0.525880736078080;0.477531264292789;0.867958968909438;0.786390460928153;0.864476819459571;0.261904657009013;0.831570350486585;0.202880628035814;0.814715397923587;0.921692901720150;0.892599210558738;0.914931860712791;0.259782999874923;0.172878897829391;0.575635818566957;0.711202654853092;0.183020115915230;0.0190881872638539;0.815163343593089;0.450315769040173;0.457130258184453;0.988249306095880;0.506087553457398;0.813510958484146;0.678679243046175;0.562037877068873;0.170599896540213;0.272461151365406;0.254570998369982;0.574769604287469;0.152739259485500;0.0887341727915845;0.355242108160277;0.554111849774659;0.957859162687259;0.738947284752013;0.487014827079612;0.258198727042507;0.546005403411577;0.712815138377629;0.284030712807565;0.704190156750470;0.323964505141584;0.871437914609647;0.257030844342444;0.917400863448810;0.756311984153610;0.335517669718488;0.0454749586272403;0.297629648026838;0.261494387062962;0.936163367208170;0.0977126677044261;0.256806108288842;0.140262010572600;0.383611693691281;0.361735869367484;0.694756459302621;0.771811499154107;0.835866283083272;0.404619780557519;0.444651830217173;0.263310460030711;0.458901736167679;0.761479770187978;0.190497549339429;0.692311747787666;0.683545067293358;0.341945999461201;0.0864129444055320;0.342356623775492;0.987775794690371;0.547781361056390;0.561335274745401;0.361962645948847;0.506190462273634;0.543099432970909;0.872169942069878;0.560216368436914;0.556504319215428;0.168093053702308;0.139953574696534;0.199729924648874;0.860843573632112;0.197942034899230;0.811780551360818;0.595726721266157;0.379004320306240;0.925611386972299;0.750580843421901;0.0122353918907397;0.640231507662792;0.370949288537237;0.544692445334370;0.645928734748591;0.124244919570277;0.184363217644563;0.592598952163290;0.810589008410736;0.569464359231975;0.987485611805453;0.670677614244948;0.0786626148403914;0.0825676224578953;0.714030649845503;0.713131953362903;0.608740170304077;0.0960423006192047;0.182946506972865;0.781942692949410;0.110840400732514;0.894615111357819;0.796176590861835;0.339962614858506;0.751667926903660;0.282847469804272;0.817425000396289;0.461981660435899;0.525766946154538;0.565064019321028;0.0309727285201534;0.558648238218691;0.200939741544863;0.194236144513933;0.526880845672861;0.286373223777103;0.0747720217680428;0.693369855495808;0.467161318039131;0.580272283675276;0.636271730361633;0.818972187963767;0.465563107033057;0.719139904584335;0.584376348920342;0.613296304183684;0.670984415184234;0.235066001412955;0.754285747536591;0.280558847487233;0.352549717925745;0.303109177995058;0.355954562945270;0.528339421156952;0.800651384890383;0.547825852664106;0.309105725637221;0.139930784767461;0.816699586723326;0.269954058933050;0.117868487778059;0.0156740858292552;0.434360532292333;0.297466237236497;0.515049233806808;0.432472591024112;0.566837342254276;0.835211267618095;0.395774857325375;0.788027067570028;0.370924649467191;0.130583595079642;0.718482503536382;0.535436935972160;0.0885828840958806;0.812532999465490;0.242122016494219;0.344731218342079;0.897586675313109;0.739251987421537;0.608152593769204;0.220643479014115;0.354951790233586;0.674738455877983;0.329227941264039;0.334008824701425;0.686316756851187;0.925732397905426;0.784411596499575;0.605702368358943;0.0397050087525067;0.322082103380040;0.233911508337553;0.350720629259348;0.561615961865343;0.0794710708220820;0.670287306732632;0.518764255344292;0.870839571520146;0.200678539090175;0.804206488562844;0.298453275718937;0.104205008179045;0.373572465206297;0.632422722239244;0.128692674976165;0.937788324401615;0.408368217948996;0.444639068769589;0.0488288104761526;0.665817672696811;0.397625015302387;0.883632187211715;0.206170467290175;0.107043745977359;0.0842386414689192;];
%     %figure(1)
%     o=2;
%     w=3;
%     faultflag=nan(Nsim,Ns);
%     timeflag=inf(Nsim,Ns);
%     SensorNodesID={'JUNCTION-17' 'JUNCTION-31' 'JUNCTION-45' 'JUNCTION-83' 'JUNCTION-122'};
%     Nb=size(Xbb{1},2);
%     for i=1:Nsim
%         disp(i)
%         %pause
%         clf
%         X=Xall{i};
%         t0=Scenarios(i,3);
%         for j=1:1
%               eL=repmat(X{j}(:,1),1,Nb)-Xbb{j};
%               eL(find(eL>0))=1;
%               eL(find(eL<0))=0;
%               seL(:,i)=sum(eL,2);
%               aseL=(abs(seL(:,i)-mean(seL(:,i))));
%               w=100;
%               ma=0;
%               for l=(w+1+60):length(aseL)
%                   ma(l)=mean(aseL((l-w):l));
%               end
%               %plot(ma)
%               %title(j)
%               %grid on
%               %axis([0 1151 0 3])
%               %hist(aseL(w+1+60:400),5)
%               plot(X{1})
%               hold all
%               plot(Xbb{1}(:,1),'k')
%               plot(Xbb{1}(:,12),'k')
%               axis([0 1151 0 1])
%               
% %             eL=Xmins{j}'-X{j}(:,1);
% %             eL(find(eL>0))=1;
% %             eL(find(eL<0))=0;
% %             subplot(Ns,1,j)
% %             hold on
% %             confplot((double(XT2)/3600/24),X{j}(:,1)',X{j}(:,1)'-Xmins{j},Xmaxs{j}-X{j}(:,1)','Color',[0 0 0],'LineWidth',2)
% %             line([Scenarios(i,2) Scenarios(i,2)]/2/24+4, [0 1],'Color',[0 0 0]);
% %             hold on
% %             xlabel('Time (day)')
% %             ylabel('Chlorine (mg/L)')
% %             axis([3 8 0.00 1.00])
% %             title(SensorNodesID(j))
% %             grid on
% %             for k=w:length(XT2)
% %                 if sum(eL(k-w+1:k))>o
% %                     if isnan(faultflag(i,j))
% %                         faultflag(i,j)=1;
% %                         timeflag(i,j)=k/144;
% %                     end
% %                     plot(k/144,X{j}(k,1),'r.');
% %                 end
% %             end
%         end
%     end
%     tdelay=min(timeflag,[],2)-Scenarios(:,2)/144;
%     %hist(tdelay)
%     save XFlagResults.mat  faultflag  timeflag tdelay o w
% end



% %% STEP 4 PLOT lower bounds and points outside boundes
% 
% if STEP==4
%     %load 2014-04-28-30RANDOM-WDSA2014v5_CALCULATE_BOUNDS.mat
%     load XBOUNDS.mat
%     load Xall639Scenarios.mat
%     Nsim=length(Xall);
%     Ns=5;
%     Scenarios=[53,1;31,1;23,38;128,47;130,42;26,7;22,47;52,47;53,3;30,28;22,2;26,27;26,22;28,37;24,45;28,10;56,0;27,3;29,1;44,41;54,2;27,17;44,44;27,31;29,37;24,19;29,6;23,15;44,22;23,46;43,0;44,25;24,36;43,26;28,41;29,0;30,46;43,17;26,21;22,41;43,20;24,18;28,14;23,40;44,45;43,30;30,19;23,39;29,20;29,33;109,0;1,45;23,23;26,10;30,39;43,14;44,32;43,18;25,26;43,42;22,14;27,20;130,33;43,2;26,24;29,12;1,3;25,32;130,15;22,37;27,36;25,33;26,19;28,40;27,30;22,39;30,21;27,34;25,2;130,32;30,36;27,23;34,2;30,32;43,5;27,44;26,11;130,19;24,12;26,29;54,1;28,43;128,0;130,21;27,33;30,16;26,37;30,0;25,42;24,29;25,28;130,11;30,43;24,38;23,28;27,25;27,10;110,2;24,44;30,3;128,45;24,10;22,21;130,26;28,18;44,29;22,34;24,42;128,5;130,5;1,46;24,34;22,0;129,2;43,12;43,22;109,47;28,45;22,25;30,18;44,11;44,38;130,9;27,47;29,25;22,16;28,42;25,27;25,18;22,6;128,1;29,2;43,47;29,4;22,9;23,36;130,44;130,31;23,34;27,15;27,7;26,34;30,35;130,29;25,46;29,34;30,4;109,3;43,32;27,26;24,9;25,0;130,23;26,28;23,3;43,6;44,31;24,4;27,14;26,40;23,47;44,9;43,8;28,15;34,46;110,3;28,39;53,0;44,20;44,15;26,0;49,44;29,27;30,17;25,23;44,7;110,47;43,13;30,26;29,19;28,24;23,37;25,22;26,43;29,29;44,24;44,26;43,35;43,21;27,0;26,9;22,10;28,2;129,47;44,14;130,25;29,36;23,32;27,46;49,42;23,42;23,16;1,2;25,4;26,4;25,21;34,47;26,41;26,2;28,1;44,6;28,36;28,11;43,10;28,19;23,18;30,41;27,12;110,4;43,25;29,15;23,43;22,8;26,38;44,12;25,38;30,29;22,29;44,36;130,46;1,4;129,1;44,42;128,46;29,23;22,13;24,46;49,45;29,17;27,6;23,20;44,27;44,46;22,12;26,23;27,39;110,1;28,26;27,21;26,20;23,17;29,22;29,43;30,40;25,35;27,35;44,3;28,33;30,47;53,45;30,15;22,23;109,46;22,24;130,20;129,0;25,8;130,45;130,14;44,47;49,46;43,43;25,15;28,17;24,47;22,7;28,22;43,40;25,19;27,40;129,4;44,13;44,43;34,45;34,3;44,34;27,29;27,37;28,30;28,25;22,19;23,21;34,1;26,15;43,4;43,16;43,41;130,28;28,38;26,26;44,0;24,32;44,40;53,46;130,13;1,1;44,21;22,5;27,11;28,23;26,3;28,4;22,11;26,5;23,29;30,42;34,4;43,27;26,35;27,19;24,21;22,31;30,23;27,43;43,39;29,28;25,34;29,13;23,2;23,19;28,27;22,32;26,42;28,8;23,24;25,3;23,33;22,35;23,25;22,3;27,41;27,8;25,39;22,27;25,36;22,28;128,3;43,7;130,2;29,30;43,9;25,12;130,8;56,44;44,30;25,29;24,14;30,38;28,44;30,45;26,18;22,26;25,1;25,24;109,1;130,34;22,45;24,17;25,37;26,31;24,20;30,22;43,34;26,8;24,3;27,1;27,13;109,2;130,27;43,38;43,1;29,39;28,0;22,43;24,23;25,47;24,6;43,11;22,20;56,1;44,8;30,25;23,0;23,44;24,11;26,39;28,31;128,2;22,17;23,26;28,20;28,47;27,27;24,35;25,20;130,37;27,9;28,13;27,18;25,6;44,23;44,37;30,27;24,41;44,35;48,45;28,28;23,22;26,30;29,46;26,47;28,46;43,29;25,5;22,38;26,33;29,11;130,24;130,4;30,31;129,3;48,47;23,41;24,8;29,10;28,7;24,5;28,21;44,16;49,41;130,17;28,5;27,24;130,18;26,32;43,37;30,20;44,18;24,13;130,39;44,33;27,42;24,26;44,39;31,0;130,12;43,24;56,45;22,42;29,24;24,33;28,16;22,33;130,40;24,28;26,14;26,45;29,40;24,30;44,4;53,47;43,28;30,1;25,31;24,43;47,47;130,22;22,36;29,26;44,1;28,6;28,9;110,46;43,36;129,46;23,4;22,4;44,2;29,41;21,47;44,17;27,2;22,18;28,12;22,22;25,41;29,45;29,38;29,8;26,16;27,38;44,10;29,5;128,4;43,3;130,3;30,37;23,27;30,30;29,42;56,47;23,1;25,43;43,31;27,5;130,47;25,44;27,16;29,14;53,2;25,16;26,36;54,0;24,7;130,30;54,46;28,34;25,40;25,7;25,10;22,1;29,16;26,25;130,16;28,29;26,13;25,9;29,7;27,28;130,36;30,2;22,15;24,31;24,16;130,10;110,45;29,31;25,17;43,45;43,44;25,25;110,0;26,12;130,43;30,24;129,45;49,47;44,19;130,38;24,40;22,30;25,45;54,47;24,39;25,30;1,0;25,13;48,46;26,44;34,0;29,47;44,28;130,41;24,25;29,3;28,3;24,22;43,15;27,22;26,6;23,5;23,31;29,9;56,2;25,14;43,23;23,45;26,1;24,15;24,1;109,45;24,2;43,46;25,11;29,21;22,40;30,44;24,0;24,24;22,44;24,37;28,32;24,27;26,46;29,32;27,32;56,46;31,2;43,19;29,44;109,4;130,35;44,5;22,46;28,35;23,35;49,43;1,47;29,18;29,35;26,17;30,34;27,45;30,33;130,7;23,30;27,4;43,33;130,6;];
%     Scenarios(:,2)=Scenarios(:,2)*3+4*144; %correction of occurance time
%     InjectionConcentration=[0.0219673412022960;0.205103586989038;0.175986524753266;0.805521528146007;0.400323549937608;0.237903801369436;0.449189616110730;0.529877973035852;0.659092813571493;0.372917696075941;0.627717948345336;0.0555578400639621;0.760617955010672;0.705969864365631;0.235510393155511;0.223177764668678;0.948690786468187;0.646048170815244;0.131606891812574;0.917030693924535;0.534872789650631;0.606975658148050;0.439886494278855;0.172309344714652;0.00315661914793617;0.0532980193632180;0.779811437604861;0.290831824900038;0.0104810949463775;0.155762763766461;0.904770622916879;0.479859363976801;0.996330358086308;0.324328356573511;0.986688931000740;0.280863329433307;0.469977785586369;0.916642350105868;0.00797822932152927;0.0901002069423442;0.314178079978646;0.390990201100237;0.372309891680400;0.412349472480058;0.357583972326286;0.913822887890890;0.621276782183571;0.798878159280344;0.745223024741385;0.963376828452282;0.474355797504241;0.497888653770969;0.0146039286696370;0.448229150589662;0.387333960452738;0.921873329170921;0.925043375662083;0.204014752620838;0.875947298424294;0.0462446171074382;0.233279724714011;0.732333268379948;0.325241661782023;0.336609570466266;0.397050826529530;0.233241481815112;0.0895848665803600;0.652852616111214;0.493918981167450;0.296316481333373;0.191101770005702;0.847448485832405;0.0667013852236333;0.0501814536052670;0.399690743721878;0.602329733596337;0.355832553634342;0.477728932387069;0.190166629473756;0.130541565423152;0.0120900669191452;0.197754710073469;0.663412204786861;0.968925852779730;0.736807668924708;0.526491617563410;0.744616388224352;0.767636886689643;0.673154592827500;0.709241651794520;0.224441710498390;0.191828346434901;0.0590185313760389;0.924456837086220;0.346060908095008;0.245682352802568;0.183303552765075;0.782811322613997;0.709899173448747;0.275408153084762;0.784828895602761;0.619248395608388;0.707784990178321;0.742329927041349;0.339083783952093;0.981156882821190;0.303729575734460;0.782979369062455;0.534255832682483;0.237779894488761;0.366686672608688;0.902906534216789;0.150120581570138;0.0766144493020207;0.659049419061770;0.643586171159328;0.752778674826389;0.951187807112554;0.613474140695051;0.659882661728134;0.647895664744031;0.182437352921086;0.224590544693447;0.693284662763255;0.0353270620272155;0.741931491411259;0.642576149032720;0.777336792916682;0.699478550674151;0.136001180455089;0.771839908683598;0.313345245231569;0.393536606986791;0.169753626999331;0.0492089777482715;0.0552890151996580;0.242478460652045;0.335488178923488;0.549823167058557;0.877968753165551;0.0208344534136515;0.164658523241365;0.415800117615517;0.352576763998986;0.757672530951757;0.202227706183785;0.841057830881820;0.658963630748430;0.201741988864607;0.677606847452748;0.538285138336143;0.958320015556328;0.484501455204795;0.0159576269872289;0.199836774356587;0.656666611161393;0.595733789538841;0.497800779295061;0.537697612092689;0.0837664418312565;0.862587857927470;0.514128186979391;0.952438562620635;0.634921965019275;0.133466078961951;0.164389113506483;0.887830703467052;0.770633170740043;0.0317006278930701;0.792452998828354;0.757551308142744;0.164835955093073;0.397897249272977;0.459068530918597;0.564799148852378;0.579294761912569;0.207063464544277;0.115648595670075;0.705947426942153;0.858404616759347;0.206393874346462;0.861846140987168;0.0480915713347921;0.275039423850849;0.587596661219186;0.737085110851138;0.189458075067707;0.221867662957808;0.929811331876466;0.339054847759686;0.494826297040482;0.545574359384167;0.468258169697718;0.0150581095437790;0.0816471022933941;0.242848245074436;0.550454966048922;0.496614384230512;0.597955762221457;0.842495656033277;0.824490951292445;0.219418372129751;0.764580384718525;0.302525964240789;0.553880994931739;0.0778818177421958;0.959710793085262;0.859299383992003;0.244746753594255;0.458687658635288;0.163478683290760;0.586230067809220;0.768749669552199;0.375696163799472;0.325424977729761;0.417600704085827;0.615033570497778;0.869219356155591;0.969718907014336;0.0656701899439423;0.718882387838737;0.256292405657606;0.506461887390568;0.104941373274169;0.749660618952318;0.546022731599409;0.00404999125937465;0.0682030963097713;0.289439678326920;0.612673640536458;0.205876496250684;0.166272485240489;0.541659436906529;0.670156088038420;0.313371661730749;0.837518708704747;0.176937200677086;0.783531779788216;0.818622900554269;0.595089615599760;0.671169385160864;0.343856398641996;0.194491976031331;0.826641158585735;0.357952350451589;0.105154039852859;0.323947806993475;0.590792139335904;0.443485818544163;0.666152271752317;0.0212313411856216;0.835151306742407;0.388012419635436;0.324736812768847;0.851612206013693;0.0463464721321810;0.945157125566694;0.255809399418444;0.388576025789872;0.797265450375744;0.640424465127487;0.613985397673205;0.252578693559663;0.0901026572520391;0.355360435021743;0.542831410441004;0.367515281945241;0.829343653670207;0.778787235160725;0.0770613463023032;0.170047302809566;0.985018320374665;0.202910536994650;0.317395269087234;0.462287549144722;0.666838475347887;0.554255171937056;0.366674746091792;0.702457564744380;0.204290658796341;0.513102390111006;0.711870595678627;0.409101570681250;0.770098439776385;0.0444773216938960;0.530345709310074;0.520336374417104;0.293444828266951;0.927228682640581;0.932469140241141;0.00884003285730259;0.574432232684657;0.482534731031645;0.961224448849086;0.299311806587182;0.533533310766115;0.0943540460869456;0.808452583294573;0.662567431881357;0.770827629962390;0.299976777890686;0.709706008764778;0.0288893096283494;0.542626923668490;0.930706096315154;0.377360768791922;0.302441085829605;0.127329538169936;0.0275480221153926;0.999607693403777;0.406503037273187;0.0965474504495726;0.672999705967028;0.106058187832152;0.519962894972396;0.0163758010679743;0.228088549444493;0.484250513596577;0.798382017667583;0.406570939070811;0.237772963120496;0.250191166182138;0.962930023187273;0.964899708500551;0.0694007687593814;0.418720538922921;0.436097677534492;0.493666322200404;0.0498772221849660;0.286473262722824;0.756126582508966;0.219472228185959;0.669739121417393;0.305413662132534;0.0874194614996293;0.258889424269502;0.154553697516468;0.583994159281251;0.189835039987152;0.557517064063585;0.189295716671876;0.493110104227956;0.701521759248116;0.476207683084629;0.622529603365124;0.855043757639380;0.720434645060652;0.345079534382131;0.751734360471244;0.399396440200227;0.655970445208238;0.895272614851255;0.846837805047090;0.802989426442883;0.843290225529713;0.178820477881851;0.435771760268031;0.0159748247898998;0.488880243845694;0.610258314577052;0.611493096505987;0.364472976124134;0.697309718326344;0.684435910864005;0.314353891329073;0.345851567734895;0.727298920381488;0.712954851665047;0.632191934451550;0.249842327204460;0.0999933253508030;0.587819170946171;0.476806092298034;0.679993253052232;0.646604048854953;0.474249105190043;0.704710929051373;0.0765845664202164;0.156807824576650;0.469107659752065;0.292437452959100;0.996271883601449;0.341547689559659;0.392018429186204;0.653739332525870;0.396961762289033;0.736338791780332;0.646073452032205;0.556508305276049;0.235086774562992;0.103420080199568;0.181287914133299;0.905972838358010;0.685494283067758;0.102415519814200;0.297641517267396;0.460980713116462;0.702845348372518;0.721770096906354;0.790018705087723;0.844376409353864;0.434312010386173;0.481958560404348;0.277524715884367;0.357899868561840;0.223090918838555;0.489072919585310;0.848559470311068;0.739017518115704;0.667426970632480;0.445095420090992;0.718725469298067;0.618962492616364;0.902613403230260;0.223468090977272;0.828205055011532;0.642359578815456;0.137441151373759;0.973431138775047;0.457149392206757;0.309834818965679;0.393802356158291;0.636199952399451;0.612599977577385;0.967823143102146;0.203566117772630;0.335741404600321;0.805787117595685;0.864085430681745;0.683833468092528;0.189098231116821;0.173970380413332;0.920183606874283;0.525880736078080;0.477531264292789;0.867958968909438;0.786390460928153;0.864476819459571;0.261904657009013;0.831570350486585;0.202880628035814;0.814715397923587;0.921692901720150;0.892599210558738;0.914931860712791;0.259782999874923;0.172878897829391;0.575635818566957;0.711202654853092;0.183020115915230;0.0190881872638539;0.815163343593089;0.450315769040173;0.457130258184453;0.988249306095880;0.506087553457398;0.813510958484146;0.678679243046175;0.562037877068873;0.170599896540213;0.272461151365406;0.254570998369982;0.574769604287469;0.152739259485500;0.0887341727915845;0.355242108160277;0.554111849774659;0.957859162687259;0.738947284752013;0.487014827079612;0.258198727042507;0.546005403411577;0.712815138377629;0.284030712807565;0.704190156750470;0.323964505141584;0.871437914609647;0.257030844342444;0.917400863448810;0.756311984153610;0.335517669718488;0.0454749586272403;0.297629648026838;0.261494387062962;0.936163367208170;0.0977126677044261;0.256806108288842;0.140262010572600;0.383611693691281;0.361735869367484;0.694756459302621;0.771811499154107;0.835866283083272;0.404619780557519;0.444651830217173;0.263310460030711;0.458901736167679;0.761479770187978;0.190497549339429;0.692311747787666;0.683545067293358;0.341945999461201;0.0864129444055320;0.342356623775492;0.987775794690371;0.547781361056390;0.561335274745401;0.361962645948847;0.506190462273634;0.543099432970909;0.872169942069878;0.560216368436914;0.556504319215428;0.168093053702308;0.139953574696534;0.199729924648874;0.860843573632112;0.197942034899230;0.811780551360818;0.595726721266157;0.379004320306240;0.925611386972299;0.750580843421901;0.0122353918907397;0.640231507662792;0.370949288537237;0.544692445334370;0.645928734748591;0.124244919570277;0.184363217644563;0.592598952163290;0.810589008410736;0.569464359231975;0.987485611805453;0.670677614244948;0.0786626148403914;0.0825676224578953;0.714030649845503;0.713131953362903;0.608740170304077;0.0960423006192047;0.182946506972865;0.781942692949410;0.110840400732514;0.894615111357819;0.796176590861835;0.339962614858506;0.751667926903660;0.282847469804272;0.817425000396289;0.461981660435899;0.525766946154538;0.565064019321028;0.0309727285201534;0.558648238218691;0.200939741544863;0.194236144513933;0.526880845672861;0.286373223777103;0.0747720217680428;0.693369855495808;0.467161318039131;0.580272283675276;0.636271730361633;0.818972187963767;0.465563107033057;0.719139904584335;0.584376348920342;0.613296304183684;0.670984415184234;0.235066001412955;0.754285747536591;0.280558847487233;0.352549717925745;0.303109177995058;0.355954562945270;0.528339421156952;0.800651384890383;0.547825852664106;0.309105725637221;0.139930784767461;0.816699586723326;0.269954058933050;0.117868487778059;0.0156740858292552;0.434360532292333;0.297466237236497;0.515049233806808;0.432472591024112;0.566837342254276;0.835211267618095;0.395774857325375;0.788027067570028;0.370924649467191;0.130583595079642;0.718482503536382;0.535436935972160;0.0885828840958806;0.812532999465490;0.242122016494219;0.344731218342079;0.897586675313109;0.739251987421537;0.608152593769204;0.220643479014115;0.354951790233586;0.674738455877983;0.329227941264039;0.334008824701425;0.686316756851187;0.925732397905426;0.784411596499575;0.605702368358943;0.0397050087525067;0.322082103380040;0.233911508337553;0.350720629259348;0.561615961865343;0.0794710708220820;0.670287306732632;0.518764255344292;0.870839571520146;0.200678539090175;0.804206488562844;0.298453275718937;0.104205008179045;0.373572465206297;0.632422722239244;0.128692674976165;0.937788324401615;0.408368217948996;0.444639068769589;0.0488288104761526;0.665817672696811;0.397625015302387;0.883632187211715;0.206170467290175;0.107043745977359;0.0842386414689192;];
%     figure(1)
%     for i=1:Nsim
%         clf
%         %pause
%         X=Xall{i};
%         for j=1:Ns
%             subplot(Ns,1,j)
%             eL=Xmins{j}'-X{j}(:,1);
%             %find(eL)
%             hold all
%             plot(X{j}(:,1))
%             plot(Xmins{j})
%             plot(find(eL>0),X{j}(find(eL>0),1),'r.')
%             line([Scenarios(i,2) Scenarios(i,2)], [0 1]);
%             %eU=X{j}(:,1)-Xmins{j}';
%         end
%     end
% end


% %% STEP 5
% if STEP==5
%     %load 2014-04-28-30RANDOM-WDSA2014v5_CALCULATE_BOUNDS.mat
%     load XBOUNDS.mat
%     load Xall639Scenarios.mat
%     Nsim=length(Xall);
%     Ns=5;
%     Scenarios=[53,1;31,1;23,38;128,47;130,42;26,7;22,47;52,47;53,3;30,28;22,2;26,27;26,22;28,37;24,45;28,10;56,0;27,3;29,1;44,41;54,2;27,17;44,44;27,31;29,37;24,19;29,6;23,15;44,22;23,46;43,0;44,25;24,36;43,26;28,41;29,0;30,46;43,17;26,21;22,41;43,20;24,18;28,14;23,40;44,45;43,30;30,19;23,39;29,20;29,33;109,0;1,45;23,23;26,10;30,39;43,14;44,32;43,18;25,26;43,42;22,14;27,20;130,33;43,2;26,24;29,12;1,3;25,32;130,15;22,37;27,36;25,33;26,19;28,40;27,30;22,39;30,21;27,34;25,2;130,32;30,36;27,23;34,2;30,32;43,5;27,44;26,11;130,19;24,12;26,29;54,1;28,43;128,0;130,21;27,33;30,16;26,37;30,0;25,42;24,29;25,28;130,11;30,43;24,38;23,28;27,25;27,10;110,2;24,44;30,3;128,45;24,10;22,21;130,26;28,18;44,29;22,34;24,42;128,5;130,5;1,46;24,34;22,0;129,2;43,12;43,22;109,47;28,45;22,25;30,18;44,11;44,38;130,9;27,47;29,25;22,16;28,42;25,27;25,18;22,6;128,1;29,2;43,47;29,4;22,9;23,36;130,44;130,31;23,34;27,15;27,7;26,34;30,35;130,29;25,46;29,34;30,4;109,3;43,32;27,26;24,9;25,0;130,23;26,28;23,3;43,6;44,31;24,4;27,14;26,40;23,47;44,9;43,8;28,15;34,46;110,3;28,39;53,0;44,20;44,15;26,0;49,44;29,27;30,17;25,23;44,7;110,47;43,13;30,26;29,19;28,24;23,37;25,22;26,43;29,29;44,24;44,26;43,35;43,21;27,0;26,9;22,10;28,2;129,47;44,14;130,25;29,36;23,32;27,46;49,42;23,42;23,16;1,2;25,4;26,4;25,21;34,47;26,41;26,2;28,1;44,6;28,36;28,11;43,10;28,19;23,18;30,41;27,12;110,4;43,25;29,15;23,43;22,8;26,38;44,12;25,38;30,29;22,29;44,36;130,46;1,4;129,1;44,42;128,46;29,23;22,13;24,46;49,45;29,17;27,6;23,20;44,27;44,46;22,12;26,23;27,39;110,1;28,26;27,21;26,20;23,17;29,22;29,43;30,40;25,35;27,35;44,3;28,33;30,47;53,45;30,15;22,23;109,46;22,24;130,20;129,0;25,8;130,45;130,14;44,47;49,46;43,43;25,15;28,17;24,47;22,7;28,22;43,40;25,19;27,40;129,4;44,13;44,43;34,45;34,3;44,34;27,29;27,37;28,30;28,25;22,19;23,21;34,1;26,15;43,4;43,16;43,41;130,28;28,38;26,26;44,0;24,32;44,40;53,46;130,13;1,1;44,21;22,5;27,11;28,23;26,3;28,4;22,11;26,5;23,29;30,42;34,4;43,27;26,35;27,19;24,21;22,31;30,23;27,43;43,39;29,28;25,34;29,13;23,2;23,19;28,27;22,32;26,42;28,8;23,24;25,3;23,33;22,35;23,25;22,3;27,41;27,8;25,39;22,27;25,36;22,28;128,3;43,7;130,2;29,30;43,9;25,12;130,8;56,44;44,30;25,29;24,14;30,38;28,44;30,45;26,18;22,26;25,1;25,24;109,1;130,34;22,45;24,17;25,37;26,31;24,20;30,22;43,34;26,8;24,3;27,1;27,13;109,2;130,27;43,38;43,1;29,39;28,0;22,43;24,23;25,47;24,6;43,11;22,20;56,1;44,8;30,25;23,0;23,44;24,11;26,39;28,31;128,2;22,17;23,26;28,20;28,47;27,27;24,35;25,20;130,37;27,9;28,13;27,18;25,6;44,23;44,37;30,27;24,41;44,35;48,45;28,28;23,22;26,30;29,46;26,47;28,46;43,29;25,5;22,38;26,33;29,11;130,24;130,4;30,31;129,3;48,47;23,41;24,8;29,10;28,7;24,5;28,21;44,16;49,41;130,17;28,5;27,24;130,18;26,32;43,37;30,20;44,18;24,13;130,39;44,33;27,42;24,26;44,39;31,0;130,12;43,24;56,45;22,42;29,24;24,33;28,16;22,33;130,40;24,28;26,14;26,45;29,40;24,30;44,4;53,47;43,28;30,1;25,31;24,43;47,47;130,22;22,36;29,26;44,1;28,6;28,9;110,46;43,36;129,46;23,4;22,4;44,2;29,41;21,47;44,17;27,2;22,18;28,12;22,22;25,41;29,45;29,38;29,8;26,16;27,38;44,10;29,5;128,4;43,3;130,3;30,37;23,27;30,30;29,42;56,47;23,1;25,43;43,31;27,5;130,47;25,44;27,16;29,14;53,2;25,16;26,36;54,0;24,7;130,30;54,46;28,34;25,40;25,7;25,10;22,1;29,16;26,25;130,16;28,29;26,13;25,9;29,7;27,28;130,36;30,2;22,15;24,31;24,16;130,10;110,45;29,31;25,17;43,45;43,44;25,25;110,0;26,12;130,43;30,24;129,45;49,47;44,19;130,38;24,40;22,30;25,45;54,47;24,39;25,30;1,0;25,13;48,46;26,44;34,0;29,47;44,28;130,41;24,25;29,3;28,3;24,22;43,15;27,22;26,6;23,5;23,31;29,9;56,2;25,14;43,23;23,45;26,1;24,15;24,1;109,45;24,2;43,46;25,11;29,21;22,40;30,44;24,0;24,24;22,44;24,37;28,32;24,27;26,46;29,32;27,32;56,46;31,2;43,19;29,44;109,4;130,35;44,5;22,46;28,35;23,35;49,43;1,47;29,18;29,35;26,17;30,34;27,45;30,33;130,7;23,30;27,4;43,33;130,6;];
%     Scenarios(:,3)=Scenarios(:,2)*3+4*144; %correction of occurance time
%     InjectionConcentration=[0.0219673412022960;0.205103586989038;0.175986524753266;0.805521528146007;0.400323549937608;0.237903801369436;0.449189616110730;0.529877973035852;0.659092813571493;0.372917696075941;0.627717948345336;0.0555578400639621;0.760617955010672;0.705969864365631;0.235510393155511;0.223177764668678;0.948690786468187;0.646048170815244;0.131606891812574;0.917030693924535;0.534872789650631;0.606975658148050;0.439886494278855;0.172309344714652;0.00315661914793617;0.0532980193632180;0.779811437604861;0.290831824900038;0.0104810949463775;0.155762763766461;0.904770622916879;0.479859363976801;0.996330358086308;0.324328356573511;0.986688931000740;0.280863329433307;0.469977785586369;0.916642350105868;0.00797822932152927;0.0901002069423442;0.314178079978646;0.390990201100237;0.372309891680400;0.412349472480058;0.357583972326286;0.913822887890890;0.621276782183571;0.798878159280344;0.745223024741385;0.963376828452282;0.474355797504241;0.497888653770969;0.0146039286696370;0.448229150589662;0.387333960452738;0.921873329170921;0.925043375662083;0.204014752620838;0.875947298424294;0.0462446171074382;0.233279724714011;0.732333268379948;0.325241661782023;0.336609570466266;0.397050826529530;0.233241481815112;0.0895848665803600;0.652852616111214;0.493918981167450;0.296316481333373;0.191101770005702;0.847448485832405;0.0667013852236333;0.0501814536052670;0.399690743721878;0.602329733596337;0.355832553634342;0.477728932387069;0.190166629473756;0.130541565423152;0.0120900669191452;0.197754710073469;0.663412204786861;0.968925852779730;0.736807668924708;0.526491617563410;0.744616388224352;0.767636886689643;0.673154592827500;0.709241651794520;0.224441710498390;0.191828346434901;0.0590185313760389;0.924456837086220;0.346060908095008;0.245682352802568;0.183303552765075;0.782811322613997;0.709899173448747;0.275408153084762;0.784828895602761;0.619248395608388;0.707784990178321;0.742329927041349;0.339083783952093;0.981156882821190;0.303729575734460;0.782979369062455;0.534255832682483;0.237779894488761;0.366686672608688;0.902906534216789;0.150120581570138;0.0766144493020207;0.659049419061770;0.643586171159328;0.752778674826389;0.951187807112554;0.613474140695051;0.659882661728134;0.647895664744031;0.182437352921086;0.224590544693447;0.693284662763255;0.0353270620272155;0.741931491411259;0.642576149032720;0.777336792916682;0.699478550674151;0.136001180455089;0.771839908683598;0.313345245231569;0.393536606986791;0.169753626999331;0.0492089777482715;0.0552890151996580;0.242478460652045;0.335488178923488;0.549823167058557;0.877968753165551;0.0208344534136515;0.164658523241365;0.415800117615517;0.352576763998986;0.757672530951757;0.202227706183785;0.841057830881820;0.658963630748430;0.201741988864607;0.677606847452748;0.538285138336143;0.958320015556328;0.484501455204795;0.0159576269872289;0.199836774356587;0.656666611161393;0.595733789538841;0.497800779295061;0.537697612092689;0.0837664418312565;0.862587857927470;0.514128186979391;0.952438562620635;0.634921965019275;0.133466078961951;0.164389113506483;0.887830703467052;0.770633170740043;0.0317006278930701;0.792452998828354;0.757551308142744;0.164835955093073;0.397897249272977;0.459068530918597;0.564799148852378;0.579294761912569;0.207063464544277;0.115648595670075;0.705947426942153;0.858404616759347;0.206393874346462;0.861846140987168;0.0480915713347921;0.275039423850849;0.587596661219186;0.737085110851138;0.189458075067707;0.221867662957808;0.929811331876466;0.339054847759686;0.494826297040482;0.545574359384167;0.468258169697718;0.0150581095437790;0.0816471022933941;0.242848245074436;0.550454966048922;0.496614384230512;0.597955762221457;0.842495656033277;0.824490951292445;0.219418372129751;0.764580384718525;0.302525964240789;0.553880994931739;0.0778818177421958;0.959710793085262;0.859299383992003;0.244746753594255;0.458687658635288;0.163478683290760;0.586230067809220;0.768749669552199;0.375696163799472;0.325424977729761;0.417600704085827;0.615033570497778;0.869219356155591;0.969718907014336;0.0656701899439423;0.718882387838737;0.256292405657606;0.506461887390568;0.104941373274169;0.749660618952318;0.546022731599409;0.00404999125937465;0.0682030963097713;0.289439678326920;0.612673640536458;0.205876496250684;0.166272485240489;0.541659436906529;0.670156088038420;0.313371661730749;0.837518708704747;0.176937200677086;0.783531779788216;0.818622900554269;0.595089615599760;0.671169385160864;0.343856398641996;0.194491976031331;0.826641158585735;0.357952350451589;0.105154039852859;0.323947806993475;0.590792139335904;0.443485818544163;0.666152271752317;0.0212313411856216;0.835151306742407;0.388012419635436;0.324736812768847;0.851612206013693;0.0463464721321810;0.945157125566694;0.255809399418444;0.388576025789872;0.797265450375744;0.640424465127487;0.613985397673205;0.252578693559663;0.0901026572520391;0.355360435021743;0.542831410441004;0.367515281945241;0.829343653670207;0.778787235160725;0.0770613463023032;0.170047302809566;0.985018320374665;0.202910536994650;0.317395269087234;0.462287549144722;0.666838475347887;0.554255171937056;0.366674746091792;0.702457564744380;0.204290658796341;0.513102390111006;0.711870595678627;0.409101570681250;0.770098439776385;0.0444773216938960;0.530345709310074;0.520336374417104;0.293444828266951;0.927228682640581;0.932469140241141;0.00884003285730259;0.574432232684657;0.482534731031645;0.961224448849086;0.299311806587182;0.533533310766115;0.0943540460869456;0.808452583294573;0.662567431881357;0.770827629962390;0.299976777890686;0.709706008764778;0.0288893096283494;0.542626923668490;0.930706096315154;0.377360768791922;0.302441085829605;0.127329538169936;0.0275480221153926;0.999607693403777;0.406503037273187;0.0965474504495726;0.672999705967028;0.106058187832152;0.519962894972396;0.0163758010679743;0.228088549444493;0.484250513596577;0.798382017667583;0.406570939070811;0.237772963120496;0.250191166182138;0.962930023187273;0.964899708500551;0.0694007687593814;0.418720538922921;0.436097677534492;0.493666322200404;0.0498772221849660;0.286473262722824;0.756126582508966;0.219472228185959;0.669739121417393;0.305413662132534;0.0874194614996293;0.258889424269502;0.154553697516468;0.583994159281251;0.189835039987152;0.557517064063585;0.189295716671876;0.493110104227956;0.701521759248116;0.476207683084629;0.622529603365124;0.855043757639380;0.720434645060652;0.345079534382131;0.751734360471244;0.399396440200227;0.655970445208238;0.895272614851255;0.846837805047090;0.802989426442883;0.843290225529713;0.178820477881851;0.435771760268031;0.0159748247898998;0.488880243845694;0.610258314577052;0.611493096505987;0.364472976124134;0.697309718326344;0.684435910864005;0.314353891329073;0.345851567734895;0.727298920381488;0.712954851665047;0.632191934451550;0.249842327204460;0.0999933253508030;0.587819170946171;0.476806092298034;0.679993253052232;0.646604048854953;0.474249105190043;0.704710929051373;0.0765845664202164;0.156807824576650;0.469107659752065;0.292437452959100;0.996271883601449;0.341547689559659;0.392018429186204;0.653739332525870;0.396961762289033;0.736338791780332;0.646073452032205;0.556508305276049;0.235086774562992;0.103420080199568;0.181287914133299;0.905972838358010;0.685494283067758;0.102415519814200;0.297641517267396;0.460980713116462;0.702845348372518;0.721770096906354;0.790018705087723;0.844376409353864;0.434312010386173;0.481958560404348;0.277524715884367;0.357899868561840;0.223090918838555;0.489072919585310;0.848559470311068;0.739017518115704;0.667426970632480;0.445095420090992;0.718725469298067;0.618962492616364;0.902613403230260;0.223468090977272;0.828205055011532;0.642359578815456;0.137441151373759;0.973431138775047;0.457149392206757;0.309834818965679;0.393802356158291;0.636199952399451;0.612599977577385;0.967823143102146;0.203566117772630;0.335741404600321;0.805787117595685;0.864085430681745;0.683833468092528;0.189098231116821;0.173970380413332;0.920183606874283;0.525880736078080;0.477531264292789;0.867958968909438;0.786390460928153;0.864476819459571;0.261904657009013;0.831570350486585;0.202880628035814;0.814715397923587;0.921692901720150;0.892599210558738;0.914931860712791;0.259782999874923;0.172878897829391;0.575635818566957;0.711202654853092;0.183020115915230;0.0190881872638539;0.815163343593089;0.450315769040173;0.457130258184453;0.988249306095880;0.506087553457398;0.813510958484146;0.678679243046175;0.562037877068873;0.170599896540213;0.272461151365406;0.254570998369982;0.574769604287469;0.152739259485500;0.0887341727915845;0.355242108160277;0.554111849774659;0.957859162687259;0.738947284752013;0.487014827079612;0.258198727042507;0.546005403411577;0.712815138377629;0.284030712807565;0.704190156750470;0.323964505141584;0.871437914609647;0.257030844342444;0.917400863448810;0.756311984153610;0.335517669718488;0.0454749586272403;0.297629648026838;0.261494387062962;0.936163367208170;0.0977126677044261;0.256806108288842;0.140262010572600;0.383611693691281;0.361735869367484;0.694756459302621;0.771811499154107;0.835866283083272;0.404619780557519;0.444651830217173;0.263310460030711;0.458901736167679;0.761479770187978;0.190497549339429;0.692311747787666;0.683545067293358;0.341945999461201;0.0864129444055320;0.342356623775492;0.987775794690371;0.547781361056390;0.561335274745401;0.361962645948847;0.506190462273634;0.543099432970909;0.872169942069878;0.560216368436914;0.556504319215428;0.168093053702308;0.139953574696534;0.199729924648874;0.860843573632112;0.197942034899230;0.811780551360818;0.595726721266157;0.379004320306240;0.925611386972299;0.750580843421901;0.0122353918907397;0.640231507662792;0.370949288537237;0.544692445334370;0.645928734748591;0.124244919570277;0.184363217644563;0.592598952163290;0.810589008410736;0.569464359231975;0.987485611805453;0.670677614244948;0.0786626148403914;0.0825676224578953;0.714030649845503;0.713131953362903;0.608740170304077;0.0960423006192047;0.182946506972865;0.781942692949410;0.110840400732514;0.894615111357819;0.796176590861835;0.339962614858506;0.751667926903660;0.282847469804272;0.817425000396289;0.461981660435899;0.525766946154538;0.565064019321028;0.0309727285201534;0.558648238218691;0.200939741544863;0.194236144513933;0.526880845672861;0.286373223777103;0.0747720217680428;0.693369855495808;0.467161318039131;0.580272283675276;0.636271730361633;0.818972187963767;0.465563107033057;0.719139904584335;0.584376348920342;0.613296304183684;0.670984415184234;0.235066001412955;0.754285747536591;0.280558847487233;0.352549717925745;0.303109177995058;0.355954562945270;0.528339421156952;0.800651384890383;0.547825852664106;0.309105725637221;0.139930784767461;0.816699586723326;0.269954058933050;0.117868487778059;0.0156740858292552;0.434360532292333;0.297466237236497;0.515049233806808;0.432472591024112;0.566837342254276;0.835211267618095;0.395774857325375;0.788027067570028;0.370924649467191;0.130583595079642;0.718482503536382;0.535436935972160;0.0885828840958806;0.812532999465490;0.242122016494219;0.344731218342079;0.897586675313109;0.739251987421537;0.608152593769204;0.220643479014115;0.354951790233586;0.674738455877983;0.329227941264039;0.334008824701425;0.686316756851187;0.925732397905426;0.784411596499575;0.605702368358943;0.0397050087525067;0.322082103380040;0.233911508337553;0.350720629259348;0.561615961865343;0.0794710708220820;0.670287306732632;0.518764255344292;0.870839571520146;0.200678539090175;0.804206488562844;0.298453275718937;0.104205008179045;0.373572465206297;0.632422722239244;0.128692674976165;0.937788324401615;0.408368217948996;0.444639068769589;0.0488288104761526;0.665817672696811;0.397625015302387;0.883632187211715;0.206170467290175;0.107043745977359;0.0842386414689192;];
%     %figure(1)
%     o=2;
%     w=3;
%     faultflag=nan(Nsim,Ns);
%     timeflag=inf(Nsim,Ns);
%     SensorNodesID={'JUNCTION-17' 'JUNCTION-31' 'JUNCTION-45' 'JUNCTION-83' 'JUNCTION-122'};
% 
%     for i=1:Nsim
%         disp('press any key')
%         %pause
%         clf
%         X=Xall{i};
%         t0=Scenarios(i,3);
%         for j=1:Ns
%             eL=Xmins{j}'-X{j}(:,1);
%             eL(find(eL>0))=1;
%             eL(find(eL<0))=0;
%             
%             subplot(Ns,1,j)
%             %plot((double(XT2)/3600/24),X{j}(:,1))
%             %plot(Xmins{j})
%             hold on
%             confplot((double(XT2)/3600/24),X{j}(:,1)',X{j}(:,1)'-Xmins{j},Xmaxs{j}-X{j}(:,1)','Color',[0 0 0],'LineWidth',2)
%             line([Scenarios(i,2) Scenarios(i,2)]/2/24+4, [0 1],'Color',[0 0 0]);
%             hold on
%             xlabel('Time (day)')
%             ylabel('Chlorine (mg/L)')
%             axis([3 8 0.00 1.00])
%             title(SensorNodesID(j))
%             grid on
%             for k=w:length(XT2)
%                 if sum(eL(k-w+1:k))>o
%                     if isnan(faultflag(i,j))
%                         faultflag(i,j)=1;
%                         timeflag(i,j)=k/144;
%                     end
%                     plot(k/144,X{j}(k,1),'r.');
%                 end
%             end
%         end
%     end
%     tdelay=min(timeflag,[],2)-Scenarios(:,2)/144;
%     %hist(tdelay)
%     save XFlagResults.mat  faultflag  timeflag tdelay o w
% end





% %% STEP 6
% if STEP==6
%     load XFlagResults.mat
%     InjectionConcentration=[0.0219673412022960;0.205103586989038;0.175986524753266;0.805521528146007;0.400323549937608;0.237903801369436;0.449189616110730;0.529877973035852;0.659092813571493;0.372917696075941;0.627717948345336;0.0555578400639621;0.760617955010672;0.705969864365631;0.235510393155511;0.223177764668678;0.948690786468187;0.646048170815244;0.131606891812574;0.917030693924535;0.534872789650631;0.606975658148050;0.439886494278855;0.172309344714652;0.00315661914793617;0.0532980193632180;0.779811437604861;0.290831824900038;0.0104810949463775;0.155762763766461;0.904770622916879;0.479859363976801;0.996330358086308;0.324328356573511;0.986688931000740;0.280863329433307;0.469977785586369;0.916642350105868;0.00797822932152927;0.0901002069423442;0.314178079978646;0.390990201100237;0.372309891680400;0.412349472480058;0.357583972326286;0.913822887890890;0.621276782183571;0.798878159280344;0.745223024741385;0.963376828452282;0.474355797504241;0.497888653770969;0.0146039286696370;0.448229150589662;0.387333960452738;0.921873329170921;0.925043375662083;0.204014752620838;0.875947298424294;0.0462446171074382;0.233279724714011;0.732333268379948;0.325241661782023;0.336609570466266;0.397050826529530;0.233241481815112;0.0895848665803600;0.652852616111214;0.493918981167450;0.296316481333373;0.191101770005702;0.847448485832405;0.0667013852236333;0.0501814536052670;0.399690743721878;0.602329733596337;0.355832553634342;0.477728932387069;0.190166629473756;0.130541565423152;0.0120900669191452;0.197754710073469;0.663412204786861;0.968925852779730;0.736807668924708;0.526491617563410;0.744616388224352;0.767636886689643;0.673154592827500;0.709241651794520;0.224441710498390;0.191828346434901;0.0590185313760389;0.924456837086220;0.346060908095008;0.245682352802568;0.183303552765075;0.782811322613997;0.709899173448747;0.275408153084762;0.784828895602761;0.619248395608388;0.707784990178321;0.742329927041349;0.339083783952093;0.981156882821190;0.303729575734460;0.782979369062455;0.534255832682483;0.237779894488761;0.366686672608688;0.902906534216789;0.150120581570138;0.0766144493020207;0.659049419061770;0.643586171159328;0.752778674826389;0.951187807112554;0.613474140695051;0.659882661728134;0.647895664744031;0.182437352921086;0.224590544693447;0.693284662763255;0.0353270620272155;0.741931491411259;0.642576149032720;0.777336792916682;0.699478550674151;0.136001180455089;0.771839908683598;0.313345245231569;0.393536606986791;0.169753626999331;0.0492089777482715;0.0552890151996580;0.242478460652045;0.335488178923488;0.549823167058557;0.877968753165551;0.0208344534136515;0.164658523241365;0.415800117615517;0.352576763998986;0.757672530951757;0.202227706183785;0.841057830881820;0.658963630748430;0.201741988864607;0.677606847452748;0.538285138336143;0.958320015556328;0.484501455204795;0.0159576269872289;0.199836774356587;0.656666611161393;0.595733789538841;0.497800779295061;0.537697612092689;0.0837664418312565;0.862587857927470;0.514128186979391;0.952438562620635;0.634921965019275;0.133466078961951;0.164389113506483;0.887830703467052;0.770633170740043;0.0317006278930701;0.792452998828354;0.757551308142744;0.164835955093073;0.397897249272977;0.459068530918597;0.564799148852378;0.579294761912569;0.207063464544277;0.115648595670075;0.705947426942153;0.858404616759347;0.206393874346462;0.861846140987168;0.0480915713347921;0.275039423850849;0.587596661219186;0.737085110851138;0.189458075067707;0.221867662957808;0.929811331876466;0.339054847759686;0.494826297040482;0.545574359384167;0.468258169697718;0.0150581095437790;0.0816471022933941;0.242848245074436;0.550454966048922;0.496614384230512;0.597955762221457;0.842495656033277;0.824490951292445;0.219418372129751;0.764580384718525;0.302525964240789;0.553880994931739;0.0778818177421958;0.959710793085262;0.859299383992003;0.244746753594255;0.458687658635288;0.163478683290760;0.586230067809220;0.768749669552199;0.375696163799472;0.325424977729761;0.417600704085827;0.615033570497778;0.869219356155591;0.969718907014336;0.0656701899439423;0.718882387838737;0.256292405657606;0.506461887390568;0.104941373274169;0.749660618952318;0.546022731599409;0.00404999125937465;0.0682030963097713;0.289439678326920;0.612673640536458;0.205876496250684;0.166272485240489;0.541659436906529;0.670156088038420;0.313371661730749;0.837518708704747;0.176937200677086;0.783531779788216;0.818622900554269;0.595089615599760;0.671169385160864;0.343856398641996;0.194491976031331;0.826641158585735;0.357952350451589;0.105154039852859;0.323947806993475;0.590792139335904;0.443485818544163;0.666152271752317;0.0212313411856216;0.835151306742407;0.388012419635436;0.324736812768847;0.851612206013693;0.0463464721321810;0.945157125566694;0.255809399418444;0.388576025789872;0.797265450375744;0.640424465127487;0.613985397673205;0.252578693559663;0.0901026572520391;0.355360435021743;0.542831410441004;0.367515281945241;0.829343653670207;0.778787235160725;0.0770613463023032;0.170047302809566;0.985018320374665;0.202910536994650;0.317395269087234;0.462287549144722;0.666838475347887;0.554255171937056;0.366674746091792;0.702457564744380;0.204290658796341;0.513102390111006;0.711870595678627;0.409101570681250;0.770098439776385;0.0444773216938960;0.530345709310074;0.520336374417104;0.293444828266951;0.927228682640581;0.932469140241141;0.00884003285730259;0.574432232684657;0.482534731031645;0.961224448849086;0.299311806587182;0.533533310766115;0.0943540460869456;0.808452583294573;0.662567431881357;0.770827629962390;0.299976777890686;0.709706008764778;0.0288893096283494;0.542626923668490;0.930706096315154;0.377360768791922;0.302441085829605;0.127329538169936;0.0275480221153926;0.999607693403777;0.406503037273187;0.0965474504495726;0.672999705967028;0.106058187832152;0.519962894972396;0.0163758010679743;0.228088549444493;0.484250513596577;0.798382017667583;0.406570939070811;0.237772963120496;0.250191166182138;0.962930023187273;0.964899708500551;0.0694007687593814;0.418720538922921;0.436097677534492;0.493666322200404;0.0498772221849660;0.286473262722824;0.756126582508966;0.219472228185959;0.669739121417393;0.305413662132534;0.0874194614996293;0.258889424269502;0.154553697516468;0.583994159281251;0.189835039987152;0.557517064063585;0.189295716671876;0.493110104227956;0.701521759248116;0.476207683084629;0.622529603365124;0.855043757639380;0.720434645060652;0.345079534382131;0.751734360471244;0.399396440200227;0.655970445208238;0.895272614851255;0.846837805047090;0.802989426442883;0.843290225529713;0.178820477881851;0.435771760268031;0.0159748247898998;0.488880243845694;0.610258314577052;0.611493096505987;0.364472976124134;0.697309718326344;0.684435910864005;0.314353891329073;0.345851567734895;0.727298920381488;0.712954851665047;0.632191934451550;0.249842327204460;0.0999933253508030;0.587819170946171;0.476806092298034;0.679993253052232;0.646604048854953;0.474249105190043;0.704710929051373;0.0765845664202164;0.156807824576650;0.469107659752065;0.292437452959100;0.996271883601449;0.341547689559659;0.392018429186204;0.653739332525870;0.396961762289033;0.736338791780332;0.646073452032205;0.556508305276049;0.235086774562992;0.103420080199568;0.181287914133299;0.905972838358010;0.685494283067758;0.102415519814200;0.297641517267396;0.460980713116462;0.702845348372518;0.721770096906354;0.790018705087723;0.844376409353864;0.434312010386173;0.481958560404348;0.277524715884367;0.357899868561840;0.223090918838555;0.489072919585310;0.848559470311068;0.739017518115704;0.667426970632480;0.445095420090992;0.718725469298067;0.618962492616364;0.902613403230260;0.223468090977272;0.828205055011532;0.642359578815456;0.137441151373759;0.973431138775047;0.457149392206757;0.309834818965679;0.393802356158291;0.636199952399451;0.612599977577385;0.967823143102146;0.203566117772630;0.335741404600321;0.805787117595685;0.864085430681745;0.683833468092528;0.189098231116821;0.173970380413332;0.920183606874283;0.525880736078080;0.477531264292789;0.867958968909438;0.786390460928153;0.864476819459571;0.261904657009013;0.831570350486585;0.202880628035814;0.814715397923587;0.921692901720150;0.892599210558738;0.914931860712791;0.259782999874923;0.172878897829391;0.575635818566957;0.711202654853092;0.183020115915230;0.0190881872638539;0.815163343593089;0.450315769040173;0.457130258184453;0.988249306095880;0.506087553457398;0.813510958484146;0.678679243046175;0.562037877068873;0.170599896540213;0.272461151365406;0.254570998369982;0.574769604287469;0.152739259485500;0.0887341727915845;0.355242108160277;0.554111849774659;0.957859162687259;0.738947284752013;0.487014827079612;0.258198727042507;0.546005403411577;0.712815138377629;0.284030712807565;0.704190156750470;0.323964505141584;0.871437914609647;0.257030844342444;0.917400863448810;0.756311984153610;0.335517669718488;0.0454749586272403;0.297629648026838;0.261494387062962;0.936163367208170;0.0977126677044261;0.256806108288842;0.140262010572600;0.383611693691281;0.361735869367484;0.694756459302621;0.771811499154107;0.835866283083272;0.404619780557519;0.444651830217173;0.263310460030711;0.458901736167679;0.761479770187978;0.190497549339429;0.692311747787666;0.683545067293358;0.341945999461201;0.0864129444055320;0.342356623775492;0.987775794690371;0.547781361056390;0.561335274745401;0.361962645948847;0.506190462273634;0.543099432970909;0.872169942069878;0.560216368436914;0.556504319215428;0.168093053702308;0.139953574696534;0.199729924648874;0.860843573632112;0.197942034899230;0.811780551360818;0.595726721266157;0.379004320306240;0.925611386972299;0.750580843421901;0.0122353918907397;0.640231507662792;0.370949288537237;0.544692445334370;0.645928734748591;0.124244919570277;0.184363217644563;0.592598952163290;0.810589008410736;0.569464359231975;0.987485611805453;0.670677614244948;0.0786626148403914;0.0825676224578953;0.714030649845503;0.713131953362903;0.608740170304077;0.0960423006192047;0.182946506972865;0.781942692949410;0.110840400732514;0.894615111357819;0.796176590861835;0.339962614858506;0.751667926903660;0.282847469804272;0.817425000396289;0.461981660435899;0.525766946154538;0.565064019321028;0.0309727285201534;0.558648238218691;0.200939741544863;0.194236144513933;0.526880845672861;0.286373223777103;0.0747720217680428;0.693369855495808;0.467161318039131;0.580272283675276;0.636271730361633;0.818972187963767;0.465563107033057;0.719139904584335;0.584376348920342;0.613296304183684;0.670984415184234;0.235066001412955;0.754285747536591;0.280558847487233;0.352549717925745;0.303109177995058;0.355954562945270;0.528339421156952;0.800651384890383;0.547825852664106;0.309105725637221;0.139930784767461;0.816699586723326;0.269954058933050;0.117868487778059;0.0156740858292552;0.434360532292333;0.297466237236497;0.515049233806808;0.432472591024112;0.566837342254276;0.835211267618095;0.395774857325375;0.788027067570028;0.370924649467191;0.130583595079642;0.718482503536382;0.535436935972160;0.0885828840958806;0.812532999465490;0.242122016494219;0.344731218342079;0.897586675313109;0.739251987421537;0.608152593769204;0.220643479014115;0.354951790233586;0.674738455877983;0.329227941264039;0.334008824701425;0.686316756851187;0.925732397905426;0.784411596499575;0.605702368358943;0.0397050087525067;0.322082103380040;0.233911508337553;0.350720629259348;0.561615961865343;0.0794710708220820;0.670287306732632;0.518764255344292;0.870839571520146;0.200678539090175;0.804206488562844;0.298453275718937;0.104205008179045;0.373572465206297;0.632422722239244;0.128692674976165;0.937788324401615;0.408368217948996;0.444639068769589;0.0488288104761526;0.665817672696811;0.397625015302387;0.883632187211715;0.206170467290175;0.107043745977359;0.0842386414689192;];
%     
%     td1=length(find(tdelay<=1))/639*100
%     for i=1:10
%       l=find(InjectionConcentration<=i/10 & InjectionConcentration>(i/10-0.1));
%       td(i,1)=length(find(tdelay(l)<=1))/length(l)*100;
%       td(i,2)=length(find(tdelay(l)<=2))/length(l)*100;
%       td(i,3)=length(find(tdelay(l)<=3))/length(l)*100;
%       td(i,4)=length(find(tdelay(l)<=4))/length(l)*100;
%       mintd(i)=min(tdelay(l));
%       maxtd(i)=max(tdelay(l));
%       meantd(i)=mean(tdelay(l));
%       meantd3(i)=mean(tdelay(l(find(tdelay(l)<=3))))*24;
%     end
%     meantd3'
% end



% %% STEP 2: Run Simulations
% if STEP==2
%     %Constants
%     SensorNodesID={'JUNCTION-17' 'JUNCTION-31' 'JUNCTION-45' 'JUNCTION-83' 'JUNCTION-122'};
%     %InjectionNodes=[27];
%     % RUN MONTE-CARLO SIMULATIONS
%     TD=8; % SIMULATION DAYS
%     TD0=5;
%     tduration=TD*24*60*60;
%     %Create Chlorine Control Signal
%     Ucl1=ones(1,TD*48); % for 2-hour intervals
%     Ucl1((3*48+1):end)=0.5;
%     Ucl1((5*48+1):end)=1;
%     Ucl2=ones(1,TD*48); % for 2-hour intervals
%     Ucl2((3*48+1):end)=0.5;
%     Ucl2((5*48+1):end)=1;
%     
%     Scenarios=[53,1;31,1;23,38;128,47;130,42;26,7;22,47;52,47;53,3;30,28;22,2;26,27;26,22;28,37;24,45;28,10;56,0;27,3;29,1;44,41;54,2;27,17;44,44;27,31;29,37;24,19;29,6;23,15;44,22;23,46;43,0;44,25;24,36;43,26;28,41;29,0;30,46;43,17;26,21;22,41;43,20;24,18;28,14;23,40;44,45;43,30;30,19;23,39;29,20;29,33;109,0;1,45;23,23;26,10;30,39;43,14;44,32;43,18;25,26;43,42;22,14;27,20;130,33;43,2;26,24;29,12;1,3;25,32;130,15;22,37;27,36;25,33;26,19;28,40;27,30;22,39;30,21;27,34;25,2;130,32;30,36;27,23;34,2;30,32;43,5;27,44;26,11;130,19;24,12;26,29;54,1;28,43;128,0;130,21;27,33;30,16;26,37;30,0;25,42;24,29;25,28;130,11;30,43;24,38;23,28;27,25;27,10;110,2;24,44;30,3;128,45;24,10;22,21;130,26;28,18;44,29;22,34;24,42;128,5;130,5;1,46;24,34;22,0;129,2;43,12;43,22;109,47;28,45;22,25;30,18;44,11;44,38;130,9;27,47;29,25;22,16;28,42;25,27;25,18;22,6;128,1;29,2;43,47;29,4;22,9;23,36;130,44;130,31;23,34;27,15;27,7;26,34;30,35;130,29;25,46;29,34;30,4;109,3;43,32;27,26;24,9;25,0;130,23;26,28;23,3;43,6;44,31;24,4;27,14;26,40;23,47;44,9;43,8;28,15;34,46;110,3;28,39;53,0;44,20;44,15;26,0;49,44;29,27;30,17;25,23;44,7;110,47;43,13;30,26;29,19;28,24;23,37;25,22;26,43;29,29;44,24;44,26;43,35;43,21;27,0;26,9;22,10;28,2;129,47;44,14;130,25;29,36;23,32;27,46;49,42;23,42;23,16;1,2;25,4;26,4;25,21;34,47;26,41;26,2;28,1;44,6;28,36;28,11;43,10;28,19;23,18;30,41;27,12;110,4;43,25;29,15;23,43;22,8;26,38;44,12;25,38;30,29;22,29;44,36;130,46;1,4;129,1;44,42;128,46;29,23;22,13;24,46;49,45;29,17;27,6;23,20;44,27;44,46;22,12;26,23;27,39;110,1;28,26;27,21;26,20;23,17;29,22;29,43;30,40;25,35;27,35;44,3;28,33;30,47;53,45;30,15;22,23;109,46;22,24;130,20;129,0;25,8;130,45;130,14;44,47;49,46;43,43;25,15;28,17;24,47;22,7;28,22;43,40;25,19;27,40;129,4;44,13;44,43;34,45;34,3;44,34;27,29;27,37;28,30;28,25;22,19;23,21;34,1;26,15;43,4;43,16;43,41;130,28;28,38;26,26;44,0;24,32;44,40;53,46;130,13;1,1;44,21;22,5;27,11;28,23;26,3;28,4;22,11;26,5;23,29;30,42;34,4;43,27;26,35;27,19;24,21;22,31;30,23;27,43;43,39;29,28;25,34;29,13;23,2;23,19;28,27;22,32;26,42;28,8;23,24;25,3;23,33;22,35;23,25;22,3;27,41;27,8;25,39;22,27;25,36;22,28;128,3;43,7;130,2;29,30;43,9;25,12;130,8;56,44;44,30;25,29;24,14;30,38;28,44;30,45;26,18;22,26;25,1;25,24;109,1;130,34;22,45;24,17;25,37;26,31;24,20;30,22;43,34;26,8;24,3;27,1;27,13;109,2;130,27;43,38;43,1;29,39;28,0;22,43;24,23;25,47;24,6;43,11;22,20;56,1;44,8;30,25;23,0;23,44;24,11;26,39;28,31;128,2;22,17;23,26;28,20;28,47;27,27;24,35;25,20;130,37;27,9;28,13;27,18;25,6;44,23;44,37;30,27;24,41;44,35;48,45;28,28;23,22;26,30;29,46;26,47;28,46;43,29;25,5;22,38;26,33;29,11;130,24;130,4;30,31;129,3;48,47;23,41;24,8;29,10;28,7;24,5;28,21;44,16;49,41;130,17;28,5;27,24;130,18;26,32;43,37;30,20;44,18;24,13;130,39;44,33;27,42;24,26;44,39;31,0;130,12;43,24;56,45;22,42;29,24;24,33;28,16;22,33;130,40;24,28;26,14;26,45;29,40;24,30;44,4;53,47;43,28;30,1;25,31;24,43;47,47;130,22;22,36;29,26;44,1;28,6;28,9;110,46;43,36;129,46;23,4;22,4;44,2;29,41;21,47;44,17;27,2;22,18;28,12;22,22;25,41;29,45;29,38;29,8;26,16;27,38;44,10;29,5;128,4;43,3;130,3;30,37;23,27;30,30;29,42;56,47;23,1;25,43;43,31;27,5;130,47;25,44;27,16;29,14;53,2;25,16;26,36;54,0;24,7;130,30;54,46;28,34;25,40;25,7;25,10;22,1;29,16;26,25;130,16;28,29;26,13;25,9;29,7;27,28;130,36;30,2;22,15;24,31;24,16;130,10;110,45;29,31;25,17;43,45;43,44;25,25;110,0;26,12;130,43;30,24;129,45;49,47;44,19;130,38;24,40;22,30;25,45;54,47;24,39;25,30;1,0;25,13;48,46;26,44;34,0;29,47;44,28;130,41;24,25;29,3;28,3;24,22;43,15;27,22;26,6;23,5;23,31;29,9;56,2;25,14;43,23;23,45;26,1;24,15;24,1;109,45;24,2;43,46;25,11;29,21;22,40;30,44;24,0;24,24;22,44;24,37;28,32;24,27;26,46;29,32;27,32;56,46;31,2;43,19;29,44;109,4;130,35;44,5;22,46;28,35;23,35;49,43;1,47;29,18;29,35;26,17;30,34;27,45;30,33;130,7;23,30;27,4;43,33;130,6;];
%     
%     %set Random Parameters
%     rand('seed',1);
%     p_pattern=      0.15;
%     p_basedemands=  0.15;
%     p_roughness=	0.15;
%     ENopen('Network_1.inp');
%     patcount = ENgetcount('pattern'); %get number of patterns
%     for i=1:patcount
%         for j=1:ENgetpatternlen(i)
%             pat1=ENgetpatternvalue(i,j);
%             pat2(i,j)=p_pattern*(2*rand-1)*pat1+pat1;
%         end
%     end    
%     NNodes=ENgetcount('nodes');
%     bd1=ENgetnodevalue(1:NNodes,'BASEDEMAND');
%     bd2=p_basedemands*(2*rand(1,length(bd1))-1).*bd1+bd1;
%     bd1=ENgetlinkvalue(1:NNodes,'ROUGHNESS');
%     bd3=round(p_roughness*(2*rand(1,length(bd1))-1).*bd1+bd1);
%     SensorNodesIndex=ENgetnodeindex(SensorNodesID);
%     ENclose;
%     Xall={};
%     InjectionConcentration=rand(size(Scenarios,1),1);
%     
%     InjectionConcentration=[0.0219673412022960;0.205103586989038;0.175986524753266;0.805521528146007;0.400323549937608;0.237903801369436;0.449189616110730;0.529877973035852;0.659092813571493;0.372917696075941;0.627717948345336;0.0555578400639621;0.760617955010672;0.705969864365631;0.235510393155511;0.223177764668678;0.948690786468187;0.646048170815244;0.131606891812574;0.917030693924535;0.534872789650631;0.606975658148050;0.439886494278855;0.172309344714652;0.00315661914793617;0.0532980193632180;0.779811437604861;0.290831824900038;0.0104810949463775;0.155762763766461;0.904770622916879;0.479859363976801;0.996330358086308;0.324328356573511;0.986688931000740;0.280863329433307;0.469977785586369;0.916642350105868;0.00797822932152927;0.0901002069423442;0.314178079978646;0.390990201100237;0.372309891680400;0.412349472480058;0.357583972326286;0.913822887890890;0.621276782183571;0.798878159280344;0.745223024741385;0.963376828452282;0.474355797504241;0.497888653770969;0.0146039286696370;0.448229150589662;0.387333960452738;0.921873329170921;0.925043375662083;0.204014752620838;0.875947298424294;0.0462446171074382;0.233279724714011;0.732333268379948;0.325241661782023;0.336609570466266;0.397050826529530;0.233241481815112;0.0895848665803600;0.652852616111214;0.493918981167450;0.296316481333373;0.191101770005702;0.847448485832405;0.0667013852236333;0.0501814536052670;0.399690743721878;0.602329733596337;0.355832553634342;0.477728932387069;0.190166629473756;0.130541565423152;0.0120900669191452;0.197754710073469;0.663412204786861;0.968925852779730;0.736807668924708;0.526491617563410;0.744616388224352;0.767636886689643;0.673154592827500;0.709241651794520;0.224441710498390;0.191828346434901;0.0590185313760389;0.924456837086220;0.346060908095008;0.245682352802568;0.183303552765075;0.782811322613997;0.709899173448747;0.275408153084762;0.784828895602761;0.619248395608388;0.707784990178321;0.742329927041349;0.339083783952093;0.981156882821190;0.303729575734460;0.782979369062455;0.534255832682483;0.237779894488761;0.366686672608688;0.902906534216789;0.150120581570138;0.0766144493020207;0.659049419061770;0.643586171159328;0.752778674826389;0.951187807112554;0.613474140695051;0.659882661728134;0.647895664744031;0.182437352921086;0.224590544693447;0.693284662763255;0.0353270620272155;0.741931491411259;0.642576149032720;0.777336792916682;0.699478550674151;0.136001180455089;0.771839908683598;0.313345245231569;0.393536606986791;0.169753626999331;0.0492089777482715;0.0552890151996580;0.242478460652045;0.335488178923488;0.549823167058557;0.877968753165551;0.0208344534136515;0.164658523241365;0.415800117615517;0.352576763998986;0.757672530951757;0.202227706183785;0.841057830881820;0.658963630748430;0.201741988864607;0.677606847452748;0.538285138336143;0.958320015556328;0.484501455204795;0.0159576269872289;0.199836774356587;0.656666611161393;0.595733789538841;0.497800779295061;0.537697612092689;0.0837664418312565;0.862587857927470;0.514128186979391;0.952438562620635;0.634921965019275;0.133466078961951;0.164389113506483;0.887830703467052;0.770633170740043;0.0317006278930701;0.792452998828354;0.757551308142744;0.164835955093073;0.397897249272977;0.459068530918597;0.564799148852378;0.579294761912569;0.207063464544277;0.115648595670075;0.705947426942153;0.858404616759347;0.206393874346462;0.861846140987168;0.0480915713347921;0.275039423850849;0.587596661219186;0.737085110851138;0.189458075067707;0.221867662957808;0.929811331876466;0.339054847759686;0.494826297040482;0.545574359384167;0.468258169697718;0.0150581095437790;0.0816471022933941;0.242848245074436;0.550454966048922;0.496614384230512;0.597955762221457;0.842495656033277;0.824490951292445;0.219418372129751;0.764580384718525;0.302525964240789;0.553880994931739;0.0778818177421958;0.959710793085262;0.859299383992003;0.244746753594255;0.458687658635288;0.163478683290760;0.586230067809220;0.768749669552199;0.375696163799472;0.325424977729761;0.417600704085827;0.615033570497778;0.869219356155591;0.969718907014336;0.0656701899439423;0.718882387838737;0.256292405657606;0.506461887390568;0.104941373274169;0.749660618952318;0.546022731599409;0.00404999125937465;0.0682030963097713;0.289439678326920;0.612673640536458;0.205876496250684;0.166272485240489;0.541659436906529;0.670156088038420;0.313371661730749;0.837518708704747;0.176937200677086;0.783531779788216;0.818622900554269;0.595089615599760;0.671169385160864;0.343856398641996;0.194491976031331;0.826641158585735;0.357952350451589;0.105154039852859;0.323947806993475;0.590792139335904;0.443485818544163;0.666152271752317;0.0212313411856216;0.835151306742407;0.388012419635436;0.324736812768847;0.851612206013693;0.0463464721321810;0.945157125566694;0.255809399418444;0.388576025789872;0.797265450375744;0.640424465127487;0.613985397673205;0.252578693559663;0.0901026572520391;0.355360435021743;0.542831410441004;0.367515281945241;0.829343653670207;0.778787235160725;0.0770613463023032;0.170047302809566;0.985018320374665;0.202910536994650;0.317395269087234;0.462287549144722;0.666838475347887;0.554255171937056;0.366674746091792;0.702457564744380;0.204290658796341;0.513102390111006;0.711870595678627;0.409101570681250;0.770098439776385;0.0444773216938960;0.530345709310074;0.520336374417104;0.293444828266951;0.927228682640581;0.932469140241141;0.00884003285730259;0.574432232684657;0.482534731031645;0.961224448849086;0.299311806587182;0.533533310766115;0.0943540460869456;0.808452583294573;0.662567431881357;0.770827629962390;0.299976777890686;0.709706008764778;0.0288893096283494;0.542626923668490;0.930706096315154;0.377360768791922;0.302441085829605;0.127329538169936;0.0275480221153926;0.999607693403777;0.406503037273187;0.0965474504495726;0.672999705967028;0.106058187832152;0.519962894972396;0.0163758010679743;0.228088549444493;0.484250513596577;0.798382017667583;0.406570939070811;0.237772963120496;0.250191166182138;0.962930023187273;0.964899708500551;0.0694007687593814;0.418720538922921;0.436097677534492;0.493666322200404;0.0498772221849660;0.286473262722824;0.756126582508966;0.219472228185959;0.669739121417393;0.305413662132534;0.0874194614996293;0.258889424269502;0.154553697516468;0.583994159281251;0.189835039987152;0.557517064063585;0.189295716671876;0.493110104227956;0.701521759248116;0.476207683084629;0.622529603365124;0.855043757639380;0.720434645060652;0.345079534382131;0.751734360471244;0.399396440200227;0.655970445208238;0.895272614851255;0.846837805047090;0.802989426442883;0.843290225529713;0.178820477881851;0.435771760268031;0.0159748247898998;0.488880243845694;0.610258314577052;0.611493096505987;0.364472976124134;0.697309718326344;0.684435910864005;0.314353891329073;0.345851567734895;0.727298920381488;0.712954851665047;0.632191934451550;0.249842327204460;0.0999933253508030;0.587819170946171;0.476806092298034;0.679993253052232;0.646604048854953;0.474249105190043;0.704710929051373;0.0765845664202164;0.156807824576650;0.469107659752065;0.292437452959100;0.996271883601449;0.341547689559659;0.392018429186204;0.653739332525870;0.396961762289033;0.736338791780332;0.646073452032205;0.556508305276049;0.235086774562992;0.103420080199568;0.181287914133299;0.905972838358010;0.685494283067758;0.102415519814200;0.297641517267396;0.460980713116462;0.702845348372518;0.721770096906354;0.790018705087723;0.844376409353864;0.434312010386173;0.481958560404348;0.277524715884367;0.357899868561840;0.223090918838555;0.489072919585310;0.848559470311068;0.739017518115704;0.667426970632480;0.445095420090992;0.718725469298067;0.618962492616364;0.902613403230260;0.223468090977272;0.828205055011532;0.642359578815456;0.137441151373759;0.973431138775047;0.457149392206757;0.309834818965679;0.393802356158291;0.636199952399451;0.612599977577385;0.967823143102146;0.203566117772630;0.335741404600321;0.805787117595685;0.864085430681745;0.683833468092528;0.189098231116821;0.173970380413332;0.920183606874283;0.525880736078080;0.477531264292789;0.867958968909438;0.786390460928153;0.864476819459571;0.261904657009013;0.831570350486585;0.202880628035814;0.814715397923587;0.921692901720150;0.892599210558738;0.914931860712791;0.259782999874923;0.172878897829391;0.575635818566957;0.711202654853092;0.183020115915230;0.0190881872638539;0.815163343593089;0.450315769040173;0.457130258184453;0.988249306095880;0.506087553457398;0.813510958484146;0.678679243046175;0.562037877068873;0.170599896540213;0.272461151365406;0.254570998369982;0.574769604287469;0.152739259485500;0.0887341727915845;0.355242108160277;0.554111849774659;0.957859162687259;0.738947284752013;0.487014827079612;0.258198727042507;0.546005403411577;0.712815138377629;0.284030712807565;0.704190156750470;0.323964505141584;0.871437914609647;0.257030844342444;0.917400863448810;0.756311984153610;0.335517669718488;0.0454749586272403;0.297629648026838;0.261494387062962;0.936163367208170;0.0977126677044261;0.256806108288842;0.140262010572600;0.383611693691281;0.361735869367484;0.694756459302621;0.771811499154107;0.835866283083272;0.404619780557519;0.444651830217173;0.263310460030711;0.458901736167679;0.761479770187978;0.190497549339429;0.692311747787666;0.683545067293358;0.341945999461201;0.0864129444055320;0.342356623775492;0.987775794690371;0.547781361056390;0.561335274745401;0.361962645948847;0.506190462273634;0.543099432970909;0.872169942069878;0.560216368436914;0.556504319215428;0.168093053702308;0.139953574696534;0.199729924648874;0.860843573632112;0.197942034899230;0.811780551360818;0.595726721266157;0.379004320306240;0.925611386972299;0.750580843421901;0.0122353918907397;0.640231507662792;0.370949288537237;0.544692445334370;0.645928734748591;0.124244919570277;0.184363217644563;0.592598952163290;0.810589008410736;0.569464359231975;0.987485611805453;0.670677614244948;0.0786626148403914;0.0825676224578953;0.714030649845503;0.713131953362903;0.608740170304077;0.0960423006192047;0.182946506972865;0.781942692949410;0.110840400732514;0.894615111357819;0.796176590861835;0.339962614858506;0.751667926903660;0.282847469804272;0.817425000396289;0.461981660435899;0.525766946154538;0.565064019321028;0.0309727285201534;0.558648238218691;0.200939741544863;0.194236144513933;0.526880845672861;0.286373223777103;0.0747720217680428;0.693369855495808;0.467161318039131;0.580272283675276;0.636271730361633;0.818972187963767;0.465563107033057;0.719139904584335;0.584376348920342;0.613296304183684;0.670984415184234;0.235066001412955;0.754285747536591;0.280558847487233;0.352549717925745;0.303109177995058;0.355954562945270;0.528339421156952;0.800651384890383;0.547825852664106;0.309105725637221;0.139930784767461;0.816699586723326;0.269954058933050;0.117868487778059;0.0156740858292552;0.434360532292333;0.297466237236497;0.515049233806808;0.432472591024112;0.566837342254276;0.835211267618095;0.395774857325375;0.788027067570028;0.370924649467191;0.130583595079642;0.718482503536382;0.535436935972160;0.0885828840958806;0.812532999465490;0.242122016494219;0.344731218342079;0.897586675313109;0.739251987421537;0.608152593769204;0.220643479014115;0.354951790233586;0.674738455877983;0.329227941264039;0.334008824701425;0.686316756851187;0.925732397905426;0.784411596499575;0.605702368358943;0.0397050087525067;0.322082103380040;0.233911508337553;0.350720629259348;0.561615961865343;0.0794710708220820;0.670287306732632;0.518764255344292;0.870839571520146;0.200678539090175;0.804206488562844;0.298453275718937;0.104205008179045;0.373572465206297;0.632422722239244;0.128692674976165;0.937788324401615;0.408368217948996;0.444639068769589;0.0488288104761526;0.665817672696811;0.397625015302387;0.883632187211715;0.206170467290175;0.107043745977359;0.0842386414689192;];
%     
%     %create scenarios with no injections as baseline
%     %InjectionConcentration=InjectionConcentration*0;
%     
%     %SIMULATIONS=1;
%     for epoch=1:size(Scenarios,1)
%         ENopen('Network_1.inp')
%         
%         ENsettimeparam('DURATION',tduration)
%         
%         patcount = ENgetcount('pattern'); %get number of patterns
%         for i=1:patcount
%             for j=1:ENgetpatternlen(i)
%                 ENsetpatternvalue(i,j,pat2(i,j));
%             end
%         end
%         ENsetnodevalue(1:NNodes,'BASEDEMAND',bd2);
%         ENsetlinkvalue(1:NNodes,'ROUGHNESS',bd3);
%       
%         
%         NodeId=Scenarios(epoch,1);
%         MSXopen('Arsenite.msx')
%         MSXsolveH()
%         CLid= MSXgetindex('MSX_SPECIES', 'Chlorine');
%         AS3id= MSXgetindex('MSX_SPECIES', 'AsIII');
%         %Create Chlorine Control Signal
%         calllib('epanetmsx','MSXsetpattern',1,Ucl1,length(Ucl1));
%         calllib('epanetmsx','MSXsetpattern',2,Ucl2,length(Ucl1));
% 
%         %Create Contamination Signal
%         PAS3=zeros(1,TD*48); % for 2-hour intervals
%         PAS3((4*48+1+Scenarios(epoch,2)):end)=1;
%         calllib('epanetmsx','MSXsetpattern',4,PAS3,length(PAS3));
%         %calllib('epanetmsx','MSXsetsource',NodeId,...
%         %    MSXgetindex('MSX_SPECIES', 'AsIII'),...
%         %    ConstantsMSX('MSX_SETPOINT'),...
%         %    InjectionConcentration(1),4);        
%         calllib('epanetmsx','MSXsetsource',NodeId, 2,2,InjectionConcentration(epoch),4);        
%         
%         MSXinit(0)
%         [errorcode,tleft,t]=MSXstep();
%         KMAX=double(tleft/300);
%         C=zeros(tleft/t,3*length(SensorNodesIndex)+1);
%         k=1;
%         perc=0.0;
%         h = waitbar(0,'Initializing waitbar...');
%         %T00=tleft*TD0/TD;
%         while tleft>0
%             XT2(k)=t;
%             for i=1:length(SensorNodesIndex)
%                 X{i}(k,1)=MSXgetqual('MSX_NODE', SensorNodesIndex(i), 1);
%                 X{i}(k,2)=MSXgetqual('MSX_NODE', SensorNodesIndex(i), 2);
%                 X{i}(k,3)=MSXgetqual('MSX_NODE', SensorNodesIndex(i), 3);
%             end
%             [errorcode,tleft,t]=MSXstep();
%             k=k+1;
%             perc=k/KMAX;
%             waitbar(perc,h,sprintf('Simulation:%d',epoch));%,sprintf('%d%% along... (%d/%d/%d)',floor(perc*100),j,length(InjectionNodes),l))  
%         end
%         close(h)
%         MSXclose()
%         delete  s*
%         Xall{epoch}=X;
%         ENclose() 
%         save Xall.mat Xall
%     end    
% end    


% %% Step 3
% if STEP==3
%         %load 2014-04-28-30RANDOM-WDSA2014v5_CALCULATE_BOUNDS.mat
%         %load 2014-04-28-Time_Series_No_Contamination_Event.mat
%     load XBOUNDS.mat
%     load 2014-04-30-Time_Series_No_Contamination_Event.mat
%     load XTIME.mat
%     SensorNodesID={'JUNCTION-17' 'JUNCTION-31' 'JUNCTION-45' 'JUNCTION-83' 'JUNCTION-122'};
% 
%     figure(2)
%     plotsensors=[2,3];
%     l=0;
%     for i=plotsensors
%         l=l+1;
%         subplot(length(plotsensors),1,l);
%         confplot((double(XT2)/3600/24),X{i}(:,1)',X{i}(:,1)'-Xmins{i},Xmaxs{i}-X{i}(:,1)','Color',[0 0 0],'LineWidth',2)
%         hold on
%         plot((double(XT2)/3600/24),-(Xlower3s{i}-Xmean{i})/3*2+Xmean{i},'g--')
%         plot((double(XT2)/3600/24),-(Xupper3s{i}-Xmean{i})/3*2+Xmean{i},'g--')
%         xlabel('Time (day)')
%         ylabel('Chlorine (mg/L)')
%         axis([3 7 0.00 1.00])
%         title(SensorNodesID(i))
%         legend('Min/Max Bounds', '','Normal','2\sigma bounds')
%         grid on
%     end
% 
% %     figure(3)
% %     for i=1:5
% %         subplot(5,1,i);
% %         confplot((double(XT2)/3600/24),X{i}(:,1)',X{i}(:,1)'-Xlower3s{i},Xupper3s{i}-X{i}(:,1)','Color',[0 0 0],'LineWidth',2)
% %         xlabel('Time (day)')
% %         ylabel('Chlorine (mg/L)')
% %         axis([3 7 0.00 1.00])
% %         title(SensorNodesID(i))
% %         grid on
% %     end
% 
% end

% % step 1: create bounds
% if step==1
% 
%     run monte-carlo simulations
%     td=8; % simulation days
%     td0=5;
%     tduration=td*24*60*60;
%     xmin=inf*ones(td*144-1,1);
%     xmax=zeros(td*144-1,1);
%     xall2=[];
%     epochs=30;
%     create chlorine control signal
%     ucl1=ones(1,td*48); % for 2-hour intervals
%     ucl1((3*48+1):end)=0.5;
%     ucl1((5*48+1):end)=1;
%     ucl2=ones(1,td*48); % for 2-hour intervals
%     ucl2((3*48+1):end)=0.5;
%     ucl2((5*48+1):end)=1;
% 
%     for epochs=1:epochs
%         tic
%         enopen('network_1.inp')
%         sensornodesid={'junction-17' 'junction-31' 'junction-45' 'junction-83' 'junction-122'};
%         sensornodesindex=engetnodeindex(sensornodesid);
%         ensettimeparam('duration',tduration)
%         patcount = engetcount('pattern'); %get number of patterns
% 
%         for i=1:1
%             for j=1:engetpatternlen(i)
%                 pat1=engetpatternvalue(i,j);
%                 pat2=0.3*(2*rand-1)*pat1+pat1;
%                 pat2=pat1+((epochs-1)/19*2-1)*0.2*pat1;
%                 ensetpatternvalue(i,j,pat2);
%             end
%         end
%          nnodes=engetcount('nodes');
% 
%         xall={};
%         counter=0;
%         msxopen('arsenite.msx')
%         msxsolveh()
%         clid= msxgetindex('msx_species', 'chlorine');
%         as3id= msxgetindex('msx_species', 'asiii');
%         create chlorine control signal
%         ucl1=ones(1,td*48); % for 2-hour intervals
%         ucl1((td*24+1):end)=1;
%         calllib('epanetmsx','msxsetpattern',1,ucl1,length(ucl1));
% 
%         ucl2=ones(1,td*48); % for 2-hour intervals
%         ucl2((td*24+1):end)=1;
%         calllib('epanetmsx','msxsetpattern',2,ucl2,length(ucl1));
% 
%         msxinit(0)
%         [errorcode,tleft,t]=msxstep();
%         kmax=double(tleft/300);
%         c=zeros(tleft/t,3*length(sensornodesindex)+1);
%         k=1;
%         perc=0.0;
%         h = waitbar(0,'initializing waitbar...');
%         t00=tleft*td0/td;
%         while tleft>0
%             xt2(k)=t;
%             for i=1:length(sensornodesindex)
%                 x2{i}(k,1)=msxgetqual('msx_node', sensornodesindex(i), 1);
%                 x{i}(k,2)=msxgetqual('msx_node', sensornodesindex(i), 2);
%                 x{i}(k,3)=msxgetqual('msx_node', sensornodesindex(i), 3);
%             end
%             [errorcode,tleft,t]=msxstep();
%             k=k+1;
%             perc=k/kmax;
%             waitbar(perc,h,sprintf('epoch:%d',epochs));%,sprintf('%d%% along... (%d/%d/%d)',floor(perc*100),j,length(injectionnodes),l))  
%         end
%         close(h)
%         msxclose()
%         delete  s*
%         xall2(:,epochs)=x2{1};
%         x2all{epochs}=x2;
%         enclose()
%         xmin=min([xmin x2{1}],[],2);
%         xmax=max([xmax x2{1}],[],2);
%         toc
%     end
% 
% 
%     post processing
%     for i=1:length(sensornodesindex)
%         for j=1:epochs
%             xall2{i}(:,j)=x2all{j}{i};
%         end
%         xmean{i}=mean(xall2{i}');
%         xstd{i}=std(xall2{i}');
%         xstd3s{i}=3*xstd{i};
%         xupper3s{i}=xmean{i}+xstd3s{i};
%         xlower3s{i}=xmean{i}-xstd3s{i};
%         xlower3s{i}(find(xlower3s{i}<0))=0;
%         xmins{i}=min(xall2{i}');
%         xmaxs{i}=max(xall2{i}');
%     end
% 
%     figures
% 
%     figure(2)
%     for i=1:length(sensornodesindex)
%         subplot(length(sensornodesindex),1,i);
%         plot(double(xt)/3600/24,x{i}(:,1),'k-');
%         hold on
%         plot(double(xt2)/3600/24,xmins{i},'g-')
%         plot(double(xt2)/3600/24,xmaxs{i},'g-')
%     end
% 
%     figure(3)
%     for i=1:length(sensornodesindex)
%         subplot(length(sensornodesindex),1,i);
%         plot(double(xt)/3600/24,x{i}(:,1),'k-');
%         hold on
%         plot(double(xt2)/3600/24,xlower3s{i},'g-')
%         plot(double(xt2)/3600/24,xupper3s{i},'g-')
%     end
% end



% %% Step 5.11 Count TP/FP/FN/TN using the upper/lower-bounds approach
% if STEP==5.11
%     load XBOUNDS2.mat
%     %load XBb2.mat
% 
%     Ns=5; %sensors
%     load XallS500NoFault.mat
%     Xnf=Xall;
%     load XallS500Fault.mat
%     Xwf=Xall;
% 
%     %ee=0.000:0.001:0.1; %0.001 FOR ZERO FN IN SENSORS 2 AND 3
%     ee=(50:0.1:100)./100;
%     %ee=0.012;
%     %ee=0.9:0.001:1
%     for l=1:length(ee)
%         %load XallS500NoFault.mat
%         disp(l)
%         TN=zeros(Ns,2*size(Xall,2));
%         FP=zeros(Ns,2*size(Xall,2));
%         FN=zeros(Ns,2*size(Xall,2));
%         TP=zeros(Ns,2*size(Xall,2));
%         epsilon=ee(l);
%         for i=1:size(Xall,2)
%             X=Xnf{i};
%             for j=1:Ns
%                 eL=X{j}(:,1)-Xmins{j}'*epsilon;
%                 eL(find(eL>=0))=0;
%                 eL(find(eL<0))=1;
%                 %eL(find(eL>=-epsilon))=0;
%                 %eL(find(eL<-epsilon))=1; 
%                 if sum(eL)==0
%                     TN(j,i)=1;
%                 else
%                     FP(j,i)=1;
%                 end
%             end
%         end
% 
%         
%         for i=1:size(Xall,2)
%             X=Xwf{i};
%             for j=1:Ns
%                 eL=X{j}(:,1)-Xmins{j}'*epsilon;
%                 eL(find(eL>=0))=0;
%                 eL(find(eL<0))=1;
%                 %eL(find(eL>=-epsilon))=0;
%                 %eL(find(eL<-epsilon))=1; 
%                 t0=min(find(X{j}(:,2)));
%                 td=min(find(eL));
%                 if isempty(t0)
%                     if isempty(td)
%                         TN(j,i+500)=1;
%                     else
%                         FP(j,i+500)=1;
%                     end                    
%                 else
%                     if isempty(td)
%                         FN(j,i+500)=1;
%                     else
%                         if td>=t0
%                            TP(j,i+500)=1;
%                         else
%                            FP(j,i+500)=1; 
%                         end
%                     end
%                 end                
%             end
%         end
%         P0=500;
%         N0=500;
%         TP0(:,l)=sum(TP,2);
%         FP0(:,l)=sum(FP,2);
%         FN0(:,l)=sum(FN,2);
%         TN0(:,l)=sum(TN,2);
%         ACCURACY(:,l)=(TP0(:,l)+TN0(:,l))./(P0+N0);
%         F1(:,l)=2*TP0(:,l)./(2*TP0(:,l)+FP0(:,l)+FN0(:,l));
%         MC(:,l)=((TP0(:,l).*TN0(:,l))-(FP0(:,l).*FN0(:,l)))./sqrt((TP0(:,l)+FP0(:,l)).*(TP0(:,l)+FN0(:,l)).*(TN0(:,l)+FP0(:,l)).*(TN0(:,l)+FN0(:,l)));
%         TPR(:,l)=TP0(:,l)./(TP0(:,l)+FN0(:,l));
%         FPR(:,l)=1-TN0(:,l)./(FP0(:,l)+TN0(:,l));
%     end
%     for i=1:Ns
%         plot(FPR(i,:)',TPR(i,:)','-')
%         hold all
%     end
%     xlabel('FPR');
%     ylabel('TPR');
%     grid on
%     legend('JUNCTION-17', 'JUNCTION-31', 'JUNCTION-45', 'JUNCTION-83', 'JUNCTION-122')
% 
%     figure
%     subplot(1,3,1)
%     for i=1:Ns
%         plot(ee*100,F1(i,:)','-')
%         hold all
%     end
%     xlabel('% Bias (Relative)');
%     ylabel('F1-score');    
%     grid on    
%     legend('JUNCTION-17', 'JUNCTION-31', 'JUNCTION-45', 'JUNCTION-83', 'JUNCTION-122')
%     subplot(1,3,2)
%     for i=1:Ns
%         plot(ee*100,ACCURACY(i,:)','-')
%         hold all
%     end
%     xlabel('% Bias (Relative)');
%     ylabel('Accuracy');    
%     grid on    
%     legend('JUNCTION-17', 'JUNCTION-31', 'JUNCTION-45', 'JUNCTION-83', 'JUNCTION-122')
%     subplot(1,3,3)
%     for i=1:Ns
%         plot(ee*100,MC(i,:)','-')
%         hold all
%     end
%     xlabel('% Bias (Relative)');
%     ylabel('Matthews Correlation Coefficient');    
%     grid on    
%     legend('JUNCTION-17', 'JUNCTION-31', 'JUNCTION-45', 'JUNCTION-83', 'JUNCTION-122')
%        
%     [aACC bACC]=max(ACCURACY,[],2);
%     [aF1 bF1]=max(F1,[],2);
%     [aMC bMC]=max(MC,[],2);
%     save XResultsULBoundsPerc.mat P0 N0 TP0 FN0 TN0 FP0 ACCURACY F1 MC TPR FPR ee
% end


% %% STEP 1.2: CALULATE BOUNDS
% 
% if STEP==1.2
%     TD=8; % SIMULATION DAYS
%     TD0=5;
%     tduration=TD*24*60*60;
%     %Create Chlorine Control Signal
%     Ucl1=ones(1,TD*48); % for 2-hour intervals
%     Ucl1((3*48+1):end)=0.5;
%     Ucl1((5*48+1):end)=1;
%     Ucl2=ones(1,TD*48); % for 2-hour intervals
%     Ucl2((3*48+1):end)=0.5;
%     Ucl2((5*48+1):end)=1;
%     %set Random Parameters
%     rand('seed',1);
%     p_pattern=      0.30;
%     p_basedemands=  0.00;
%     %p_roughness=	0.00;
%     Xall={};
%     MCSIMS=50;
%     for epoch=1:MCSIMS
%         %Constants
%         SensorNodesID={'JUNCTION-17' 'JUNCTION-31' 'JUNCTION-45' 'JUNCTION-83' 'JUNCTION-122'};
%         ENopen('Network_1.inp');
%         patcount = ENgetcount('pattern'); %get number of patterns
%         for i=1:patcount
%             for j=1:ENgetpatternlen(i)
%                 pat1=ENgetpatternvalue(i,j);
%                 pat2(i,j)=p_pattern*(2*rand-1)*pat1+pat1;
%                 ENsetpatternvalue(i,j,pat2(i,j));
%             end
%         end    
%         NNodes=ENgetcount('nodes');
%         %bd1=ENgetnodevalue(1:NNodes,'BASEDEMAND');
%         %bd2=p_basedemands*(2*rand(1,length(bd1))-1).*bd1+bd1;
%         %bd1=ENgetlinkvalue(1:NNodes,'ROUGHNESS');
%         %bd3=round(p_roughness*(2*rand(1,length(bd1))-1).*bd1+bd1);
%         %ENsetnodevalue(1:NNodes,'BASEDEMAND',bd2);
%         %ENsetlinkvalue(1:NNodes,'ROUGHNESS',bd3);
%         SensorNodesIndex=ENgetnodeindex(SensorNodesID);
% 
%         %InjectionConcentration=rand(size(Scenarios),1);
%         %InjectionConcentration=[0.0219673412022960;0.205103586989038;0.175986524753266;0.805521528146007;0.400323549937608;0.237903801369436;0.449189616110730;0.529877973035852;0.659092813571493;0.372917696075941;0.627717948345336;0.0555578400639621;0.760617955010672;0.705969864365631;0.235510393155511;0.223177764668678;0.948690786468187;0.646048170815244;0.131606891812574;0.917030693924535;0.534872789650631;0.606975658148050;0.439886494278855;0.172309344714652;0.00315661914793617;0.0532980193632180;0.779811437604861;0.290831824900038;0.0104810949463775;0.155762763766461;0.904770622916879;0.479859363976801;0.996330358086308;0.324328356573511;0.986688931000740;0.280863329433307;0.469977785586369;0.916642350105868;0.00797822932152927;0.0901002069423442;0.314178079978646;0.390990201100237;0.372309891680400;0.412349472480058;0.357583972326286;0.913822887890890;0.621276782183571;0.798878159280344;0.745223024741385;0.963376828452282;0.474355797504241;0.497888653770969;0.0146039286696370;0.448229150589662;0.387333960452738;0.921873329170921;0.925043375662083;0.204014752620838;0.875947298424294;0.0462446171074382;0.233279724714011;0.732333268379948;0.325241661782023;0.336609570466266;0.397050826529530;0.233241481815112;0.0895848665803600;0.652852616111214;0.493918981167450;0.296316481333373;0.191101770005702;0.847448485832405;0.0667013852236333;0.0501814536052670;0.399690743721878;0.602329733596337;0.355832553634342;0.477728932387069;0.190166629473756;0.130541565423152;0.0120900669191452;0.197754710073469;0.663412204786861;0.968925852779730;0.736807668924708;0.526491617563410;0.744616388224352;0.767636886689643;0.673154592827500;0.709241651794520;0.224441710498390;0.191828346434901;0.0590185313760389;0.924456837086220;0.346060908095008;0.245682352802568;0.183303552765075;0.782811322613997;0.709899173448747;0.275408153084762;0.784828895602761;0.619248395608388;0.707784990178321;0.742329927041349;0.339083783952093;0.981156882821190;0.303729575734460;0.782979369062455;0.534255832682483;0.237779894488761;0.366686672608688;0.902906534216789;0.150120581570138;0.0766144493020207;0.659049419061770;0.643586171159328;0.752778674826389;0.951187807112554;0.613474140695051;0.659882661728134;0.647895664744031;0.182437352921086;0.224590544693447;0.693284662763255;0.0353270620272155;0.741931491411259;0.642576149032720;0.777336792916682;0.699478550674151;0.136001180455089;0.771839908683598;0.313345245231569;0.393536606986791;0.169753626999331;0.0492089777482715;0.0552890151996580;0.242478460652045;0.335488178923488;0.549823167058557;0.877968753165551;0.0208344534136515;0.164658523241365;0.415800117615517;0.352576763998986;0.757672530951757;0.202227706183785;0.841057830881820;0.658963630748430;0.201741988864607;0.677606847452748;0.538285138336143;0.958320015556328;0.484501455204795;0.0159576269872289;0.199836774356587;0.656666611161393;0.595733789538841;0.497800779295061;0.537697612092689;0.0837664418312565;0.862587857927470;0.514128186979391;0.952438562620635;0.634921965019275;0.133466078961951;0.164389113506483;0.887830703467052;0.770633170740043;0.0317006278930701;0.792452998828354;0.757551308142744;0.164835955093073;0.397897249272977;0.459068530918597;0.564799148852378;0.579294761912569;0.207063464544277;0.115648595670075;0.705947426942153;0.858404616759347;0.206393874346462;0.861846140987168;0.0480915713347921;0.275039423850849;0.587596661219186;0.737085110851138;0.189458075067707;0.221867662957808;0.929811331876466;0.339054847759686;0.494826297040482;0.545574359384167;0.468258169697718;0.0150581095437790;0.0816471022933941;0.242848245074436;0.550454966048922;0.496614384230512;0.597955762221457;0.842495656033277;0.824490951292445;0.219418372129751;0.764580384718525;0.302525964240789;0.553880994931739;0.0778818177421958;0.959710793085262;0.859299383992003;0.244746753594255;0.458687658635288;0.163478683290760;0.586230067809220;0.768749669552199;0.375696163799472;0.325424977729761;0.417600704085827;0.615033570497778;0.869219356155591;0.969718907014336;0.0656701899439423;0.718882387838737;0.256292405657606;0.506461887390568;0.104941373274169;0.749660618952318;0.546022731599409;0.00404999125937465;0.0682030963097713;0.289439678326920;0.612673640536458;0.205876496250684;0.166272485240489;0.541659436906529;0.670156088038420;0.313371661730749;0.837518708704747;0.176937200677086;0.783531779788216;0.818622900554269;0.595089615599760;0.671169385160864;0.343856398641996;0.194491976031331;0.826641158585735;0.357952350451589;0.105154039852859;0.323947806993475;0.590792139335904;0.443485818544163;0.666152271752317;0.0212313411856216;0.835151306742407;0.388012419635436;0.324736812768847;0.851612206013693;0.0463464721321810;0.945157125566694;0.255809399418444;0.388576025789872;0.797265450375744;0.640424465127487;0.613985397673205;0.252578693559663;0.0901026572520391;0.355360435021743;0.542831410441004;0.367515281945241;0.829343653670207;0.778787235160725;0.0770613463023032;0.170047302809566;0.985018320374665;0.202910536994650;0.317395269087234;0.462287549144722;0.666838475347887;0.554255171937056;0.366674746091792;0.702457564744380;0.204290658796341;0.513102390111006;0.711870595678627;0.409101570681250;0.770098439776385;0.0444773216938960;0.530345709310074;0.520336374417104;0.293444828266951;0.927228682640581;0.932469140241141;0.00884003285730259;0.574432232684657;0.482534731031645;0.961224448849086;0.299311806587182;0.533533310766115;0.0943540460869456;0.808452583294573;0.662567431881357;0.770827629962390;0.299976777890686;0.709706008764778;0.0288893096283494;0.542626923668490;0.930706096315154;0.377360768791922;0.302441085829605;0.127329538169936;0.0275480221153926;0.999607693403777;0.406503037273187;0.0965474504495726;0.672999705967028;0.106058187832152;0.519962894972396;0.0163758010679743;0.228088549444493;0.484250513596577;0.798382017667583;0.406570939070811;0.237772963120496;0.250191166182138;0.962930023187273;0.964899708500551;0.0694007687593814;0.418720538922921;0.436097677534492;0.493666322200404;0.0498772221849660;0.286473262722824;0.756126582508966;0.219472228185959;0.669739121417393;0.305413662132534;0.0874194614996293;0.258889424269502;0.154553697516468;0.583994159281251;0.189835039987152;0.557517064063585;0.189295716671876;0.493110104227956;0.701521759248116;0.476207683084629;0.622529603365124;0.855043757639380;0.720434645060652;0.345079534382131;0.751734360471244;0.399396440200227;0.655970445208238;0.895272614851255;0.846837805047090;0.802989426442883;0.843290225529713;0.178820477881851;0.435771760268031;0.0159748247898998;0.488880243845694;0.610258314577052;0.611493096505987;0.364472976124134;0.697309718326344;0.684435910864005;0.314353891329073;0.345851567734895;0.727298920381488;0.712954851665047;0.632191934451550;0.249842327204460;0.0999933253508030;0.587819170946171;0.476806092298034;0.679993253052232;0.646604048854953;0.474249105190043;0.704710929051373;0.0765845664202164;0.156807824576650;0.469107659752065;0.292437452959100;0.996271883601449;0.341547689559659;0.392018429186204;0.653739332525870;0.396961762289033;0.736338791780332;0.646073452032205;0.556508305276049;0.235086774562992;0.103420080199568;0.181287914133299;0.905972838358010;0.685494283067758;0.102415519814200;0.297641517267396;0.460980713116462;0.702845348372518;0.721770096906354;0.790018705087723;0.844376409353864;0.434312010386173;0.481958560404348;0.277524715884367;0.357899868561840;0.223090918838555;0.489072919585310;0.848559470311068;0.739017518115704;0.667426970632480;0.445095420090992;0.718725469298067;0.618962492616364;0.902613403230260;0.223468090977272;0.828205055011532;0.642359578815456;0.137441151373759;0.973431138775047;0.457149392206757;0.309834818965679;0.393802356158291;0.636199952399451;0.612599977577385;0.967823143102146;0.203566117772630;0.335741404600321;0.805787117595685;0.864085430681745;0.683833468092528;0.189098231116821;0.173970380413332;0.920183606874283;0.525880736078080;0.477531264292789;0.867958968909438;0.786390460928153;0.864476819459571;0.261904657009013;0.831570350486585;0.202880628035814;0.814715397923587;0.921692901720150;0.892599210558738;0.914931860712791;0.259782999874923;0.172878897829391;0.575635818566957;0.711202654853092;0.183020115915230;0.0190881872638539;0.815163343593089;0.450315769040173;0.457130258184453;0.988249306095880;0.506087553457398;0.813510958484146;0.678679243046175;0.562037877068873;0.170599896540213;0.272461151365406;0.254570998369982;0.574769604287469;0.152739259485500;0.0887341727915845;0.355242108160277;0.554111849774659;0.957859162687259;0.738947284752013;0.487014827079612;0.258198727042507;0.546005403411577;0.712815138377629;0.284030712807565;0.704190156750470;0.323964505141584;0.871437914609647;0.257030844342444;0.917400863448810;0.756311984153610;0.335517669718488;0.0454749586272403;0.297629648026838;0.261494387062962;0.936163367208170;0.0977126677044261;0.256806108288842;0.140262010572600;0.383611693691281;0.361735869367484;0.694756459302621;0.771811499154107;0.835866283083272;0.404619780557519;0.444651830217173;0.263310460030711;0.458901736167679;0.761479770187978;0.190497549339429;0.692311747787666;0.683545067293358;0.341945999461201;0.0864129444055320;0.342356623775492;0.987775794690371;0.547781361056390;0.561335274745401;0.361962645948847;0.506190462273634;0.543099432970909;0.872169942069878;0.560216368436914;0.556504319215428;0.168093053702308;0.139953574696534;0.199729924648874;0.860843573632112;0.197942034899230;0.811780551360818;0.595726721266157;0.379004320306240;0.925611386972299;0.750580843421901;0.0122353918907397;0.640231507662792;0.370949288537237;0.544692445334370;0.645928734748591;0.124244919570277;0.184363217644563;0.592598952163290;0.810589008410736;0.569464359231975;0.987485611805453;0.670677614244948;0.0786626148403914;0.0825676224578953;0.714030649845503;0.713131953362903;0.608740170304077;0.0960423006192047;0.182946506972865;0.781942692949410;0.110840400732514;0.894615111357819;0.796176590861835;0.339962614858506;0.751667926903660;0.282847469804272;0.817425000396289;0.461981660435899;0.525766946154538;0.565064019321028;0.0309727285201534;0.558648238218691;0.200939741544863;0.194236144513933;0.526880845672861;0.286373223777103;0.0747720217680428;0.693369855495808;0.467161318039131;0.580272283675276;0.636271730361633;0.818972187963767;0.465563107033057;0.719139904584335;0.584376348920342;0.613296304183684;0.670984415184234;0.235066001412955;0.754285747536591;0.280558847487233;0.352549717925745;0.303109177995058;0.355954562945270;0.528339421156952;0.800651384890383;0.547825852664106;0.309105725637221;0.139930784767461;0.816699586723326;0.269954058933050;0.117868487778059;0.0156740858292552;0.434360532292333;0.297466237236497;0.515049233806808;0.432472591024112;0.566837342254276;0.835211267618095;0.395774857325375;0.788027067570028;0.370924649467191;0.130583595079642;0.718482503536382;0.535436935972160;0.0885828840958806;0.812532999465490;0.242122016494219;0.344731218342079;0.897586675313109;0.739251987421537;0.608152593769204;0.220643479014115;0.354951790233586;0.674738455877983;0.329227941264039;0.334008824701425;0.686316756851187;0.925732397905426;0.784411596499575;0.605702368358943;0.0397050087525067;0.322082103380040;0.233911508337553;0.350720629259348;0.561615961865343;0.0794710708220820;0.670287306732632;0.518764255344292;0.870839571520146;0.200678539090175;0.804206488562844;0.298453275718937;0.104205008179045;0.373572465206297;0.632422722239244;0.128692674976165;0.937788324401615;0.408368217948996;0.444639068769589;0.0488288104761526;0.665817672696811;0.397625015302387;0.883632187211715;0.206170467290175;0.107043745977359;0.0842386414689192;];
%         %InjectionConcentration=0;
% 
%         %ENopen('Network_1.inp')
% 
%         ENsettimeparam('DURATION',tduration)
% 
% 
% 
% 
%         %NodeId=Scenarios(epoch,1);
%         MSXopen('Arsenite.msx')
%         MSXsolveH()
%         CLid= MSXgetindex('MSX_SPECIES', 'Chlorine');
%         %AS3id= MSXgetindex('MSX_SPECIES', 'AsIII');
%         %Create Chlorine Control Signal
%         calllib('epanetmsx','MSXsetpattern',1,Ucl1,length(Ucl1));
%         calllib('epanetmsx','MSXsetpattern',2,Ucl2,length(Ucl1));
% 
%         %Create Contamination Signal
%         %PAS3=zeros(1,TD*48); % for 2-hour intervals
%         %PAS3((4*48+1+Scenarios(epoch,2)):end)=1;
%         %calllib('epanetmsx','MSXsetpattern',4,PAS3,length(PAS3));
%         %calllib('epanetmsx','MSXsetsource',NodeId,...
%         %    MSXgetindex('MSX_SPECIES', 'AsIII'),...
%         %    ConstantsMSX('MSX_SETPOINT'),...
%         %    InjectionConcentration(1),4);        
%         %calllib('epanetmsx','MSXsetsource',1, 2,2,0,4);        
% 
%         MSXinit(0)
%         [errorcode,tleft,t]=MSXstep();
%         KMAX=double(tleft/300);
%         C=zeros(tleft/t,3*length(SensorNodesIndex)+1);
%         k=1;
%         perc=0.0;
%         h = waitbar(0,'Initializing waitbar...');
%         %T00=tleft*TD0/TD;
%         while tleft>0
%             XT2(k)=t;
%             for i=1:length(SensorNodesIndex)
%                 X{i}(k,1)=MSXgetqual('MSX_NODE', SensorNodesIndex(i), 1);
%                 X{i}(k,2)=MSXgetqual('MSX_NODE', SensorNodesIndex(i), 2);
%                 X{i}(k,3)=MSXgetqual('MSX_NODE', SensorNodesIndex(i), 3);
%             end
%             [errorcode,tleft,t]=MSXstep();
%             k=k+1;
%             perc=k/KMAX;
%             waitbar(perc,h,sprintf('Simulation:%d',epoch));%,sprintf('%d%% along... (%d/%d/%d)',floor(perc*100),j,length(InjectionNodes),l))  
%         end
%         close(h)
%         MSXclose()
%         delete  s*
%         Xall{epoch}=X;
%         ENclose() 
%         save Xallbounds.mat Xall
%     end
%     
%     %POST PROCESSING
%     Xall2={};
%     for i=1:5
%         for j=1:size(Xall,2)
%             Xall2{i}(:,j)=Xall{j}{i}(:,1);
%         end
%         Xmean{i}=mean(Xall2{i}');
%         Xstd{i}=std(Xall2{i}');
%         Xstd3s{i}=3*Xstd{i};
%         Xupper3s{i}=Xmean{i}+Xstd3s{i};
%         Xlower3s{i}=Xmean{i}-Xstd3s{i};
%         Xlower3s{i}(find(Xlower3s{i}<0))=0;
%         Xmins{i}=min(Xall2{i}');
%         Xmaxs{i}=max(Xall2{i}');
%     end  
%     save XBOUNDS.mat XT2 Xmean Xupper3s Xlower3s Xmins Xmaxs
% end    
